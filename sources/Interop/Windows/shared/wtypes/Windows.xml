<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from shared/wtypes.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <class name="Windows" access="public" static="true">
            <constant name="ROTFLAGS_REGISTRATIONKEEPSALIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1
            </code>
                </value>
            </constant>
            <constant name="ROTFLAGS_ALLOWANYCLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2
            </code>
                </value>
            </constant>
            <constant name="ROT_COMPARE_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2048
            </code>
                </value>
            </constant>
            <constant name="WDT_INPROC_CALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x48746457)
            </code>
                </value>
            </constant>
            <constant name="WDT_REMOTE_CALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x52746457)
            </code>
                </value>
            </constant>
            <constant name="WDT_INPROC64_CALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x50746457)
            </code>
                </value>
            </constant>
            <constant name="DECIMAL_NEG" access="public">
                <type primitive="True">byte</type>
                <value>
                    <code>
                        <value></value>((byte)0x80)
            </code>
                </value>
            </constant>
            <constant name="VARIANT_TRUE" access="public">
                <type primitive="True">short</type>
                <value>
                    <code>
                        <value></value>((short)-1)
            </code>
                </value>
            </constant>
            <constant name="VARIANT_FALSE" access="public">
                <type primitive="True">short</type>
                <value>
                    <code>
                        <value></value>((short)0)
            </code>
                </value>
            </constant>
        </class>
    </namespace>
</bindings>
