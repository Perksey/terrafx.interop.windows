<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from shared/dxgi1_3.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDXGIFactoryMedia" access="public" native="struct IDXGIFactoryMedia : IUnknown" uuid="41e7d1f2-a591-4f7b-a2e5-fa9c843e1c12" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDXGIFactoryMedia*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDXGIFactoryMedia*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDXGIFactoryMedia*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDXGIFactoryMedia*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDXGIFactoryMedia*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDXGIFactoryMedia*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="CreateSwapChainForCompositionSurfaceHandle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDevice">
                    <type>IUnknown*</type>
                </param>
                <param name="hSurface">
                    <type>IntPtr</type>
                </param>
                <param name="pDesc">
                    <type>DXGI_SWAP_CHAIN_DESC1*</type>
                </param>
                <param name="pRestrictToOutput">
                    <type>IDXGIOutput*</type>
                </param>
                <param name="ppSwapChain">
                    <type>IDXGISwapChain1**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDXGIFactoryMedia*, IUnknown*, IntPtr, DXGI_SWAP_CHAIN_DESC1*, IDXGIOutput*, IDXGISwapChain1**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDXGIFactoryMedia*)Unsafe.AsPointer(ref this)</param>, <param name="pDevice">pDevice</param>, <param name="hSurface">hSurface</param>, <param name="pDesc">pDesc</param>, <param name="pRestrictToOutput">pRestrictToOutput</param>, <param name="ppSwapChain">ppSwapChain</param>);
        </code>
                </body>
            </function>
            <function name="CreateDecodeSwapChainForCompositionSurfaceHandle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDevice">
                    <type>IUnknown*</type>
                </param>
                <param name="hSurface">
                    <type>IntPtr</type>
                </param>
                <param name="pDesc">
                    <type>DXGI_DECODE_SWAP_CHAIN_DESC*</type>
                </param>
                <param name="pYuvDecodeBuffers">
                    <type>IDXGIResource*</type>
                </param>
                <param name="pRestrictToOutput">
                    <type>IDXGIOutput*</type>
                </param>
                <param name="ppSwapChain">
                    <type>IDXGIDecodeSwapChain**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDXGIFactoryMedia*, IUnknown*, IntPtr, DXGI_DECODE_SWAP_CHAIN_DESC*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDXGIFactoryMedia*)Unsafe.AsPointer(ref this)</param>, <param name="pDevice">pDevice</param>, <param name="hSurface">hSurface</param>, <param name="pDesc">pDesc</param>, <param name="pYuvDecodeBuffers">pYuvDecodeBuffers</param>, <param name="pRestrictToOutput">pRestrictToOutput</param>, <param name="ppSwapChain">ppSwapChain</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
