<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from shared/hidpi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="HIDP_VALUE_CAPS" access="public" unsafe="true">
            <field name="UsagePage" access="public">
                <type native="USAGE">ushort</type>
            </field>
            <field name="ReportID" access="public">
                <type native="UCHAR">byte</type>
            </field>
            <field name="IsAlias" access="public">
                <type native="BOOLEAN">byte</type>
            </field>
            <field name="BitField" access="public">
                <type native="USHORT">ushort</type>
            </field>
            <field name="LinkCollection" access="public">
                <type native="USHORT">ushort</type>
            </field>
            <field name="LinkUsage" access="public">
                <type native="USAGE">ushort</type>
            </field>
            <field name="LinkUsagePage" access="public">
                <type native="USAGE">ushort</type>
            </field>
            <field name="IsRange" access="public">
                <type native="BOOLEAN">byte</type>
            </field>
            <field name="IsStringRange" access="public">
                <type native="BOOLEAN">byte</type>
            </field>
            <field name="IsDesignatorRange" access="public">
                <type native="BOOLEAN">byte</type>
            </field>
            <field name="IsAbsolute" access="public">
                <type native="BOOLEAN">byte</type>
            </field>
            <field name="HasNull" access="public">
                <type native="BOOLEAN">byte</type>
            </field>
            <field name="Reserved" access="public">
                <type native="UCHAR">byte</type>
            </field>
            <field name="BitSize" access="public">
                <type native="USHORT">ushort</type>
            </field>
            <field name="ReportCount" access="public">
                <type native="USHORT">ushort</type>
            </field>
            <field name="Reserved2" access="public">
                <type native="USHORT [5]" count="5" fixed="_Reserved2_e__FixedBuffer">ushort</type>
            </field>
            <field name="UnitsExp" access="public">
                <type native="ULONG">uint</type>
            </field>
            <field name="Units" access="public">
                <type native="ULONG">uint</type>
            </field>
            <field name="LogicalMin" access="public">
                <type native="LONG">int</type>
            </field>
            <field name="LogicalMax" access="public">
                <type native="LONG">int</type>
            </field>
            <field name="PhysicalMin" access="public">
                <type native="LONG">int</type>
            </field>
            <field name="PhysicalMax" access="public">
                <type native="LONG">int</type>
            </field>
            <field name="Anonymous" access="public">
                <type native="_HIDP_VALUE_CAPS::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/shared/hidpi.h:134:5)">_Anonymous_e__Union</type>
            </field>
            <field name="Range" access="public">
                <type native="">ref _Anonymous_e__Union._Range_e__Struct</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Range, 1));
        </code>
                </get>
            </field>
            <field name="NotRange" access="public">
                <type native="">ref _Anonymous_e__Union._NotRange_e__Struct</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.NotRange, 1));
        </code>
                </get>
            </field>
            <struct name="_Anonymous_e__Union" access="public" layout="Explicit">
                <field name="Range" access="public" offset="0">
                    <type native="struct (anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/shared/hidpi.h:135:9)">_Range_e__Struct</type>
                </field>
                <field name="NotRange" access="public" offset="0">
                    <type native="struct (anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/shared/hidpi.h:142:9)">_NotRange_e__Struct</type>
                </field>
                <struct name="_Range_e__Struct" access="public">
                    <field name="UsageMin" access="public">
                        <type native="USAGE">ushort</type>
                    </field>
                    <field name="UsageMax" access="public">
                        <type native="USAGE">ushort</type>
                    </field>
                    <field name="StringMin" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="StringMax" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="DesignatorMin" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="DesignatorMax" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="DataIndexMin" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="DataIndexMax" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                </struct>
                <struct name="_NotRange_e__Struct" access="public">
                    <field name="Usage" access="public">
                        <type native="USAGE">ushort</type>
                    </field>
                    <field name="Reserved1" access="public">
                        <type native="USAGE">ushort</type>
                    </field>
                    <field name="StringIndex" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="Reserved2" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="DesignatorIndex" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="Reserved3" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="DataIndex" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                    <field name="Reserved4" access="public">
                        <type native="USHORT">ushort</type>
                    </field>
                </struct>
            </struct>
        </struct>
    </namespace>
</bindings>
