<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from winrt/windows.graphics.effects.interop.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IGraphicsEffectD2D1Interop" access="public" native="struct IGraphicsEffectD2D1Interop : IUnknown" uuid="2fc57384-a068-44d7-a331-30982fcf7177" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetEffectId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="id">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>, <param name="id">id</param>);
        </code>
                </body>
            </function>
            <function name="GetNamedPropertyMapping" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="name">
                    <type>ushort*</type>
                </param>
                <param name="index">
                    <type>uint*</type>
                </param>
                <param name="mapping">
                    <type>GRAPHICS_EFFECT_PROPERTY_MAPPING*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, ushort*, uint*, GRAPHICS_EFFECT_PROPERTY_MAPPING*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>, <param name="name">name</param>, <param name="index">index</param>, <param name="mapping">mapping</param>);
        </code>
                </body>
            </function>
            <function name="GetPropertyCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="count">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>, <param name="count">count</param>);
        </code>
                </body>
            </function>
            <function name="GetProperty" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="value">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, uint, void**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="GetSource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="source">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, uint, void**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="source">source</param>);
        </code>
                </body>
            </function>
            <function name="GetSourceCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="count">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IGraphicsEffectD2D1Interop*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IGraphicsEffectD2D1Interop*)Unsafe.AsPointer(ref this)</param>, <param name="count">count</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
