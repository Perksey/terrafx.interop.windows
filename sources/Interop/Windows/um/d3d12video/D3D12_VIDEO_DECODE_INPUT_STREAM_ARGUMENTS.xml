<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d3d12video.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS" access="public" unsafe="true">
            <field name="NumFrameArguments" access="public">
                <type native="UINT">uint</type>
            </field>
            <field name="FrameArguments" access="public">
                <type native="D3D12_VIDEO_DECODE_FRAME_ARGUMENT [10]" count="10" fixed="_FrameArguments_e__FixedBuffer">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
            </field>
            <field name="ReferenceFrames" access="public">
                <type native="">D3D12_VIDEO_DECODE_REFERENCE_FRAMES</type>
            </field>
            <field name="CompressedBitstream" access="public">
                <type native="">D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM</type>
            </field>
            <field name="pHeap" access="public">
                <type native="ID3D12VideoDecoderHeap *">ID3D12VideoDecoderHeap*</type>
            </field>
            <struct name="_FrameArguments_e__FixedBuffer" access="public">
                <field name="e0" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e1" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e2" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e3" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e4" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e5" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e6" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e7" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e8" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <field name="e9" access="public">
                    <type native="">D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                </field>
                <indexer access="public">
                    <type>ref D3D12_VIDEO_DECODE_FRAME_ARGUMENT</type>
                    <param name="index">
                        <type>int</type>
                    </param>
                    <get inlining="aggressive">
                        <code>return ref AsSpan()[index];
        </code>
                    </get>
                </indexer>
                <function name="AsSpan" access="public" unsafe="true">
                    <type>Span&lt;D3D12_VIDEO_DECODE_FRAME_ARGUMENT&gt;</type>
                    <code>MemoryMarshal.CreateSpan(ref e0, 10);
        </code>
                </function>
            </struct>
        </struct>
    </namespace>
</bindings>
