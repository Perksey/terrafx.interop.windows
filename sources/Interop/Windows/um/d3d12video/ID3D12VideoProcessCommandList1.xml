<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d3d12video.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ID3D12VideoProcessCommandList1" access="public" native="struct ID3D12VideoProcessCommandList1 : ID3D12VideoProcessCommandList" uuid="542c5c4d-7596-434f-8c93-4efa6766f267" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetPrivateData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guid">
                    <type>Guid*</type>
                </param>
                <param name="pDataSize">
                    <type>uint*</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, Guid*, uint*, void*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="guid">guid</param>, <param name="pDataSize">pDataSize</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
            <function name="SetPrivateData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guid">
                    <type>Guid*</type>
                </param>
                <param name="DataSize">
                    <type>uint</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, Guid*, uint, void*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="guid">guid</param>, <param name="DataSize">DataSize</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
            <function name="SetPrivateDataInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guid">
                    <type>Guid*</type>
                </param>
                <param name="pData">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, Guid*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="guid">guid</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
            <function name="SetName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Name">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="Name">Name</param>);
        </code>
                </body>
            </function>
            <function name="GetDevice" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvDevice">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvDevice">ppvDevice</param>);
        </code>
                </body>
            </function>
            <function name="GetType" access="public" unsafe="true">
                <type>D3D12_COMMAND_LIST_TYPE</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, D3D12_COMMAND_LIST_TYPE&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Close" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Reset" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pAllocator">
                    <type>ID3D12CommandAllocator*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ID3D12CommandAllocator*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="pAllocator">pAllocator</param>);
        </code>
                </body>
            </function>
            <function name="ClearState" access="public" unsafe="true">
                <type>void</type>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, void&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="ResourceBarrier" access="public" unsafe="true">
                <type>void</type>
                <param name="NumBarriers">
                    <type>uint</type>
                </param>
                <param name="pBarriers">
                    <type>D3D12_RESOURCE_BARRIER*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, uint, D3D12_RESOURCE_BARRIER*, void&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="NumBarriers">NumBarriers</param>, <param name="pBarriers">pBarriers</param>);
        </code>
                </body>
            </function>
            <function name="DiscardResource" access="public" unsafe="true">
                <type>void</type>
                <param name="pResource">
                    <type>ID3D12Resource*</type>
                </param>
                <param name="pRegion">
                    <type>D3D12_DISCARD_REGION*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ID3D12Resource*, D3D12_DISCARD_REGION*, void&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="pResource">pResource</param>, <param name="pRegion">pRegion</param>);
        </code>
                </body>
            </function>
            <function name="BeginQuery" access="public" unsafe="true">
                <type>void</type>
                <param name="pQueryHeap">
                    <type>ID3D12QueryHeap*</type>
                </param>
                <param name="Type">
                    <type>D3D12_QUERY_TYPE</type>
                </param>
                <param name="Index">
                    <type>uint</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ID3D12QueryHeap*, D3D12_QUERY_TYPE, uint, void&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="pQueryHeap">pQueryHeap</param>, <param name="Type">Type</param>, <param name="Index">Index</param>);
        </code>
                </body>
            </function>
            <function name="EndQuery" access="public" unsafe="true">
                <type>void</type>
                <param name="pQueryHeap">
                    <type>ID3D12QueryHeap*</type>
                </param>
                <param name="Type">
                    <type>D3D12_QUERY_TYPE</type>
                </param>
                <param name="Index">
                    <type>uint</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ID3D12QueryHeap*, D3D12_QUERY_TYPE, uint, void&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="pQueryHeap">pQueryHeap</param>, <param name="Type">Type</param>, <param name="Index">Index</param>);
        </code>
                </body>
            </function>
            <function name="ResolveQueryData" access="public" unsafe="true">
                <type>void</type>
                <param name="pQueryHeap">
                    <type>ID3D12QueryHeap*</type>
                </param>
                <param name="Type">
                    <type>D3D12_QUERY_TYPE</type>
                </param>
                <param name="StartIndex">
                    <type>uint</type>
                </param>
                <param name="NumQueries">
                    <type>uint</type>
                </param>
                <param name="pDestinationBuffer">
                    <type>ID3D12Resource*</type>
                </param>
                <param name="AlignedDestinationBufferOffset">
                    <type>ulong</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ID3D12QueryHeap*, D3D12_QUERY_TYPE, uint, uint, ID3D12Resource*, ulong, void&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="pQueryHeap">pQueryHeap</param>, <param name="Type">Type</param>, <param name="StartIndex">StartIndex</param>, <param name="NumQueries">NumQueries</param>, <param name="pDestinationBuffer">pDestinationBuffer</param>, <param name="AlignedDestinationBufferOffset">AlignedDestinationBufferOffset</param>);
        </code>
                </body>
            </function>
            <function name="SetPredication" access="public" unsafe="true">
                <type>void</type>
                <param name="pBuffer">
                    <type>ID3D12Resource*</type>
                </param>
                <param name="AlignedBufferOffset">
                    <type>ulong</type>
                </param>
                <param name="Operation">
                    <type>D3D12_PREDICATION_OP</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ID3D12Resource*, ulong, D3D12_PREDICATION_OP, void&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="pBuffer">pBuffer</param>, <param name="AlignedBufferOffset">AlignedBufferOffset</param>, <param name="Operation">Operation</param>);
        </code>
                </body>
            </function>
            <function name="SetMarker" access="public" unsafe="true">
                <type>void</type>
                <param name="Metadata">
                    <type>uint</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <param name="Size">
                    <type>uint</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, uint, void*, uint, void&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="Metadata">Metadata</param>, <param name="pData">pData</param>, <param name="Size">Size</param>);
        </code>
                </body>
            </function>
            <function name="BeginEvent" access="public" unsafe="true">
                <type>void</type>
                <param name="Metadata">
                    <type>uint</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <param name="Size">
                    <type>uint</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, uint, void*, uint, void&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="Metadata">Metadata</param>, <param name="pData">pData</param>, <param name="Size">Size</param>);
        </code>
                </body>
            </function>
            <function name="EndEvent" access="public" unsafe="true">
                <type>void</type>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, void&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="ProcessFrames" access="public" unsafe="true">
                <type>void</type>
                <param name="pVideoProcessor">
                    <type>ID3D12VideoProcessor*</type>
                </param>
                <param name="pOutputArguments">
                    <type>D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS*</type>
                </param>
                <param name="NumInputStreams">
                    <type>uint</type>
                </param>
                <param name="pInputArguments">
                    <type>D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ID3D12VideoProcessor*, D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS*, uint, D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS*, void&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="pVideoProcessor">pVideoProcessor</param>, <param name="pOutputArguments">pOutputArguments</param>, <param name="NumInputStreams">NumInputStreams</param>, <param name="pInputArguments">pInputArguments</param>);
        </code>
                </body>
            </function>
            <function name="WriteBufferImmediate" access="public" unsafe="true">
                <type>void</type>
                <param name="Count">
                    <type>uint</type>
                </param>
                <param name="pParams">
                    <type>D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*</type>
                </param>
                <param name="pModes">
                    <type>D3D12_WRITEBUFFERIMMEDIATE_MODE*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, uint, D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*, D3D12_WRITEBUFFERIMMEDIATE_MODE*, void&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="Count">Count</param>, <param name="pParams">pParams</param>, <param name="pModes">pModes</param>);
        </code>
                </body>
            </function>
            <function name="ProcessFrames1" access="public" unsafe="true">
                <type>void</type>
                <param name="pVideoProcessor">
                    <type>ID3D12VideoProcessor*</type>
                </param>
                <param name="pOutputArguments">
                    <type>D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS*</type>
                </param>
                <param name="NumInputStreams">
                    <type>uint</type>
                </param>
                <param name="pInputArguments">
                    <type>D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS1*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D12VideoProcessCommandList1*, ID3D12VideoProcessor*, D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS*, uint, D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS1*, void&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(ID3D12VideoProcessCommandList1*)Unsafe.AsPointer(ref this)</param>, <param name="pVideoProcessor">pVideoProcessor</param>, <param name="pOutputArguments">pOutputArguments</param>, <param name="NumInputStreams">NumInputStreams</param>, <param name="pInputArguments">pInputArguments</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
