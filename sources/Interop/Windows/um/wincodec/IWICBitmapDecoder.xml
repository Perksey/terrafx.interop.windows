<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wincodec.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IWICBitmapDecoder" access="public" native="struct IWICBitmapDecoder : IUnknown" uuid="9edde9e7-8dee-47ea-99df-e6faf2ed44bf" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="QueryCapability" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIStream">
                    <type>IStream*</type>
                </param>
                <param name="pdwCapability">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, IStream*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="pIStream">pIStream</param>, <param name="pdwCapability">pdwCapability</param>);
        </code>
                </body>
            </function>
            <function name="Initialize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIStream">
                    <type>IStream*</type>
                </param>
                <param name="cacheOptions">
                    <type>WICDecodeOptions</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, IStream*, WICDecodeOptions, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="pIStream">pIStream</param>, <param name="cacheOptions">cacheOptions</param>);
        </code>
                </body>
            </function>
            <function name="GetContainerFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguidContainerFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="pguidContainerFormat">pguidContainerFormat</param>);
        </code>
                </body>
            </function>
            <function name="GetDecoderInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIDecoderInfo">
                    <type>IWICBitmapDecoderInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, IWICBitmapDecoderInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="ppIDecoderInfo">ppIDecoderInfo</param>);
        </code>
                </body>
            </function>
            <function name="CopyPalette" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIPalette">
                    <type>IWICPalette*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, IWICPalette*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="pIPalette">pIPalette</param>);
        </code>
                </body>
            </function>
            <function name="GetMetadataQueryReader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIMetadataQueryReader">
                    <type>IWICMetadataQueryReader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, IWICMetadataQueryReader**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="ppIMetadataQueryReader">ppIMetadataQueryReader</param>);
        </code>
                </body>
            </function>
            <function name="GetPreview" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIBitmapSource">
                    <type>IWICBitmapSource**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, IWICBitmapSource**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="ppIBitmapSource">ppIBitmapSource</param>);
        </code>
                </body>
            </function>
            <function name="GetColorContexts" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cCount">
                    <type>uint</type>
                </param>
                <param name="ppIColorContexts">
                    <type>IWICColorContext**</type>
                </param>
                <param name="pcActualCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, uint, IWICColorContext**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="cCount">cCount</param>, <param name="ppIColorContexts">ppIColorContexts</param>, <param name="pcActualCount">pcActualCount</param>);
        </code>
                </body>
            </function>
            <function name="GetThumbnail" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIThumbnail">
                    <type>IWICBitmapSource**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, IWICBitmapSource**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="ppIThumbnail">ppIThumbnail</param>);
        </code>
                </body>
            </function>
            <function name="GetFrameCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="pCount">pCount</param>);
        </code>
                </body>
            </function>
            <function name="GetFrame" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="ppIBitmapFrame">
                    <type>IWICBitmapFrameDecode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapDecoder*, uint, IWICBitmapFrameDecode**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IWICBitmapDecoder*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="ppIBitmapFrame">ppIBitmapFrame</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
