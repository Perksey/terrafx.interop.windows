<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wincodec.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IWICBitmapFrameEncode" access="public" native="struct IWICBitmapFrameEncode : IUnknown" uuid="00000105-a8f2-4877-ba0a-fd2b6645fb94" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Initialize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIEncoderOptions">
                    <type>IPropertyBag2*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, IPropertyBag2*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="pIEncoderOptions">pIEncoderOptions</param>);
        </code>
                </body>
            </function>
            <function name="SetSize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="uiWidth">
                    <type>uint</type>
                </param>
                <param name="uiHeight">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="uiWidth">uiWidth</param>, <param name="uiHeight">uiHeight</param>);
        </code>
                </body>
            </function>
            <function name="SetResolution" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dpiX">
                    <type>double</type>
                </param>
                <param name="dpiY">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, double, double, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="dpiX">dpiX</param>, <param name="dpiY">dpiY</param>);
        </code>
                </body>
            </function>
            <function name="SetPixelFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pPixelFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="pPixelFormat">pPixelFormat</param>);
        </code>
                </body>
            </function>
            <function name="SetColorContexts" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cCount">
                    <type>uint</type>
                </param>
                <param name="ppIColorContext">
                    <type>IWICColorContext**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, uint, IWICColorContext**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="cCount">cCount</param>, <param name="ppIColorContext">ppIColorContext</param>);
        </code>
                </body>
            </function>
            <function name="SetPalette" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIPalette">
                    <type>IWICPalette*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, IWICPalette*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="pIPalette">pIPalette</param>);
        </code>
                </body>
            </function>
            <function name="SetThumbnail" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIThumbnail">
                    <type>IWICBitmapSource*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, IWICBitmapSource*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="pIThumbnail">pIThumbnail</param>);
        </code>
                </body>
            </function>
            <function name="WritePixels" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lineCount">
                    <type>uint</type>
                </param>
                <param name="cbStride">
                    <type>uint</type>
                </param>
                <param name="cbBufferSize">
                    <type>uint</type>
                </param>
                <param name="pbPixels">
                    <type>byte*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, uint, uint, uint, byte*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="lineCount">lineCount</param>, <param name="cbStride">cbStride</param>, <param name="cbBufferSize">cbBufferSize</param>, <param name="pbPixels">pbPixels</param>);
        </code>
                </body>
            </function>
            <function name="WriteSource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIBitmapSource">
                    <type>IWICBitmapSource*</type>
                </param>
                <param name="prc">
                    <type>WICRect*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, IWICBitmapSource*, WICRect*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="pIBitmapSource">pIBitmapSource</param>, <param name="prc">prc</param>);
        </code>
                </body>
            </function>
            <function name="Commit" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetMetadataQueryWriter" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIMetadataQueryWriter">
                    <type>IWICMetadataQueryWriter**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapFrameEncode*, IWICMetadataQueryWriter**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IWICBitmapFrameEncode*)Unsafe.AsPointer(ref this)</param>, <param name="ppIMetadataQueryWriter">ppIMetadataQueryWriter</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
