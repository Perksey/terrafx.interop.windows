<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wincodec.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IWICDevelopRaw" access="public" native="struct IWICDevelopRaw : IWICBitmapFrameDecode" uuid="fbec5e44-f7be-4b65-b7f8-c0c81fef026d" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetSize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="puiWidth">
                    <type>uint*</type>
                </param>
                <param name="puiHeight">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="puiWidth">puiWidth</param>, <param name="puiHeight">puiHeight</param>);
        </code>
                </body>
            </function>
            <function name="GetPixelFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pPixelFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pPixelFormat">pPixelFormat</param>);
        </code>
                </body>
            </function>
            <function name="GetResolution" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDpiX">
                    <type>double*</type>
                </param>
                <param name="pDpiY">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pDpiX">pDpiX</param>, <param name="pDpiY">pDpiY</param>);
        </code>
                </body>
            </function>
            <function name="CopyPalette" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIPalette">
                    <type>IWICPalette*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, IWICPalette*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pIPalette">pIPalette</param>);
        </code>
                </body>
            </function>
            <function name="CopyPixels" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="prc">
                    <type>WICRect*</type>
                </param>
                <param name="cbStride">
                    <type>uint</type>
                </param>
                <param name="cbBufferSize">
                    <type>uint</type>
                </param>
                <param name="pbBuffer">
                    <type>byte*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, WICRect*, uint, uint, byte*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="prc">prc</param>, <param name="cbStride">cbStride</param>, <param name="cbBufferSize">cbBufferSize</param>, <param name="pbBuffer">pbBuffer</param>);
        </code>
                </body>
            </function>
            <function name="GetMetadataQueryReader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIMetadataQueryReader">
                    <type>IWICMetadataQueryReader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, IWICMetadataQueryReader**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="ppIMetadataQueryReader">ppIMetadataQueryReader</param>);
        </code>
                </body>
            </function>
            <function name="GetColorContexts" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cCount">
                    <type>uint</type>
                </param>
                <param name="ppIColorContexts">
                    <type>IWICColorContext**</type>
                </param>
                <param name="pcActualCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint, IWICColorContext**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="cCount">cCount</param>, <param name="ppIColorContexts">ppIColorContexts</param>, <param name="pcActualCount">pcActualCount</param>);
        </code>
                </body>
            </function>
            <function name="GetThumbnail" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIThumbnail">
                    <type>IWICBitmapSource**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, IWICBitmapSource**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="ppIThumbnail">ppIThumbnail</param>);
        </code>
                </body>
            </function>
            <function name="QueryRawCapabilitiesInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pInfo">
                    <type>WICRawCapabilitiesInfo*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, WICRawCapabilitiesInfo*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pInfo">pInfo</param>);
        </code>
                </body>
            </function>
            <function name="LoadParameterSet" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ParameterSet">
                    <type>WICRawParameterSet</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, WICRawParameterSet, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="ParameterSet">ParameterSet</param>);
        </code>
                </body>
            </function>
            <function name="GetCurrentParameterSet" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppCurrentParameterSet">
                    <type>IPropertyBag2**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, IPropertyBag2**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="ppCurrentParameterSet">ppCurrentParameterSet</param>);
        </code>
                </body>
            </function>
            <function name="SetExposureCompensation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ev">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="ev">ev</param>);
        </code>
                </body>
            </function>
            <function name="GetExposureCompensation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pEV">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pEV">pEV</param>);
        </code>
                </body>
            </function>
            <function name="SetWhitePointRGB" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Red">
                    <type>uint</type>
                </param>
                <param name="Green">
                    <type>uint</type>
                </param>
                <param name="Blue">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="Red">Red</param>, <param name="Green">Green</param>, <param name="Blue">Blue</param>);
        </code>
                </body>
            </function>
            <function name="GetWhitePointRGB" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRed">
                    <type>uint*</type>
                </param>
                <param name="pGreen">
                    <type>uint*</type>
                </param>
                <param name="pBlue">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint*, uint*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pRed">pRed</param>, <param name="pGreen">pGreen</param>, <param name="pBlue">pBlue</param>);
        </code>
                </body>
            </function>
            <function name="SetNamedWhitePoint" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="WhitePoint">
                    <type>WICNamedWhitePoint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, WICNamedWhitePoint, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="WhitePoint">WhitePoint</param>);
        </code>
                </body>
            </function>
            <function name="GetNamedWhitePoint" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pWhitePoint">
                    <type>WICNamedWhitePoint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, WICNamedWhitePoint*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pWhitePoint">pWhitePoint</param>);
        </code>
                </body>
            </function>
            <function name="SetWhitePointKelvin" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="WhitePointKelvin">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="WhitePointKelvin">WhitePointKelvin</param>);
        </code>
                </body>
            </function>
            <function name="GetWhitePointKelvin" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pWhitePointKelvin">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pWhitePointKelvin">pWhitePointKelvin</param>);
        </code>
                </body>
            </function>
            <function name="GetKelvinRangeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pMinKelvinTemp">
                    <type>uint*</type>
                </param>
                <param name="pMaxKelvinTemp">
                    <type>uint*</type>
                </param>
                <param name="pKelvinTempStepValue">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint*, uint*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pMinKelvinTemp">pMinKelvinTemp</param>, <param name="pMaxKelvinTemp">pMaxKelvinTemp</param>, <param name="pKelvinTempStepValue">pKelvinTempStepValue</param>);
        </code>
                </body>
            </function>
            <function name="SetContrast" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Contrast">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="Contrast">Contrast</param>);
        </code>
                </body>
            </function>
            <function name="GetContrast" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pContrast">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pContrast">pContrast</param>);
        </code>
                </body>
            </function>
            <function name="SetGamma" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Gamma">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="Gamma">Gamma</param>);
        </code>
                </body>
            </function>
            <function name="GetGamma" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pGamma">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pGamma">pGamma</param>);
        </code>
                </body>
            </function>
            <function name="SetSharpness" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Sharpness">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="Sharpness">Sharpness</param>);
        </code>
                </body>
            </function>
            <function name="GetSharpness" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSharpness">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pSharpness">pSharpness</param>);
        </code>
                </body>
            </function>
            <function name="SetSaturation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Saturation">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="Saturation">Saturation</param>);
        </code>
                </body>
            </function>
            <function name="GetSaturation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSaturation">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pSaturation">pSaturation</param>);
        </code>
                </body>
            </function>
            <function name="SetTint" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Tint">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double, int&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="Tint">Tint</param>);
        </code>
                </body>
            </function>
            <function name="GetTint" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pTint">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pTint">pTint</param>);
        </code>
                </body>
            </function>
            <function name="SetNoiseReduction" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="NoiseReduction">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="NoiseReduction">NoiseReduction</param>);
        </code>
                </body>
            </function>
            <function name="GetNoiseReduction" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pNoiseReduction">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">34</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pNoiseReduction">pNoiseReduction</param>);
        </code>
                </body>
            </function>
            <function name="SetDestinationColorContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pColorContext">
                    <type>IWICColorContext*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, IWICColorContext*, int&gt;)(lpVtbl[<vtbl explicit="False">35</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pColorContext">pColorContext</param>);
        </code>
                </body>
            </function>
            <function name="SetToneCurve" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cbToneCurveSize">
                    <type>uint</type>
                </param>
                <param name="pToneCurve">
                    <type>WICRawToneCurve*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint, WICRawToneCurve*, int&gt;)(lpVtbl[<vtbl explicit="False">36</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="cbToneCurveSize">cbToneCurveSize</param>, <param name="pToneCurve">pToneCurve</param>);
        </code>
                </body>
            </function>
            <function name="GetToneCurve" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cbToneCurveBufferSize">
                    <type>uint</type>
                </param>
                <param name="pToneCurve">
                    <type>WICRawToneCurve*</type>
                </param>
                <param name="pcbActualToneCurveBufferSize">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, uint, WICRawToneCurve*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">37</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="cbToneCurveBufferSize">cbToneCurveBufferSize</param>, <param name="pToneCurve">pToneCurve</param>, <param name="pcbActualToneCurveBufferSize">pcbActualToneCurveBufferSize</param>);
        </code>
                </body>
            </function>
            <function name="SetRotation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Rotation">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double, int&gt;)(lpVtbl[<vtbl explicit="False">38</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="Rotation">Rotation</param>);
        </code>
                </body>
            </function>
            <function name="GetRotation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRotation">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">39</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pRotation">pRotation</param>);
        </code>
                </body>
            </function>
            <function name="SetRenderMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="RenderMode">
                    <type>WICRawRenderMode</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, WICRawRenderMode, int&gt;)(lpVtbl[<vtbl explicit="False">40</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="RenderMode">RenderMode</param>);
        </code>
                </body>
            </function>
            <function name="GetRenderMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRenderMode">
                    <type>WICRawRenderMode*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, WICRawRenderMode*, int&gt;)(lpVtbl[<vtbl explicit="False">41</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pRenderMode">pRenderMode</param>);
        </code>
                </body>
            </function>
            <function name="SetNotificationCallback" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCallback">
                    <type>IWICDevelopRawNotificationCallback*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICDevelopRaw*, IWICDevelopRawNotificationCallback*, int&gt;)(lpVtbl[<vtbl explicit="False">42</vtbl>]))(<param special="thisPtr">(IWICDevelopRaw*)Unsafe.AsPointer(ref this)</param>, <param name="pCallback">pCallback</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
