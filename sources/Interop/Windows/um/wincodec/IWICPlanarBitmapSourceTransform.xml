<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wincodec.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IWICPlanarBitmapSourceTransform" access="public" native="struct IWICPlanarBitmapSourceTransform : IUnknown" uuid="3aff9cce-be95-4303-b927-e7d16ff4a613" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICPlanarBitmapSourceTransform*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IWICPlanarBitmapSourceTransform*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICPlanarBitmapSourceTransform*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IWICPlanarBitmapSourceTransform*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICPlanarBitmapSourceTransform*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IWICPlanarBitmapSourceTransform*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="DoesSupportTransform" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="puiWidth">
                    <type>uint*</type>
                </param>
                <param name="puiHeight">
                    <type>uint*</type>
                </param>
                <param name="dstTransform">
                    <type>WICBitmapTransformOptions</type>
                </param>
                <param name="dstPlanarOptions">
                    <type>WICPlanarOptions</type>
                </param>
                <param name="pguidDstFormats">
                    <type>Guid*</type>
                </param>
                <param name="pPlaneDescriptions">
                    <type>WICBitmapPlaneDescription*</type>
                </param>
                <param name="cPlanes">
                    <type>uint</type>
                </param>
                <param name="pfIsSupported">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICPlanarBitmapSourceTransform*, uint*, uint*, WICBitmapTransformOptions, WICPlanarOptions, Guid*, WICBitmapPlaneDescription*, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IWICPlanarBitmapSourceTransform*)Unsafe.AsPointer(ref this)</param>, <param name="puiWidth">puiWidth</param>, <param name="puiHeight">puiHeight</param>, <param name="dstTransform">dstTransform</param>, <param name="dstPlanarOptions">dstPlanarOptions</param>, <param name="pguidDstFormats">pguidDstFormats</param>, <param name="pPlaneDescriptions">pPlaneDescriptions</param>, <param name="cPlanes">cPlanes</param>, <param name="pfIsSupported">pfIsSupported</param>);
        </code>
                </body>
            </function>
            <function name="CopyPixels" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="prcSource">
                    <type>WICRect*</type>
                </param>
                <param name="uiWidth">
                    <type>uint</type>
                </param>
                <param name="uiHeight">
                    <type>uint</type>
                </param>
                <param name="dstTransform">
                    <type>WICBitmapTransformOptions</type>
                </param>
                <param name="dstPlanarOptions">
                    <type>WICPlanarOptions</type>
                </param>
                <param name="pDstPlanes">
                    <type>WICBitmapPlane*</type>
                </param>
                <param name="cPlanes">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICPlanarBitmapSourceTransform*, WICRect*, uint, uint, WICBitmapTransformOptions, WICPlanarOptions, WICBitmapPlane*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IWICPlanarBitmapSourceTransform*)Unsafe.AsPointer(ref this)</param>, <param name="prcSource">prcSource</param>, <param name="uiWidth">uiWidth</param>, <param name="uiHeight">uiHeight</param>, <param name="dstTransform">dstTransform</param>, <param name="dstPlanarOptions">dstPlanarOptions</param>, <param name="pDstPlanes">pDstPlanes</param>, <param name="cPlanes">cPlanes</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
