<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wincodec.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IWICBitmapEncoder" access="public" native="struct IWICBitmapEncoder : IUnknown" uuid="00000103-a8f2-4877-ba0a-fd2b6645fb94" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Initialize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIStream">
                    <type>IStream*</type>
                </param>
                <param name="cacheOption">
                    <type>WICBitmapEncoderCacheOption</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, IStream*, WICBitmapEncoderCacheOption, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="pIStream">pIStream</param>, <param name="cacheOption">cacheOption</param>);
        </code>
                </body>
            </function>
            <function name="GetContainerFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguidContainerFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="pguidContainerFormat">pguidContainerFormat</param>);
        </code>
                </body>
            </function>
            <function name="GetEncoderInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIEncoderInfo">
                    <type>IWICBitmapEncoderInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, IWICBitmapEncoderInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="ppIEncoderInfo">ppIEncoderInfo</param>);
        </code>
                </body>
            </function>
            <function name="SetColorContexts" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cCount">
                    <type>uint</type>
                </param>
                <param name="ppIColorContext">
                    <type>IWICColorContext**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, uint, IWICColorContext**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="cCount">cCount</param>, <param name="ppIColorContext">ppIColorContext</param>);
        </code>
                </body>
            </function>
            <function name="SetPalette" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIPalette">
                    <type>IWICPalette*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, IWICPalette*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="pIPalette">pIPalette</param>);
        </code>
                </body>
            </function>
            <function name="SetThumbnail" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIThumbnail">
                    <type>IWICBitmapSource*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, IWICBitmapSource*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="pIThumbnail">pIThumbnail</param>);
        </code>
                </body>
            </function>
            <function name="SetPreview" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIPreview">
                    <type>IWICBitmapSource*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, IWICBitmapSource*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="pIPreview">pIPreview</param>);
        </code>
                </body>
            </function>
            <function name="CreateNewFrame" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIFrameEncode">
                    <type>IWICBitmapFrameEncode**</type>
                </param>
                <param name="ppIEncoderOptions">
                    <type>IPropertyBag2**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, IWICBitmapFrameEncode**, IPropertyBag2**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="ppIFrameEncode">ppIFrameEncode</param>, <param name="ppIEncoderOptions">ppIEncoderOptions</param>);
        </code>
                </body>
            </function>
            <function name="Commit" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetMetadataQueryWriter" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIMetadataQueryWriter">
                    <type>IWICMetadataQueryWriter**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICBitmapEncoder*, IWICMetadataQueryWriter**, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IWICBitmapEncoder*)Unsafe.AsPointer(ref this)</param>, <param name="ppIMetadataQueryWriter">ppIMetadataQueryWriter</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
