<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d2d1_1.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ID2D1DrawingStateBlock1" access="public" native="struct ID2D1DrawingStateBlock1 : ID2D1DrawingStateBlock" uuid="689f1f85-c72e-4e33-8f19-85754efd5ace" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFactory" access="public" unsafe="true">
                <type>void</type>
                <param name="factory">
                    <type>ID2D1Factory**</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, ID2D1Factory**, void&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>, <param name="factory">factory</param>);
        </code>
                </body>
            </function>
            <function name="GetDescription" access="public" unsafe="true">
                <type>void</type>
                <param name="stateDescription">
                    <type>D2D1_DRAWING_STATE_DESCRIPTION*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, D2D1_DRAWING_STATE_DESCRIPTION*, void&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>, <param name="stateDescription">stateDescription</param>);
        </code>
                </body>
            </function>
            <function name="SetDescription" access="public" unsafe="true">
                <type>void</type>
                <param name="stateDescription">
                    <type>D2D1_DRAWING_STATE_DESCRIPTION*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, D2D1_DRAWING_STATE_DESCRIPTION*, void&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>, <param name="stateDescription">stateDescription</param>);
        </code>
                </body>
            </function>
            <function name="SetTextRenderingParams" access="public" unsafe="true">
                <type>void</type>
                <param name="textRenderingParams">
                    <type>IDWriteRenderingParams*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, IDWriteRenderingParams*, void&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>, <param name="textRenderingParams">textRenderingParams</param>);
        </code>
                </body>
            </function>
            <function name="GetTextRenderingParams" access="public" unsafe="true">
                <type>void</type>
                <param name="textRenderingParams">
                    <type>IDWriteRenderingParams**</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, IDWriteRenderingParams**, void&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>, <param name="textRenderingParams">textRenderingParams</param>);
        </code>
                </body>
            </function>
            <function name="GetDescription" access="public" unsafe="true">
                <type>void</type>
                <param name="stateDescription">
                    <type>D2D1_DRAWING_STATE_DESCRIPTION1*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, D2D1_DRAWING_STATE_DESCRIPTION1*, void&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>, <param name="stateDescription">stateDescription</param>);
        </code>
                </body>
            </function>
            <function name="SetDescription" access="public" unsafe="true">
                <type>void</type>
                <param name="stateDescription">
                    <type>D2D1_DRAWING_STATE_DESCRIPTION1*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1DrawingStateBlock1*, D2D1_DRAWING_STATE_DESCRIPTION1*, void&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ID2D1DrawingStateBlock1*)Unsafe.AsPointer(ref this)</param>, <param name="stateDescription">stateDescription</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
