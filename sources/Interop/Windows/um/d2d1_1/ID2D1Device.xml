<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d2d1_1.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ID2D1Device" access="public" native="struct ID2D1Device : ID2D1Resource" uuid="47dd575d-ac05-4cdd-8049-9b02cd16f44c" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1Device*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1Device*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1Device*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFactory" access="public" unsafe="true">
                <type>void</type>
                <param name="factory">
                    <type>ID2D1Factory**</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1Device*, ID2D1Factory**, void&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>, <param name="factory">factory</param>);
        </code>
                </body>
            </function>
            <function name="CreateDeviceContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="options">
                    <type>D2D1_DEVICE_CONTEXT_OPTIONS</type>
                </param>
                <param name="deviceContext">
                    <type>ID2D1DeviceContext**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1Device*, D2D1_DEVICE_CONTEXT_OPTIONS, ID2D1DeviceContext**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>, <param name="options">options</param>, <param name="deviceContext">deviceContext</param>);
        </code>
                </body>
            </function>
            <function name="CreatePrintControl" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="wicFactory">
                    <type>IWICImagingFactory*</type>
                </param>
                <param name="documentTarget">
                    <type>IPrintDocumentPackageTarget*</type>
                </param>
                <param name="printControlProperties">
                    <type>D2D1_PRINT_CONTROL_PROPERTIES*</type>
                </param>
                <param name="printControl">
                    <type>ID2D1PrintControl**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1Device*, IWICImagingFactory*, IPrintDocumentPackageTarget*, D2D1_PRINT_CONTROL_PROPERTIES*, ID2D1PrintControl**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>, <param name="wicFactory">wicFactory</param>, <param name="documentTarget">documentTarget</param>, <param name="printControlProperties">printControlProperties</param>, <param name="printControl">printControl</param>);
        </code>
                </body>
            </function>
            <function name="SetMaximumTextureMemory" access="public" unsafe="true">
                <type>void</type>
                <param name="maximumInBytes">
                    <type>ulong</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1Device*, ulong, void&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>, <param name="maximumInBytes">maximumInBytes</param>);
        </code>
                </body>
            </function>
            <function name="GetMaximumTextureMemory" access="public" unsafe="true">
                <type native="UINT64">ulong</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1Device*, ulong&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="ClearResources" access="public" unsafe="true">
                <type>void</type>
                <param name="millisecondsSinceUse">
                    <type>uint</type>
                    <init>
                        <code>0
        </code>
                    </init>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1Device*, uint, void&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ID2D1Device*)Unsafe.AsPointer(ref this)</param>, <param name="millisecondsSinceUse">millisecondsSinceUse</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
