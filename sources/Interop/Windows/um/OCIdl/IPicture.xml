<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/OCIdl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IPicture" access="public" native="struct IPicture : IUnknown" uuid="7bf80980-bf32-101a-8bbb-00aa00300cab" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="get_Handle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pHandle">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="pHandle">pHandle</param>);
        </code>
                </body>
            </function>
            <function name="get_hPal" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="phPal">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="phPal">phPal</param>);
        </code>
                </body>
            </function>
            <function name="get_Type" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pType">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="pType">pType</param>);
        </code>
                </body>
            </function>
            <function name="get_Width" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pWidth">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="pWidth">pWidth</param>);
        </code>
                </body>
            </function>
            <function name="get_Height" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pHeight">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="pHeight">pHeight</param>);
        </code>
                </body>
            </function>
            <function name="Render" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="x">
                    <type>int</type>
                </param>
                <param name="y">
                    <type>int</type>
                </param>
                <param name="cx">
                    <type>int</type>
                </param>
                <param name="cy">
                    <type>int</type>
                </param>
                <param name="xSrc">
                    <type>int</type>
                </param>
                <param name="ySrc">
                    <type>int</type>
                </param>
                <param name="cxSrc">
                    <type>int</type>
                </param>
                <param name="cySrc">
                    <type>int</type>
                </param>
                <param name="pRcWBounds">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, IntPtr, int, int, int, int, int, int, int, int, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="hDC">hDC</param>, <param name="x">x</param>, <param name="y">y</param>, <param name="cx">cx</param>, <param name="cy">cy</param>, <param name="xSrc">xSrc</param>, <param name="ySrc">ySrc</param>, <param name="cxSrc">cxSrc</param>, <param name="cySrc">cySrc</param>, <param name="pRcWBounds">pRcWBounds</param>);
        </code>
                </body>
            </function>
            <function name="set_hPal" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hPal">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="hPal">hPal</param>);
        </code>
                </body>
            </function>
            <function name="get_CurDC" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="phDC">
                    <type>IntPtr*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, IntPtr*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="phDC">phDC</param>);
        </code>
                </body>
            </function>
            <function name="SelectPicture" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hDCIn">
                    <type>IntPtr</type>
                </param>
                <param name="phDCOut">
                    <type>IntPtr*</type>
                </param>
                <param name="phBmpOut">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, IntPtr, IntPtr*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="hDCIn">hDCIn</param>, <param name="phDCOut">phDCOut</param>, <param name="phBmpOut">phBmpOut</param>);
        </code>
                </body>
            </function>
            <function name="get_KeepOriginalFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pKeep">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="pKeep">pKeep</param>);
        </code>
                </body>
            </function>
            <function name="put_KeepOriginalFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="keep">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, int, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="keep">keep</param>);
        </code>
                </body>
            </function>
            <function name="PictureChanged" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SaveAsFile" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pStream">
                    <type>IStream*</type>
                </param>
                <param name="fSaveMemCopy">
                    <type>int</type>
                </param>
                <param name="pCbSize">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, IStream*, int, int*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="pStream">pStream</param>, <param name="fSaveMemCopy">fSaveMemCopy</param>, <param name="pCbSize">pCbSize</param>);
        </code>
                </body>
            </function>
            <function name="get_Attributes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDwAttr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPicture*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IPicture*)Unsafe.AsPointer(ref this)</param>, <param name="pDwAttr">pDwAttr</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
