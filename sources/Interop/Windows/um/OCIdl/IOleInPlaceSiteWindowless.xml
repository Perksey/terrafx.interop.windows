<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/OCIdl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IOleInPlaceSiteWindowless" access="public" native="struct IOleInPlaceSiteWindowless : IOleInPlaceSiteEx" uuid="922eada0-3424-11cf-b670-00aa004cd6d8" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetWindow" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="phwnd">
                    <type>IntPtr*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, IntPtr*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="phwnd">phwnd</param>);
        </code>
                </body>
            </function>
            <function name="ContextSensitiveHelp" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fEnterMode">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="fEnterMode">fEnterMode</param>);
        </code>
                </body>
            </function>
            <function name="CanInPlaceActivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="OnInPlaceActivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="OnUIActivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetWindowContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppFrame">
                    <type>IOleInPlaceFrame**</type>
                </param>
                <param name="ppDoc">
                    <type>IOleInPlaceUIWindow**</type>
                </param>
                <param name="lprcPosRect">
                    <type>RECT*</type>
                </param>
                <param name="lprcClipRect">
                    <type>RECT*</type>
                </param>
                <param name="lpFrameInfo">
                    <type>OLEINPLACEFRAMEINFO*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, IOleInPlaceFrame**, IOleInPlaceUIWindow**, RECT*, RECT*, OLEINPLACEFRAMEINFO*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="ppFrame">ppFrame</param>, <param name="ppDoc">ppDoc</param>, <param name="lprcPosRect">lprcPosRect</param>, <param name="lprcClipRect">lprcClipRect</param>, <param name="lpFrameInfo">lpFrameInfo</param>);
        </code>
                </body>
            </function>
            <function name="Scroll" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="scrollExtant">
                    <type>SIZE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, SIZE, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="scrollExtant">scrollExtant</param>);
        </code>
                </body>
            </function>
            <function name="OnUIDeactivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fUndoable">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="fUndoable">fUndoable</param>);
        </code>
                </body>
            </function>
            <function name="OnInPlaceDeactivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="DiscardUndoState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="DeactivateAndUndo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="OnPosRectChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lprcPosRect">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="lprcPosRect">lprcPosRect</param>);
        </code>
                </body>
            </function>
            <function name="OnInPlaceActivateEx" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfNoRedraw">
                    <type>int*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="pfNoRedraw">pfNoRedraw</param>, <param name="dwFlags">dwFlags</param>);
        </code>
                </body>
            </function>
            <function name="OnInPlaceDeactivateEx" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fNoRedraw">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="fNoRedraw">fNoRedraw</param>);
        </code>
                </body>
            </function>
            <function name="RequestUIActivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="CanWindowlessActivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetCapture" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetCapture" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fCapture">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="fCapture">fCapture</param>);
        </code>
                </body>
            </function>
            <function name="GetFocus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetFocus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fFocus">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="fFocus">fFocus</param>);
        </code>
                </body>
            </function>
            <function name="GetDC" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRect">
                    <type>RECT*</type>
                </param>
                <param name="grfFlags">
                    <type>uint</type>
                </param>
                <param name="phDC">
                    <type>IntPtr*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, RECT*, uint, IntPtr*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="pRect">pRect</param>, <param name="grfFlags">grfFlags</param>, <param name="phDC">phDC</param>);
        </code>
                </body>
            </function>
            <function name="ReleaseDC" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, IntPtr, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="hDC">hDC</param>);
        </code>
                </body>
            </function>
            <function name="InvalidateRect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRect">
                    <type>RECT*</type>
                </param>
                <param name="fErase">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, RECT*, int, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="pRect">pRect</param>, <param name="fErase">fErase</param>);
        </code>
                </body>
            </function>
            <function name="InvalidateRgn" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hRGN">
                    <type>IntPtr</type>
                </param>
                <param name="fErase">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, IntPtr, int, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="hRGN">hRGN</param>, <param name="fErase">fErase</param>);
        </code>
                </body>
            </function>
            <function name="ScrollRect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dx">
                    <type>int</type>
                </param>
                <param name="dy">
                    <type>int</type>
                </param>
                <param name="pRectScroll">
                    <type>RECT*</type>
                </param>
                <param name="pRectClip">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, int, int, RECT*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="dx">dx</param>, <param name="dy">dy</param>, <param name="pRectScroll">pRectScroll</param>, <param name="pRectClip">pRectClip</param>);
        </code>
                </body>
            </function>
            <function name="AdjustRect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="prc">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="prc">prc</param>);
        </code>
                </body>
            </function>
            <function name="OnDefWindowMessage" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
                <param name="plResult">
                    <type>nint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOleInPlaceSiteWindowless*, uint, nuint, nint, nint*, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IOleInPlaceSiteWindowless*)Unsafe.AsPointer(ref this)</param>, <param name="msg">msg</param>, <param name="wParam">wParam</param>, <param name="lParam">lParam</param>, <param name="plResult">plResult</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
