<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/dwrite_3.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDWriteRemoteFontFileLoader" access="public" native="struct IDWriteRemoteFontFileLoader : IDWriteFontFileLoader" uuid="68648c83-6ede-46c0-ab46-20083a887fde" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteRemoteFontFileLoader*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDWriteRemoteFontFileLoader*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteRemoteFontFileLoader*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDWriteRemoteFontFileLoader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteRemoteFontFileLoader*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDWriteRemoteFontFileLoader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="CreateStreamFromKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFileReferenceKey">
                    <type>void*</type>
                </param>
                <param name="fontFileReferenceKeySize">
                    <type>uint</type>
                </param>
                <param name="fontFileStream">
                    <type>IDWriteFontFileStream**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteRemoteFontFileLoader*, void*, uint, IDWriteFontFileStream**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDWriteRemoteFontFileLoader*)Unsafe.AsPointer(ref this)</param>, <param name="fontFileReferenceKey">fontFileReferenceKey</param>, <param name="fontFileReferenceKeySize">fontFileReferenceKeySize</param>, <param name="fontFileStream">fontFileStream</param>);
        </code>
                </body>
            </function>
            <function name="CreateRemoteStreamFromKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFileReferenceKey">
                    <type>void*</type>
                </param>
                <param name="fontFileReferenceKeySize">
                    <type>uint</type>
                </param>
                <param name="fontFileStream">
                    <type>IDWriteRemoteFontFileStream**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteRemoteFontFileLoader*, void*, uint, IDWriteRemoteFontFileStream**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDWriteRemoteFontFileLoader*)Unsafe.AsPointer(ref this)</param>, <param name="fontFileReferenceKey">fontFileReferenceKey</param>, <param name="fontFileReferenceKeySize">fontFileReferenceKeySize</param>, <param name="fontFileStream">fontFileStream</param>);
        </code>
                </body>
            </function>
            <function name="GetLocalityFromKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFileReferenceKey">
                    <type>void*</type>
                </param>
                <param name="fontFileReferenceKeySize">
                    <type>uint</type>
                </param>
                <param name="locality">
                    <type>DWRITE_LOCALITY*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteRemoteFontFileLoader*, void*, uint, DWRITE_LOCALITY*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDWriteRemoteFontFileLoader*)Unsafe.AsPointer(ref this)</param>, <param name="fontFileReferenceKey">fontFileReferenceKey</param>, <param name="fontFileReferenceKeySize">fontFileReferenceKeySize</param>, <param name="locality">locality</param>);
        </code>
                </body>
            </function>
            <function name="CreateFontFileReferenceFromUrl" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="factory">
                    <type>IDWriteFactory*</type>
                </param>
                <param name="baseUrl">
                    <type>ushort*</type>
                </param>
                <param name="fontFileUrl">
                    <type>ushort*</type>
                </param>
                <param name="fontFile">
                    <type>IDWriteFontFile**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteRemoteFontFileLoader*, IDWriteFactory*, ushort*, ushort*, IDWriteFontFile**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDWriteRemoteFontFileLoader*)Unsafe.AsPointer(ref this)</param>, <param name="factory">factory</param>, <param name="baseUrl">baseUrl</param>, <param name="fontFileUrl">fontFileUrl</param>, <param name="fontFile">fontFile</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
