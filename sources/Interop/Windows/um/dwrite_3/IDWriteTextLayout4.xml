<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/dwrite_3.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDWriteTextLayout4" access="public" native="struct IDWriteTextLayout4 : IDWriteTextLayout3" uuid="05a9bf42-223f-4441-b5fb-8263685f55e9" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetTextAlignment" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="textAlignment">
                    <type>DWRITE_TEXT_ALIGNMENT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_TEXT_ALIGNMENT, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="textAlignment">textAlignment</param>);
        </code>
                </body>
            </function>
            <function name="SetParagraphAlignment" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="paragraphAlignment">
                    <type>DWRITE_PARAGRAPH_ALIGNMENT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_PARAGRAPH_ALIGNMENT, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="paragraphAlignment">paragraphAlignment</param>);
        </code>
                </body>
            </function>
            <function name="SetWordWrapping" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="wordWrapping">
                    <type>DWRITE_WORD_WRAPPING</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_WORD_WRAPPING, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="wordWrapping">wordWrapping</param>);
        </code>
                </body>
            </function>
            <function name="SetReadingDirection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="readingDirection">
                    <type>DWRITE_READING_DIRECTION</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_READING_DIRECTION, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="readingDirection">readingDirection</param>);
        </code>
                </body>
            </function>
            <function name="SetFlowDirection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="flowDirection">
                    <type>DWRITE_FLOW_DIRECTION</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FLOW_DIRECTION, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="flowDirection">flowDirection</param>);
        </code>
                </body>
            </function>
            <function name="SetIncrementalTabStop" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="incrementalTabStop">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="incrementalTabStop">incrementalTabStop</param>);
        </code>
                </body>
            </function>
            <function name="SetTrimming" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="trimmingOptions">
                    <type>DWRITE_TRIMMING*</type>
                </param>
                <param name="trimmingSign">
                    <type>IDWriteInlineObject*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_TRIMMING*, IDWriteInlineObject*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="trimmingOptions">trimmingOptions</param>, <param name="trimmingSign">trimmingSign</param>);
        </code>
                </body>
            </function>
            <function name="SetLineSpacing" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lineSpacingMethod">
                    <type>DWRITE_LINE_SPACING_METHOD</type>
                </param>
                <param name="lineSpacing">
                    <type>float</type>
                </param>
                <param name="baseline">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_LINE_SPACING_METHOD, float, float, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="lineSpacingMethod">lineSpacingMethod</param>, <param name="lineSpacing">lineSpacing</param>, <param name="baseline">baseline</param>);
        </code>
                </body>
            </function>
            <function name="GetTextAlignment" access="public" unsafe="true">
                <type>DWRITE_TEXT_ALIGNMENT</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_TEXT_ALIGNMENT&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetParagraphAlignment" access="public" unsafe="true">
                <type>DWRITE_PARAGRAPH_ALIGNMENT</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_PARAGRAPH_ALIGNMENT&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetWordWrapping" access="public" unsafe="true">
                <type>DWRITE_WORD_WRAPPING</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_WORD_WRAPPING&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetReadingDirection" access="public" unsafe="true">
                <type>DWRITE_READING_DIRECTION</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_READING_DIRECTION&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFlowDirection" access="public" unsafe="true">
                <type>DWRITE_FLOW_DIRECTION</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FLOW_DIRECTION&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetIncrementalTabStop" access="public" unsafe="true">
                <type native="FLOAT">float</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTrimming" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="trimmingOptions">
                    <type>DWRITE_TRIMMING*</type>
                </param>
                <param name="trimmingSign">
                    <type>IDWriteInlineObject**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_TRIMMING*, IDWriteInlineObject**, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="trimmingOptions">trimmingOptions</param>, <param name="trimmingSign">trimmingSign</param>);
        </code>
                </body>
            </function>
            <function name="GetLineSpacing" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lineSpacingMethod">
                    <type>DWRITE_LINE_SPACING_METHOD*</type>
                </param>
                <param name="lineSpacing">
                    <type>float*</type>
                </param>
                <param name="baseline">
                    <type>float*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_LINE_SPACING_METHOD*, float*, float*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="lineSpacingMethod">lineSpacingMethod</param>, <param name="lineSpacing">lineSpacing</param>, <param name="baseline">baseline</param>);
        </code>
                </body>
            </function>
            <function name="GetFontCollection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontCollection">
                    <type>IDWriteFontCollection**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, IDWriteFontCollection**, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontCollection">fontCollection</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFamilyNameLength" access="public" unsafe="true">
                <type native="UINT32">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFamilyName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFamilyName">
                    <type>ushort*</type>
                </param>
                <param name="nameSize">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, ushort*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontFamilyName">fontFamilyName</param>, <param name="nameSize">nameSize</param>);
        </code>
                </body>
            </function>
            <function name="GetFontWeight" access="public" unsafe="true">
                <type>DWRITE_FONT_WEIGHT</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FONT_WEIGHT&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontStyle" access="public" unsafe="true">
                <type>DWRITE_FONT_STYLE</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FONT_STYLE&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontStretch" access="public" unsafe="true">
                <type>DWRITE_FONT_STRETCH</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FONT_STRETCH&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontSize" access="public" unsafe="true">
                <type native="FLOAT">float</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetLocaleNameLength" access="public" unsafe="true">
                <type native="UINT32">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetLocaleName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="localeName">
                    <type>ushort*</type>
                </param>
                <param name="nameSize">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, ushort*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="localeName">localeName</param>, <param name="nameSize">nameSize</param>);
        </code>
                </body>
            </function>
            <function name="SetMaxWidth" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="maxWidth">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="maxWidth">maxWidth</param>);
        </code>
                </body>
            </function>
            <function name="SetMaxHeight" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="maxHeight">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="maxHeight">maxHeight</param>);
        </code>
                </body>
            </function>
            <function name="SetFontCollection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontCollection">
                    <type>IDWriteFontCollection*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, IDWriteFontCollection*, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontCollection">fontCollection</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetFontFamilyName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFamilyName">
                    <type>ushort*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, ushort*, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontFamilyName">fontFamilyName</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetFontWeight" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontWeight">
                    <type>DWRITE_FONT_WEIGHT</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FONT_WEIGHT, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontWeight">fontWeight</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetFontStyle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontStyle">
                    <type>DWRITE_FONT_STYLE</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FONT_STYLE, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontStyle">fontStyle</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetFontStretch" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontStretch">
                    <type>DWRITE_FONT_STRETCH</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FONT_STRETCH, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">34</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontStretch">fontStretch</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetFontSize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontSize">
                    <type>float</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">35</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontSize">fontSize</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetUnderline" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hasUnderline">
                    <type>int</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, int, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">36</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="hasUnderline">hasUnderline</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetStrikethrough" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hasStrikethrough">
                    <type>int</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, int, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">37</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="hasStrikethrough">hasStrikethrough</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetDrawingEffect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="drawingEffect">
                    <type>IUnknown*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, IUnknown*, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">38</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="drawingEffect">drawingEffect</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetInlineObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="inlineObject">
                    <type>IDWriteInlineObject*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, IDWriteInlineObject*, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">39</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="inlineObject">inlineObject</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetTypography" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="typography">
                    <type>IDWriteTypography*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, IDWriteTypography*, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">40</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="typography">typography</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetLocaleName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="localeName">
                    <type>ushort*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, ushort*, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">41</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="localeName">localeName</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetMaxWidth" access="public" unsafe="true">
                <type native="FLOAT">float</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float&gt;)(lpVtbl[<vtbl explicit="False">42</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetMaxHeight" access="public" unsafe="true">
                <type native="FLOAT">float</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float&gt;)(lpVtbl[<vtbl explicit="False">43</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontCollection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="fontCollection">
                    <type>IDWriteFontCollection**</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, IDWriteFontCollection**, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">44</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="fontCollection">fontCollection</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFamilyNameLength" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="nameLength">
                    <type>uint*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, uint*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">45</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="nameLength">nameLength</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFamilyName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="fontFamilyName">
                    <type>ushort*</type>
                </param>
                <param name="nameSize">
                    <type>uint</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, ushort*, uint, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">46</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="fontFamilyName">fontFamilyName</param>, <param name="nameSize">nameSize</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetFontWeight" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="fontWeight">
                    <type>DWRITE_FONT_WEIGHT*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, DWRITE_FONT_WEIGHT*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">47</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="fontWeight">fontWeight</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetFontStyle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="fontStyle">
                    <type>DWRITE_FONT_STYLE*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, DWRITE_FONT_STYLE*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">48</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="fontStyle">fontStyle</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetFontStretch" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="fontStretch">
                    <type>DWRITE_FONT_STRETCH*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, DWRITE_FONT_STRETCH*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">49</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="fontStretch">fontStretch</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetFontSize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="fontSize">
                    <type>float*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, float*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">50</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="fontSize">fontSize</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetUnderline" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="hasUnderline">
                    <type>int*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, int*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">51</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="hasUnderline">hasUnderline</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetStrikethrough" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="hasStrikethrough">
                    <type>int*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, int*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">52</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="hasStrikethrough">hasStrikethrough</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetDrawingEffect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="drawingEffect">
                    <type>IUnknown**</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, IUnknown**, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">53</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="drawingEffect">drawingEffect</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetInlineObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="inlineObject">
                    <type>IDWriteInlineObject**</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, IDWriteInlineObject**, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">54</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="inlineObject">inlineObject</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetTypography" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="typography">
                    <type>IDWriteTypography**</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, IDWriteTypography**, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">55</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="typography">typography</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetLocaleNameLength" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="nameLength">
                    <type>uint*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, uint*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">56</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="nameLength">nameLength</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetLocaleName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="localeName">
                    <type>ushort*</type>
                </param>
                <param name="nameSize">
                    <type>uint</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, ushort*, uint, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">57</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="localeName">localeName</param>, <param name="nameSize">nameSize</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="Draw" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="clientDrawingContext">
                    <type>void*</type>
                </param>
                <param name="renderer">
                    <type>IDWriteTextRenderer*</type>
                </param>
                <param name="originX">
                    <type>float</type>
                </param>
                <param name="originY">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, void*, IDWriteTextRenderer*, float, float, int&gt;)(lpVtbl[<vtbl explicit="False">58</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="clientDrawingContext">clientDrawingContext</param>, <param name="renderer">renderer</param>, <param name="originX">originX</param>, <param name="originY">originY</param>);
        </code>
                </body>
            </function>
            <function name="GetLineMetrics" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lineMetrics">
                    <type>DWRITE_LINE_METRICS*</type>
                </param>
                <param name="maxLineCount">
                    <type>uint</type>
                </param>
                <param name="actualLineCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_LINE_METRICS*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">59</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="lineMetrics">lineMetrics</param>, <param name="maxLineCount">maxLineCount</param>, <param name="actualLineCount">actualLineCount</param>);
        </code>
                </body>
            </function>
            <function name="GetMetrics" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="textMetrics">
                    <type>DWRITE_TEXT_METRICS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_TEXT_METRICS*, int&gt;)(lpVtbl[<vtbl explicit="False">60</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="textMetrics">textMetrics</param>);
        </code>
                </body>
            </function>
            <function name="GetOverhangMetrics" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="overhangs">
                    <type>DWRITE_OVERHANG_METRICS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_OVERHANG_METRICS*, int&gt;)(lpVtbl[<vtbl explicit="False">61</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="overhangs">overhangs</param>);
        </code>
                </body>
            </function>
            <function name="GetClusterMetrics" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="clusterMetrics">
                    <type>DWRITE_CLUSTER_METRICS*</type>
                </param>
                <param name="maxClusterCount">
                    <type>uint</type>
                </param>
                <param name="actualClusterCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_CLUSTER_METRICS*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">62</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="clusterMetrics">clusterMetrics</param>, <param name="maxClusterCount">maxClusterCount</param>, <param name="actualClusterCount">actualClusterCount</param>);
        </code>
                </body>
            </function>
            <function name="DetermineMinWidth" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="minWidth">
                    <type>float*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float*, int&gt;)(lpVtbl[<vtbl explicit="False">63</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="minWidth">minWidth</param>);
        </code>
                </body>
            </function>
            <function name="HitTestPoint" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pointX">
                    <type>float</type>
                </param>
                <param name="pointY">
                    <type>float</type>
                </param>
                <param name="isTrailingHit">
                    <type>int*</type>
                </param>
                <param name="isInside">
                    <type>int*</type>
                </param>
                <param name="hitTestMetrics">
                    <type>DWRITE_HIT_TEST_METRICS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float, float, int*, int*, DWRITE_HIT_TEST_METRICS*, int&gt;)(lpVtbl[<vtbl explicit="False">64</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="pointX">pointX</param>, <param name="pointY">pointY</param>, <param name="isTrailingHit">isTrailingHit</param>, <param name="isInside">isInside</param>, <param name="hitTestMetrics">hitTestMetrics</param>);
        </code>
                </body>
            </function>
            <function name="HitTestTextPosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="textPosition">
                    <type>uint</type>
                </param>
                <param name="isTrailingHit">
                    <type>int</type>
                </param>
                <param name="pointX">
                    <type>float*</type>
                </param>
                <param name="pointY">
                    <type>float*</type>
                </param>
                <param name="hitTestMetrics">
                    <type>DWRITE_HIT_TEST_METRICS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, int, float*, float*, DWRITE_HIT_TEST_METRICS*, int&gt;)(lpVtbl[<vtbl explicit="False">65</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="textPosition">textPosition</param>, <param name="isTrailingHit">isTrailingHit</param>, <param name="pointX">pointX</param>, <param name="pointY">pointY</param>, <param name="hitTestMetrics">hitTestMetrics</param>);
        </code>
                </body>
            </function>
            <function name="HitTestTextRange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="textPosition">
                    <type>uint</type>
                </param>
                <param name="textLength">
                    <type>uint</type>
                </param>
                <param name="originX">
                    <type>float</type>
                </param>
                <param name="originY">
                    <type>float</type>
                </param>
                <param name="hitTestMetrics">
                    <type>DWRITE_HIT_TEST_METRICS*</type>
                </param>
                <param name="maxHitTestMetricsCount">
                    <type>uint</type>
                </param>
                <param name="actualHitTestMetricsCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, uint, float, float, DWRITE_HIT_TEST_METRICS*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">66</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="textPosition">textPosition</param>, <param name="textLength">textLength</param>, <param name="originX">originX</param>, <param name="originY">originY</param>, <param name="hitTestMetrics">hitTestMetrics</param>, <param name="maxHitTestMetricsCount">maxHitTestMetricsCount</param>, <param name="actualHitTestMetricsCount">actualHitTestMetricsCount</param>);
        </code>
                </body>
            </function>
            <function name="SetPairKerning" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="isPairKerningEnabled">
                    <type>int</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, int, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">67</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="isPairKerningEnabled">isPairKerningEnabled</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetPairKerning" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="isPairKerningEnabled">
                    <type>int*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, int*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">68</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="isPairKerningEnabled">isPairKerningEnabled</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="SetCharacterSpacing" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="leadingSpacing">
                    <type>float</type>
                </param>
                <param name="trailingSpacing">
                    <type>float</type>
                </param>
                <param name="minimumAdvanceWidth">
                    <type>float</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, float, float, float, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">69</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="leadingSpacing">leadingSpacing</param>, <param name="trailingSpacing">trailingSpacing</param>, <param name="minimumAdvanceWidth">minimumAdvanceWidth</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetCharacterSpacing" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="leadingSpacing">
                    <type>float*</type>
                </param>
                <param name="trailingSpacing">
                    <type>float*</type>
                </param>
                <param name="minimumAdvanceWidth">
                    <type>float*</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, float*, float*, float*, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">70</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="leadingSpacing">leadingSpacing</param>, <param name="trailingSpacing">trailingSpacing</param>, <param name="minimumAdvanceWidth">minimumAdvanceWidth</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetMetrics" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="textMetrics">
                    <type>DWRITE_TEXT_METRICS1*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_TEXT_METRICS1*, int&gt;)(lpVtbl[<vtbl explicit="False">71</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="textMetrics">textMetrics</param>);
        </code>
                </body>
            </function>
            <function name="SetVerticalGlyphOrientation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="glyphOrientation">
                    <type>DWRITE_VERTICAL_GLYPH_ORIENTATION</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_VERTICAL_GLYPH_ORIENTATION, int&gt;)(lpVtbl[<vtbl explicit="False">72</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="glyphOrientation">glyphOrientation</param>);
        </code>
                </body>
            </function>
            <function name="GetVerticalGlyphOrientation" access="public" unsafe="true">
                <type>DWRITE_VERTICAL_GLYPH_ORIENTATION</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_VERTICAL_GLYPH_ORIENTATION&gt;)(lpVtbl[<vtbl explicit="False">73</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetLastLineWrapping" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="isLastLineWrappingEnabled">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, int, int&gt;)(lpVtbl[<vtbl explicit="False">74</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="isLastLineWrappingEnabled">isLastLineWrappingEnabled</param>);
        </code>
                </body>
            </function>
            <function name="GetLastLineWrapping" access="public" unsafe="true">
                <type native="BOOL">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, int&gt;)(lpVtbl[<vtbl explicit="False">75</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetOpticalAlignment" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="opticalAlignment">
                    <type>DWRITE_OPTICAL_ALIGNMENT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_OPTICAL_ALIGNMENT, int&gt;)(lpVtbl[<vtbl explicit="False">76</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="opticalAlignment">opticalAlignment</param>);
        </code>
                </body>
            </function>
            <function name="GetOpticalAlignment" access="public" unsafe="true">
                <type>DWRITE_OPTICAL_ALIGNMENT</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_OPTICAL_ALIGNMENT&gt;)(lpVtbl[<vtbl explicit="False">77</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetFontFallback" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFallback">
                    <type>IDWriteFontFallback*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, IDWriteFontFallback*, int&gt;)(lpVtbl[<vtbl explicit="False">78</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontFallback">fontFallback</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFallback" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFallback">
                    <type>IDWriteFontFallback**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, IDWriteFontFallback**, int&gt;)(lpVtbl[<vtbl explicit="False">79</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontFallback">fontFallback</param>);
        </code>
                </body>
            </function>
            <function name="InvalidateLayout" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, int&gt;)(lpVtbl[<vtbl explicit="False">80</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetLineSpacing" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lineSpacingOptions">
                    <type>DWRITE_LINE_SPACING*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_LINE_SPACING*, int&gt;)(lpVtbl[<vtbl explicit="False">81</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="lineSpacingOptions">lineSpacingOptions</param>);
        </code>
                </body>
            </function>
            <function name="GetLineSpacing" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lineSpacingOptions">
                    <type>DWRITE_LINE_SPACING*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_LINE_SPACING*, int&gt;)(lpVtbl[<vtbl explicit="False">82</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="lineSpacingOptions">lineSpacingOptions</param>);
        </code>
                </body>
            </function>
            <function name="GetLineMetrics" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lineMetrics">
                    <type>DWRITE_LINE_METRICS1*</type>
                </param>
                <param name="maxLineCount">
                    <type>uint</type>
                </param>
                <param name="actualLineCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_LINE_METRICS1*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">83</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="lineMetrics">lineMetrics</param>, <param name="maxLineCount">maxLineCount</param>, <param name="actualLineCount">actualLineCount</param>);
        </code>
                </body>
            </function>
            <function name="SetFontAxisValues" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontAxisValues">
                    <type>DWRITE_FONT_AXIS_VALUE*</type>
                </param>
                <param name="fontAxisValueCount">
                    <type>uint</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_FONT_AXIS_VALUE*, uint, DWRITE_TEXT_RANGE, int&gt;)(lpVtbl[<vtbl explicit="False">84</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="fontAxisValues">fontAxisValues</param>, <param name="fontAxisValueCount">fontAxisValueCount</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetFontAxisValueCount" access="public" unsafe="true">
                <type native="UINT32">uint</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, uint&gt;)(lpVtbl[<vtbl explicit="False">85</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>);
        </code>
                </body>
            </function>
            <function name="GetFontAxisValues" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="currentPosition">
                    <type>uint</type>
                </param>
                <param name="fontAxisValues">
                    <type>DWRITE_FONT_AXIS_VALUE*</type>
                </param>
                <param name="fontAxisValueCount">
                    <type>uint</type>
                </param>
                <param name="textRange">
                    <type>DWRITE_TEXT_RANGE*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, uint, DWRITE_FONT_AXIS_VALUE*, uint, DWRITE_TEXT_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">86</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="currentPosition">currentPosition</param>, <param name="fontAxisValues">fontAxisValues</param>, <param name="fontAxisValueCount">fontAxisValueCount</param>, <param name="textRange">textRange</param>);
        </code>
                </body>
            </function>
            <function name="GetAutomaticFontAxes" access="public" unsafe="true">
                <type>DWRITE_AUTOMATIC_FONT_AXES</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_AUTOMATIC_FONT_AXES&gt;)(lpVtbl[<vtbl explicit="False">87</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetAutomaticFontAxes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="automaticFontAxes">
                    <type>DWRITE_AUTOMATIC_FONT_AXES</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteTextLayout4*, DWRITE_AUTOMATIC_FONT_AXES, int&gt;)(lpVtbl[<vtbl explicit="False">88</vtbl>]))(<param special="thisPtr">(IDWriteTextLayout4*)Unsafe.AsPointer(ref this)</param>, <param name="automaticFontAxes">automaticFontAxes</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
