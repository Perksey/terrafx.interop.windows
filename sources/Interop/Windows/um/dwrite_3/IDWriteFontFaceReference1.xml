<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/dwrite_3.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDWriteFontFaceReference1" access="public" native="struct IDWriteFontFaceReference1 : IDWriteFontFaceReference" uuid="c081fe77-2fd1-41ac-a5a3-34983c4ba61a" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="CreateFontFace" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFace">
                    <type>IDWriteFontFace3**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, IDWriteFontFace3**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="fontFace">fontFace</param>);
        </code>
                </body>
            </function>
            <function name="CreateFontFaceWithSimulations" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFaceSimulationFlags">
                    <type>DWRITE_FONT_SIMULATIONS</type>
                </param>
                <param name="fontFace">
                    <type>IDWriteFontFace3**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, DWRITE_FONT_SIMULATIONS, IDWriteFontFace3**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="fontFaceSimulationFlags">fontFaceSimulationFlags</param>, <param name="fontFace">fontFace</param>);
        </code>
                </body>
            </function>
            <function name="Equals" access="public" unsafe="true">
                <type native="BOOL">int</type>
                <param name="fontFaceReference">
                    <type>IDWriteFontFaceReference*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, IDWriteFontFaceReference*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="fontFaceReference">fontFaceReference</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFaceIndex" access="public" unsafe="true">
                <type native="UINT32">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, uint&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetSimulations" access="public" unsafe="true">
                <type>DWRITE_FONT_SIMULATIONS</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, DWRITE_FONT_SIMULATIONS&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFile" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFile">
                    <type>IDWriteFontFile**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, IDWriteFontFile**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="fontFile">fontFile</param>);
        </code>
                </body>
            </function>
            <function name="GetLocalFileSize" access="public" unsafe="true">
                <type native="UINT64">ulong</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, ulong&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFileSize" access="public" unsafe="true">
                <type native="UINT64">ulong</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, ulong&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFileTime" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lastWriteTime">
                    <type>FILETIME*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, FILETIME*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="lastWriteTime">lastWriteTime</param>);
        </code>
                </body>
            </function>
            <function name="GetLocality" access="public" unsafe="true">
                <type>DWRITE_LOCALITY</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, DWRITE_LOCALITY&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="EnqueueFontDownloadRequest" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="EnqueueCharacterDownloadRequest" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="characters">
                    <type>ushort*</type>
                </param>
                <param name="characterCount">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, ushort*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="characters">characters</param>, <param name="characterCount">characterCount</param>);
        </code>
                </body>
            </function>
            <function name="EnqueueGlyphDownloadRequest" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="glyphIndices">
                    <type>ushort*</type>
                </param>
                <param name="glyphCount">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, ushort*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="glyphIndices">glyphIndices</param>, <param name="glyphCount">glyphCount</param>);
        </code>
                </body>
            </function>
            <function name="EnqueueFileFragmentDownloadRequest" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fileOffset">
                    <type>ulong</type>
                </param>
                <param name="fragmentSize">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, ulong, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="fileOffset">fileOffset</param>, <param name="fragmentSize">fragmentSize</param>);
        </code>
                </body>
            </function>
            <function name="CreateFontFace" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFace">
                    <type>IDWriteFontFace5**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, IDWriteFontFace5**, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="fontFace">fontFace</param>);
        </code>
                </body>
            </function>
            <function name="GetFontAxisValueCount" access="public" unsafe="true">
                <type native="UINT32">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, uint&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontAxisValues" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontAxisValues">
                    <type>DWRITE_FONT_AXIS_VALUE*</type>
                </param>
                <param name="fontAxisValueCount">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFaceReference1*, DWRITE_FONT_AXIS_VALUE*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IDWriteFontFaceReference1*)Unsafe.AsPointer(ref this)</param>, <param name="fontAxisValues">fontAxisValues</param>, <param name="fontAxisValueCount">fontAxisValueCount</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
