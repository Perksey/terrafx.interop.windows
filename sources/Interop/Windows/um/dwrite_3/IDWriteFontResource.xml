<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/dwrite_3.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDWriteFontResource" access="public" native="struct IDWriteFontResource : IUnknown" uuid="1f803a76-6871-48e8-987f-b975551c50f2" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFile" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFile">
                    <type>IDWriteFontFile**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, IDWriteFontFile**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="fontFile">fontFile</param>);
        </code>
                </body>
            </function>
            <function name="GetFontFaceIndex" access="public" unsafe="true">
                <type native="UINT32">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, uint&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetFontAxisCount" access="public" unsafe="true">
                <type native="UINT32">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, uint&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetDefaultFontAxisValues" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontAxisValues">
                    <type>DWRITE_FONT_AXIS_VALUE*</type>
                </param>
                <param name="fontAxisValueCount">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, DWRITE_FONT_AXIS_VALUE*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="fontAxisValues">fontAxisValues</param>, <param name="fontAxisValueCount">fontAxisValueCount</param>);
        </code>
                </body>
            </function>
            <function name="GetFontAxisRanges" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontAxisRanges">
                    <type>DWRITE_FONT_AXIS_RANGE*</type>
                </param>
                <param name="fontAxisRangeCount">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, DWRITE_FONT_AXIS_RANGE*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="fontAxisRanges">fontAxisRanges</param>, <param name="fontAxisRangeCount">fontAxisRangeCount</param>);
        </code>
                </body>
            </function>
            <function name="GetFontAxisAttributes" access="public" unsafe="true">
                <type>DWRITE_FONT_AXIS_ATTRIBUTES</type>
                <param name="axisIndex">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, uint, DWRITE_FONT_AXIS_ATTRIBUTES&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="axisIndex">axisIndex</param>);
        </code>
                </body>
            </function>
            <function name="GetAxisNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="axisIndex">
                    <type>uint</type>
                </param>
                <param name="names">
                    <type>IDWriteLocalizedStrings**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, uint, IDWriteLocalizedStrings**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="axisIndex">axisIndex</param>, <param name="names">names</param>);
        </code>
                </body>
            </function>
            <function name="GetAxisValueNameCount" access="public" unsafe="true">
                <type native="UINT32">uint</type>
                <param name="axisIndex">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, uint, uint&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="axisIndex">axisIndex</param>);
        </code>
                </body>
            </function>
            <function name="GetAxisValueNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="axisIndex">
                    <type>uint</type>
                </param>
                <param name="axisValueIndex">
                    <type>uint</type>
                </param>
                <param name="fontAxisRange">
                    <type>DWRITE_FONT_AXIS_RANGE*</type>
                </param>
                <param name="names">
                    <type>IDWriteLocalizedStrings**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, uint, uint, DWRITE_FONT_AXIS_RANGE*, IDWriteLocalizedStrings**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="axisIndex">axisIndex</param>, <param name="axisValueIndex">axisValueIndex</param>, <param name="fontAxisRange">fontAxisRange</param>, <param name="names">names</param>);
        </code>
                </body>
            </function>
            <function name="HasVariations" access="public" unsafe="true">
                <type native="BOOL">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="CreateFontFace" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontSimulations">
                    <type>DWRITE_FONT_SIMULATIONS</type>
                </param>
                <param name="fontAxisValues">
                    <type>DWRITE_FONT_AXIS_VALUE*</type>
                </param>
                <param name="fontAxisValueCount">
                    <type>uint</type>
                </param>
                <param name="fontFace">
                    <type>IDWriteFontFace5**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, DWRITE_FONT_SIMULATIONS, DWRITE_FONT_AXIS_VALUE*, uint, IDWriteFontFace5**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="fontSimulations">fontSimulations</param>, <param name="fontAxisValues">fontAxisValues</param>, <param name="fontAxisValueCount">fontAxisValueCount</param>, <param name="fontFace">fontFace</param>);
        </code>
                </body>
            </function>
            <function name="CreateFontFaceReference" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontSimulations">
                    <type>DWRITE_FONT_SIMULATIONS</type>
                </param>
                <param name="fontAxisValues">
                    <type>DWRITE_FONT_AXIS_VALUE*</type>
                </param>
                <param name="fontAxisValueCount">
                    <type>uint</type>
                </param>
                <param name="fontFaceReference">
                    <type>IDWriteFontFaceReference1**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontResource*, DWRITE_FONT_SIMULATIONS, DWRITE_FONT_AXIS_VALUE*, uint, IDWriteFontFaceReference1**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IDWriteFontResource*)Unsafe.AsPointer(ref this)</param>, <param name="fontSimulations">fontSimulations</param>, <param name="fontAxisValues">fontAxisValues</param>, <param name="fontAxisValueCount">fontAxisValueCount</param>, <param name="fontFaceReference">fontFaceReference</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
