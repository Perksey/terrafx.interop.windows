<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/SpatialAudioHrtf.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpatialAudioObjectForHrtf" access="public" native="struct ISpatialAudioObjectForHrtf : ISpatialAudioObjectBase" uuid="d7436ade-1978-4e14-aba0-555bd8eb83b4" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetBuffer" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="buffer">
                    <type>byte**</type>
                </param>
                <param name="bufferLength">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, byte**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="buffer">buffer</param>, <param name="bufferLength">bufferLength</param>);
        </code>
                </body>
            </function>
            <function name="SetEndOfStream" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="frameCount">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="frameCount">frameCount</param>);
        </code>
                </body>
            </function>
            <function name="IsActive" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="isActive">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="isActive">isActive</param>);
        </code>
                </body>
            </function>
            <function name="GetAudioObjectType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="audioObjectType">
                    <type>AudioObjectType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, AudioObjectType*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="audioObjectType">audioObjectType</param>);
        </code>
                </body>
            </function>
            <function name="SetPosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="x">
                    <type>float</type>
                </param>
                <param name="y">
                    <type>float</type>
                </param>
                <param name="z">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, float, float, float, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="x">x</param>, <param name="y">y</param>, <param name="z">z</param>);
        </code>
                </body>
            </function>
            <function name="SetGain" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="gain">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, float, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="gain">gain</param>);
        </code>
                </body>
            </function>
            <function name="SetOrientation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="orientation">
                    <type>float**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, float**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="orientation">orientation</param>);
        </code>
                </body>
            </function>
            <function name="SetEnvironment" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="environment">
                    <type>SpatialAudioHrtfEnvironmentType</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, SpatialAudioHrtfEnvironmentType, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="environment">environment</param>);
        </code>
                </body>
            </function>
            <function name="SetDistanceDecay" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="distanceDecay">
                    <type>SpatialAudioHrtfDistanceDecay*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, SpatialAudioHrtfDistanceDecay*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="distanceDecay">distanceDecay</param>);
        </code>
                </body>
            </function>
            <function name="SetDirectivity" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="directivity">
                    <type>SpatialAudioHrtfDirectivityUnion*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpatialAudioObjectForHrtf*, SpatialAudioHrtfDirectivityUnion*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ISpatialAudioObjectForHrtf*)Unsafe.AsPointer(ref this)</param>, <param name="directivity">directivity</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
