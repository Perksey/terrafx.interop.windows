<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/OAIdl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ICreateTypeInfo" access="public" native="struct ICreateTypeInfo : IUnknown" uuid="00020405-0000-0000-c000-000000000046" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetGuid" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guid">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="guid">guid</param>);
        </code>
                </body>
            </function>
            <function name="SetTypeFlags" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="uTypeFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="uTypeFlags">uTypeFlags</param>);
        </code>
                </body>
            </function>
            <function name="SetDocString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pStrDoc">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pStrDoc">pStrDoc</param>);
        </code>
                </body>
            </function>
            <function name="SetHelpContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwHelpContext">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="dwHelpContext">dwHelpContext</param>);
        </code>
                </body>
            </function>
            <function name="SetVersion" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="wMajorVerNum">
                    <type>ushort</type>
                </param>
                <param name="wMinorVerNum">
                    <type>ushort</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, ushort, ushort, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="wMajorVerNum">wMajorVerNum</param>, <param name="wMinorVerNum">wMinorVerNum</param>);
        </code>
                </body>
            </function>
            <function name="AddRefTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pTInfo">
                    <type>ITypeInfo*</type>
                </param>
                <param name="phRefType">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, ITypeInfo*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pTInfo">pTInfo</param>, <param name="phRefType">phRefType</param>);
        </code>
                </body>
            </function>
            <function name="AddFuncDesc" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="pFuncDesc">
                    <type>FUNCDESC*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, FUNCDESC*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="pFuncDesc">pFuncDesc</param>);
        </code>
                </body>
            </function>
            <function name="AddImplType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="hRefType">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="hRefType">hRefType</param>);
        </code>
                </body>
            </function>
            <function name="SetImplTypeFlags" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="implTypeFlags">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, int, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="implTypeFlags">implTypeFlags</param>);
        </code>
                </body>
            </function>
            <function name="SetAlignment" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cbAlignment">
                    <type>ushort</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, ushort, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="cbAlignment">cbAlignment</param>);
        </code>
                </body>
            </function>
            <function name="SetSchema" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pStrSchema">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pStrSchema">pStrSchema</param>);
        </code>
                </body>
            </function>
            <function name="AddVarDesc" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="pVarDesc">
                    <type>VARDESC*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, VARDESC*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="pVarDesc">pVarDesc</param>);
        </code>
                </body>
            </function>
            <function name="SetFuncAndParamNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, ushort**, uint, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>);
        </code>
                </body>
            </function>
            <function name="SetVarName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="szName">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="szName">szName</param>);
        </code>
                </body>
            </function>
            <function name="SetTypeDescAlias" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pTDescAlias">
                    <type>TYPEDESC*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, TYPEDESC*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pTDescAlias">pTDescAlias</param>);
        </code>
                </body>
            </function>
            <function name="DefineFuncAsDllEntry" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="szDllName">
                    <type>ushort*</type>
                </param>
                <param name="szProcName">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, ushort*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="szDllName">szDllName</param>, <param name="szProcName">szProcName</param>);
        </code>
                </body>
            </function>
            <function name="SetFuncDocString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="szDocString">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="szDocString">szDocString</param>);
        </code>
                </body>
            </function>
            <function name="SetVarDocString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="szDocString">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="szDocString">szDocString</param>);
        </code>
                </body>
            </function>
            <function name="SetFuncHelpContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="dwHelpContext">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="dwHelpContext">dwHelpContext</param>);
        </code>
                </body>
            </function>
            <function name="SetVarHelpContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="dwHelpContext">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="dwHelpContext">dwHelpContext</param>);
        </code>
                </body>
            </function>
            <function name="SetMops" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="bstrMops">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, uint, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="bstrMops">bstrMops</param>);
        </code>
                </body>
            </function>
            <function name="SetTypeIdldesc" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIdlDesc">
                    <type>IDLDESC*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, IDLDESC*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pIdlDesc">pIdlDesc</param>);
        </code>
                </body>
            </function>
            <function name="LayOut" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ICreateTypeInfo*, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(ICreateTypeInfo*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
