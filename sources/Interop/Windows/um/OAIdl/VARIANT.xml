<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/OAIdl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="VARIANT" access="public" unsafe="true">
            <field name="Anonymous" access="public">
                <type native="tagVARIANT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/OAIdl.h:470:5)">_Anonymous_e__Union</type>
            </field>
            <field name="vt" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.vt, 1));
        </code>
                </get>
            </field>
            <field name="wReserved1" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.wReserved1, 1));
        </code>
                </get>
            </field>
            <field name="wReserved2" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.wReserved2, 1));
        </code>
                </get>
            </field>
            <field name="wReserved3" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.wReserved3, 1));
        </code>
                </get>
            </field>
            <field name="llVal" access="public">
                <type native="">ref long</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.llVal, 1));
        </code>
                </get>
            </field>
            <field name="lVal" access="public">
                <type native="">ref int</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.lVal, 1));
        </code>
                </get>
            </field>
            <field name="bVal" access="public">
                <type native="">ref byte</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.bVal, 1));
        </code>
                </get>
            </field>
            <field name="iVal" access="public">
                <type native="">ref short</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.iVal, 1));
        </code>
                </get>
            </field>
            <field name="fltVal" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.fltVal, 1));
        </code>
                </get>
            </field>
            <field name="dblVal" access="public">
                <type native="">ref double</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.dblVal, 1));
        </code>
                </get>
            </field>
            <field name="boolVal" access="public">
                <type native="">ref short</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.boolVal, 1));
        </code>
                </get>
            </field>
            <field name="__OBSOLETE__VARIANT_BOOL" access="public">
                <type native="">ref short</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.__OBSOLETE__VARIANT_BOOL, 1));
        </code>
                </get>
            </field>
            <field name="scode" access="public">
                <type native="">ref int</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.scode, 1));
        </code>
                </get>
            </field>
            <field name="cyVal" access="public">
                <type native="">ref CY</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cyVal, 1));
        </code>
                </get>
            </field>
            <field name="date" access="public">
                <type native="">ref double</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.date, 1));
        </code>
                </get>
            </field>
            <field name="bstrVal" access="public">
                <type native="">ref ushort*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;bstrVal;
        }
        </code>
                </get>
            </field>
            <field name="punkVal" access="public">
                <type native="">ref IUnknown*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;punkVal;
        }
        </code>
                </get>
            </field>
            <field name="pdispVal" access="public">
                <type native="">ref IDispatch*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pdispVal;
        }
        </code>
                </get>
            </field>
            <field name="parray" access="public">
                <type native="">ref SAFEARRAY*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;parray;
        }
        </code>
                </get>
            </field>
            <field name="pbVal" access="public">
                <type native="">ref byte*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pbVal;
        }
        </code>
                </get>
            </field>
            <field name="piVal" access="public">
                <type native="">ref short*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;piVal;
        }
        </code>
                </get>
            </field>
            <field name="plVal" access="public">
                <type native="">ref int*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;plVal;
        }
        </code>
                </get>
            </field>
            <field name="pllVal" access="public">
                <type native="">ref long*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pllVal;
        }
        </code>
                </get>
            </field>
            <field name="pfltVal" access="public">
                <type native="">ref float*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pfltVal;
        }
        </code>
                </get>
            </field>
            <field name="pdblVal" access="public">
                <type native="">ref double*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pdblVal;
        }
        </code>
                </get>
            </field>
            <field name="pboolVal" access="public">
                <type native="">ref short*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pboolVal;
        }
        </code>
                </get>
            </field>
            <field name="__OBSOLETE__VARIANT_PBOOL" access="public">
                <type native="">ref short*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;__OBSOLETE__VARIANT_PBOOL;
        }
        </code>
                </get>
            </field>
            <field name="pscode" access="public">
                <type native="">ref int*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pscode;
        }
        </code>
                </get>
            </field>
            <field name="pcyVal" access="public">
                <type native="">ref CY*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pcyVal;
        }
        </code>
                </get>
            </field>
            <field name="pdate" access="public">
                <type native="">ref double*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pdate;
        }
        </code>
                </get>
            </field>
            <field name="pbstrVal" access="public">
                <type native="">ref ushort**</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pbstrVal;
        }
        </code>
                </get>
            </field>
            <field name="ppunkVal" access="public">
                <type native="">ref IUnknown**</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;ppunkVal;
        }
        </code>
                </get>
            </field>
            <field name="ppdispVal" access="public">
                <type native="">ref IDispatch**</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;ppdispVal;
        }
        </code>
                </get>
            </field>
            <field name="pparray" access="public">
                <type native="">ref SAFEARRAY**</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pparray;
        }
        </code>
                </get>
            </field>
            <field name="pvarVal" access="public">
                <type native="">ref VARIANT*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pvarVal;
        }
        </code>
                </get>
            </field>
            <field name="byref" access="public">
                <type native="">ref void*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;byref;
        }
        </code>
                </get>
            </field>
            <field name="cVal" access="public">
                <type native="">ref sbyte</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cVal, 1));
        </code>
                </get>
            </field>
            <field name="uiVal" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.uiVal, 1));
        </code>
                </get>
            </field>
            <field name="ulVal" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.ulVal, 1));
        </code>
                </get>
            </field>
            <field name="ullVal" access="public">
                <type native="">ref ulong</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.ullVal, 1));
        </code>
                </get>
            </field>
            <field name="intVal" access="public">
                <type native="">ref int</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.intVal, 1));
        </code>
                </get>
            </field>
            <field name="uintVal" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.uintVal, 1));
        </code>
                </get>
            </field>
            <field name="pdecVal" access="public">
                <type native="">ref DECIMAL*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pdecVal;
        }
        </code>
                </get>
            </field>
            <field name="pcVal" access="public">
                <type native="">ref sbyte*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pcVal;
        }
        </code>
                </get>
            </field>
            <field name="puiVal" access="public">
                <type native="">ref ushort*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;puiVal;
        }
        </code>
                </get>
            </field>
            <field name="pulVal" access="public">
                <type native="">ref uint*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pulVal;
        }
        </code>
                </get>
            </field>
            <field name="pullVal" access="public">
                <type native="">ref ulong*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pullVal;
        }
        </code>
                </get>
            </field>
            <field name="pintVal" access="public">
                <type native="">ref int*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pintVal;
        }
        </code>
                </get>
            </field>
            <field name="puintVal" access="public">
                <type native="">ref uint*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;puintVal;
        }
        </code>
                </get>
            </field>
            <field name="pvRecord" access="public">
                <type native="">ref void*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union._Anonymous_e__Struct* pField = &amp;Anonymous.Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pvRecord;
        }
        </code>
                </get>
            </field>
            <field name="pRecInfo" access="public">
                <type native="">ref IRecordInfo*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union._Anonymous_e__Struct* pField = &amp;Anonymous.Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pRecInfo;
        }
        </code>
                </get>
            </field>
            <field name="decVal" access="public">
                <type native="">ref DECIMAL</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.decVal, 1));
        </code>
                </get>
            </field>
            <struct name="_Anonymous_e__Union" access="public" unsafe="true" layout="Explicit">
                <field name="Anonymous" access="public" offset="0">
                    <type native="tagVARIANT::(anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/OAIdl.h:472:9)">_Anonymous_e__Struct</type>
                </field>
                <field name="decVal" access="public" offset="0">
                    <type native="">DECIMAL</type>
                </field>
                <struct name="_Anonymous_e__Struct" access="public" unsafe="true">
                    <field name="vt" access="public">
                        <type native="VARTYPE">ushort</type>
                    </field>
                    <field name="wReserved1" access="public">
                        <type native="WORD">ushort</type>
                    </field>
                    <field name="wReserved2" access="public">
                        <type native="WORD">ushort</type>
                    </field>
                    <field name="wReserved3" access="public">
                        <type native="WORD">ushort</type>
                    </field>
                    <field name="Anonymous" access="public">
                        <type native="tagVARIANT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/OAIdl.h:478:13)">_Anonymous_e__Union</type>
                    </field>
                    <struct name="_Anonymous_e__Union" access="public" unsafe="true" layout="Explicit">
                        <field name="llVal" access="public" offset="0">
                            <type native="LONGLONG">long</type>
                        </field>
                        <field name="lVal" access="public" offset="0">
                            <type native="LONG">int</type>
                        </field>
                        <field name="bVal" access="public" offset="0">
                            <type native="BYTE">byte</type>
                        </field>
                        <field name="iVal" access="public" offset="0">
                            <type native="SHORT">short</type>
                        </field>
                        <field name="fltVal" access="public" offset="0">
                            <type native="FLOAT">float</type>
                        </field>
                        <field name="dblVal" access="public" offset="0">
                            <type native="DOUBLE">double</type>
                        </field>
                        <field name="boolVal" access="public" offset="0">
                            <type native="VARIANT_BOOL">short</type>
                        </field>
                        <field name="__OBSOLETE__VARIANT_BOOL" access="public" offset="0">
                            <type native="VARIANT_BOOL">short</type>
                        </field>
                        <field name="scode" access="public" offset="0">
                            <type native="SCODE">int</type>
                        </field>
                        <field name="cyVal" access="public" offset="0">
                            <type native="">CY</type>
                        </field>
                        <field name="date" access="public" offset="0">
                            <type native="DATE">double</type>
                        </field>
                        <field name="bstrVal" access="public" offset="0">
                            <type native="BSTR">ushort*</type>
                        </field>
                        <field name="punkVal" access="public" offset="0">
                            <type native="IUnknown *">IUnknown*</type>
                        </field>
                        <field name="pdispVal" access="public" offset="0">
                            <type native="IDispatch *">IDispatch*</type>
                        </field>
                        <field name="parray" access="public" offset="0">
                            <type native="SAFEARRAY *">SAFEARRAY*</type>
                        </field>
                        <field name="pbVal" access="public" offset="0">
                            <type native="BYTE *">byte*</type>
                        </field>
                        <field name="piVal" access="public" offset="0">
                            <type native="SHORT *">short*</type>
                        </field>
                        <field name="plVal" access="public" offset="0">
                            <type native="LONG *">int*</type>
                        </field>
                        <field name="pllVal" access="public" offset="0">
                            <type native="LONGLONG *">long*</type>
                        </field>
                        <field name="pfltVal" access="public" offset="0">
                            <type native="FLOAT *">float*</type>
                        </field>
                        <field name="pdblVal" access="public" offset="0">
                            <type native="DOUBLE *">double*</type>
                        </field>
                        <field name="pboolVal" access="public" offset="0">
                            <type native="VARIANT_BOOL *">short*</type>
                        </field>
                        <field name="__OBSOLETE__VARIANT_PBOOL" access="public" offset="0">
                            <type native="VARIANT_BOOL *">short*</type>
                        </field>
                        <field name="pscode" access="public" offset="0">
                            <type native="SCODE *">int*</type>
                        </field>
                        <field name="pcyVal" access="public" offset="0">
                            <type native="CY *">CY*</type>
                        </field>
                        <field name="pdate" access="public" offset="0">
                            <type native="DATE *">double*</type>
                        </field>
                        <field name="pbstrVal" access="public" offset="0">
                            <type native="BSTR *">ushort**</type>
                        </field>
                        <field name="ppunkVal" access="public" offset="0">
                            <type native="IUnknown **">IUnknown**</type>
                        </field>
                        <field name="ppdispVal" access="public" offset="0">
                            <type native="IDispatch **">IDispatch**</type>
                        </field>
                        <field name="pparray" access="public" offset="0">
                            <type native="SAFEARRAY **">SAFEARRAY**</type>
                        </field>
                        <field name="pvarVal" access="public" offset="0">
                            <type native="VARIANT *">VARIANT*</type>
                        </field>
                        <field name="byref" access="public" offset="0">
                            <type native="PVOID">void*</type>
                        </field>
                        <field name="cVal" access="public" offset="0">
                            <type native="CHAR">sbyte</type>
                        </field>
                        <field name="uiVal" access="public" offset="0">
                            <type native="USHORT">ushort</type>
                        </field>
                        <field name="ulVal" access="public" offset="0">
                            <type native="ULONG">uint</type>
                        </field>
                        <field name="ullVal" access="public" offset="0">
                            <type native="ULONGLONG">ulong</type>
                        </field>
                        <field name="intVal" access="public" offset="0">
                            <type native="INT">int</type>
                        </field>
                        <field name="uintVal" access="public" offset="0">
                            <type native="UINT">uint</type>
                        </field>
                        <field name="pdecVal" access="public" offset="0">
                            <type native="DECIMAL *">DECIMAL*</type>
                        </field>
                        <field name="pcVal" access="public" offset="0">
                            <type native="CHAR *">sbyte*</type>
                        </field>
                        <field name="puiVal" access="public" offset="0">
                            <type native="USHORT *">ushort*</type>
                        </field>
                        <field name="pulVal" access="public" offset="0">
                            <type native="ULONG *">uint*</type>
                        </field>
                        <field name="pullVal" access="public" offset="0">
                            <type native="ULONGLONG *">ulong*</type>
                        </field>
                        <field name="pintVal" access="public" offset="0">
                            <type native="INT *">int*</type>
                        </field>
                        <field name="puintVal" access="public" offset="0">
                            <type native="UINT *">uint*</type>
                        </field>
                        <field name="Anonymous" access="public" offset="0">
                            <type native="tagVARIANT::(anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/OAIdl.h:525:17)">_Anonymous_e__Struct</type>
                        </field>
                        <struct name="_Anonymous_e__Struct" access="public" unsafe="true">
                            <field name="pvRecord" access="public">
                                <type native="PVOID">void*</type>
                            </field>
                            <field name="pRecInfo" access="public">
                                <type native="IRecordInfo *">IRecordInfo*</type>
                            </field>
                        </struct>
                    </struct>
                </struct>
            </struct>
        </struct>
    </namespace>
</bindings>
