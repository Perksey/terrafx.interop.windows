<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/xamlOM.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <enumeration name="BaseValueSource" access="public">
            <type>int</type>
            <enumerator name="BaseValueSourceUnknown" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0
        </code>
                </value>
            </enumerator>
            <enumerator name="BaseValueSourceDefault" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(BaseValueSourceUnknown + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="BaseValueSourceBuiltInStyle" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(BaseValueSourceDefault + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="BaseValueSourceStyle" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(BaseValueSourceBuiltInStyle + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="BaseValueSourceLocal" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(BaseValueSourceStyle + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="Inherited" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(BaseValueSourceLocal + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DefaultStyleTrigger" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(Inherited + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="TemplateTrigger" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DefaultStyleTrigger + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="StyleTrigger" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(TemplateTrigger + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="ImplicitStyleReference" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(StyleTrigger + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="ParentTemplate" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(ImplicitStyleReference + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="ParentTemplateTrigger" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(ParentTemplate + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="Animation" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(ParentTemplateTrigger + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="Coercion" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(Animation + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="BaseValueSourceVisualState" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(Coercion + 1)
        </code>
                </value>
            </enumerator>
        </enumeration>
    </namespace>
</bindings>
