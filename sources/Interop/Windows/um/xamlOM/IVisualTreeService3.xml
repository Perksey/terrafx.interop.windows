<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/xamlOM.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IVisualTreeService3" access="public" native="struct IVisualTreeService3 : IVisualTreeService2" uuid="0e79c6e0-85a0-4be8-b41a-655cf1fd19bd" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="AdviseVisualTreeChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCallback">
                    <type>IVisualTreeServiceCallback*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, IVisualTreeServiceCallback*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="pCallback">pCallback</param>);
        </code>
                </body>
            </function>
            <function name="UnadviseVisualTreeChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCallback">
                    <type>IVisualTreeServiceCallback*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, IVisualTreeServiceCallback*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="pCallback">pCallback</param>);
        </code>
                </body>
            </function>
            <function name="GetEnums" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCount">
                    <type>uint*</type>
                </param>
                <param name="ppEnums">
                    <type>EnumType**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, uint*, EnumType**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="pCount">pCount</param>, <param name="ppEnums">ppEnums</param>);
        </code>
                </body>
            </function>
            <function name="CreateInstance" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="typeName">
                    <type>ushort*</type>
                </param>
                <param name="value">
                    <type>ushort*</type>
                </param>
                <param name="pInstanceHandle">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ushort*, ushort*, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="typeName">typeName</param>, <param name="value">value</param>, <param name="pInstanceHandle">pInstanceHandle</param>);
        </code>
                </body>
            </function>
            <function name="GetPropertyValuesChain" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="instanceHandle">
                    <type>ulong</type>
                </param>
                <param name="pSourceCount">
                    <type>uint*</type>
                </param>
                <param name="ppPropertySources">
                    <type>PropertyChainSource**</type>
                </param>
                <param name="pPropertyCount">
                    <type>uint*</type>
                </param>
                <param name="ppPropertyValues">
                    <type>PropertyChainValue**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, uint*, PropertyChainSource**, uint*, PropertyChainValue**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="instanceHandle">instanceHandle</param>, <param name="pSourceCount">pSourceCount</param>, <param name="ppPropertySources">ppPropertySources</param>, <param name="pPropertyCount">pPropertyCount</param>, <param name="ppPropertyValues">ppPropertyValues</param>);
        </code>
                </body>
            </function>
            <function name="SetProperty" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="instanceHandle">
                    <type>ulong</type>
                </param>
                <param name="value">
                    <type>ulong</type>
                </param>
                <param name="propertyIndex">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, ulong, uint, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="instanceHandle">instanceHandle</param>, <param name="value">value</param>, <param name="propertyIndex">propertyIndex</param>);
        </code>
                </body>
            </function>
            <function name="ClearProperty" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="instanceHandle">
                    <type>ulong</type>
                </param>
                <param name="propertyIndex">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, uint, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="instanceHandle">instanceHandle</param>, <param name="propertyIndex">propertyIndex</param>);
        </code>
                </body>
            </function>
            <function name="GetCollectionCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="instanceHandle">
                    <type>ulong</type>
                </param>
                <param name="pCollectionSize">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="instanceHandle">instanceHandle</param>, <param name="pCollectionSize">pCollectionSize</param>);
        </code>
                </body>
            </function>
            <function name="GetCollectionElements" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="instanceHandle">
                    <type>ulong</type>
                </param>
                <param name="startIndex">
                    <type>uint</type>
                </param>
                <param name="pElementCount">
                    <type>uint*</type>
                </param>
                <param name="ppElementValues">
                    <type>CollectionElementValue**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, uint, uint*, CollectionElementValue**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="instanceHandle">instanceHandle</param>, <param name="startIndex">startIndex</param>, <param name="pElementCount">pElementCount</param>, <param name="ppElementValues">ppElementValues</param>);
        </code>
                </body>
            </function>
            <function name="AddChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="parent">
                    <type>ulong</type>
                </param>
                <param name="child">
                    <type>ulong</type>
                </param>
                <param name="index">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, ulong, uint, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="parent">parent</param>, <param name="child">child</param>, <param name="index">index</param>);
        </code>
                </body>
            </function>
            <function name="RemoveChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="parent">
                    <type>ulong</type>
                </param>
                <param name="index">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, uint, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="parent">parent</param>, <param name="index">index</param>);
        </code>
                </body>
            </function>
            <function name="ClearChildren" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="parent">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="parent">parent</param>);
        </code>
                </body>
            </function>
            <function name="GetPropertyIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="@object">
                    <type>ulong</type>
                </param>
                <param name="propertyName">
                    <type>ushort*</type>
                </param>
                <param name="pPropertyIndex">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="@object">@object</param>, <param name="propertyName">propertyName</param>, <param name="pPropertyIndex">pPropertyIndex</param>);
        </code>
                </body>
            </function>
            <function name="GetProperty" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="@object">
                    <type>ulong</type>
                </param>
                <param name="propertyIndex">
                    <type>uint</type>
                </param>
                <param name="pValue">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, uint, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="@object">@object</param>, <param name="propertyIndex">propertyIndex</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="ReplaceResource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="resourceDictionary">
                    <type>ulong</type>
                </param>
                <param name="key">
                    <type>ulong</type>
                </param>
                <param name="newValue">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, ulong, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="resourceDictionary">resourceDictionary</param>, <param name="key">key</param>, <param name="newValue">newValue</param>);
        </code>
                </body>
            </function>
            <function name="RenderTargetBitmap" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="handle">
                    <type>ulong</type>
                </param>
                <param name="options">
                    <type>RenderTargetBitmapOptions</type>
                </param>
                <param name="maxPixelWidth">
                    <type>uint</type>
                </param>
                <param name="maxPixelHeight">
                    <type>uint</type>
                </param>
                <param name="ppBitmapData">
                    <type>IBitmapData**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, RenderTargetBitmapOptions, uint, uint, IBitmapData**, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="handle">handle</param>, <param name="options">options</param>, <param name="maxPixelWidth">maxPixelWidth</param>, <param name="maxPixelHeight">maxPixelHeight</param>, <param name="ppBitmapData">ppBitmapData</param>);
        </code>
                </body>
            </function>
            <function name="ResolveResource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="resourceContext">
                    <type>ulong</type>
                </param>
                <param name="resourceName">
                    <type>ushort*</type>
                </param>
                <param name="resourceType">
                    <type>ResourceType</type>
                </param>
                <param name="propertyIndex">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, ushort*, ResourceType, uint, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="resourceContext">resourceContext</param>, <param name="resourceName">resourceName</param>, <param name="resourceType">resourceType</param>, <param name="propertyIndex">propertyIndex</param>);
        </code>
                </body>
            </function>
            <function name="GetDictionaryItem" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dictionaryHandle">
                    <type>ulong</type>
                </param>
                <param name="resourceName">
                    <type>ushort*</type>
                </param>
                <param name="resourceIsImplicitStyle">
                    <type>int</type>
                </param>
                <param name="resourceHandle">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, ushort*, int, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="dictionaryHandle">dictionaryHandle</param>, <param name="resourceName">resourceName</param>, <param name="resourceIsImplicitStyle">resourceIsImplicitStyle</param>, <param name="resourceHandle">resourceHandle</param>);
        </code>
                </body>
            </function>
            <function name="AddDictionaryItem" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dictionaryHandle">
                    <type>ulong</type>
                </param>
                <param name="resourceKey">
                    <type>ulong</type>
                </param>
                <param name="resourceHandle">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, ulong, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="dictionaryHandle">dictionaryHandle</param>, <param name="resourceKey">resourceKey</param>, <param name="resourceHandle">resourceHandle</param>);
        </code>
                </body>
            </function>
            <function name="RemoveDictionaryItem" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dictionaryHandle">
                    <type>ulong</type>
                </param>
                <param name="resourceKey">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVisualTreeService3*, ulong, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IVisualTreeService3*)Unsafe.AsPointer(ref this)</param>, <param name="dictionaryHandle">dictionaryHandle</param>, <param name="resourceKey">resourceKey</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
