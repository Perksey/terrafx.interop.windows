<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/ctfutb.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ITfLangBarMgr" access="public" native="struct ITfLangBarMgr : IUnknown" uuid="87955690-e627-11d2-8ddb-00105a2799b5" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="AdviseEventSink" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSink">
                    <type>ITfLangBarEventSink*</type>
                </param>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="pdwCookie">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, ITfLangBarEventSink*, IntPtr, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="pSink">pSink</param>, <param name="hwnd">hwnd</param>, <param name="dwFlags">dwFlags</param>, <param name="pdwCookie">pdwCookie</param>);
        </code>
                </body>
            </function>
            <function name="UnadviseEventSink" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwCookie">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="dwCookie">dwCookie</param>);
        </code>
                </body>
            </function>
            <function name="GetThreadMarshalInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwThreadId">
                    <type>uint</type>
                </param>
                <param name="dwType">
                    <type>uint</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppunk">
                    <type>IUnknown**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint, uint, Guid*, IUnknown**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="dwThreadId">dwThreadId</param>, <param name="dwType">dwType</param>, <param name="riid">riid</param>, <param name="ppunk">ppunk</param>);
        </code>
                </body>
            </function>
            <function name="GetThreadLangBarItemMgr" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwThreadId">
                    <type>uint</type>
                </param>
                <param name="pplbi">
                    <type>ITfLangBarItemMgr**</type>
                </param>
                <param name="pdwThreadid">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint, ITfLangBarItemMgr**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="dwThreadId">dwThreadId</param>, <param name="pplbi">pplbi</param>, <param name="pdwThreadid">pdwThreadid</param>);
        </code>
                </body>
            </function>
            <function name="GetInputProcessorProfiles" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwThreadId">
                    <type>uint</type>
                </param>
                <param name="ppaip">
                    <type>ITfInputProcessorProfiles**</type>
                </param>
                <param name="pdwThreadid">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint, ITfInputProcessorProfiles**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="dwThreadId">dwThreadId</param>, <param name="ppaip">ppaip</param>, <param name="pdwThreadid">pdwThreadid</param>);
        </code>
                </body>
            </function>
            <function name="RestoreLastFocus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwThreadId">
                    <type>uint*</type>
                </param>
                <param name="fPrev">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint*, int, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="pdwThreadId">pdwThreadId</param>, <param name="fPrev">fPrev</param>);
        </code>
                </body>
            </function>
            <function name="SetModalInput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSink">
                    <type>ITfLangBarEventSink*</type>
                </param>
                <param name="dwThreadId">
                    <type>uint</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, ITfLangBarEventSink*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="pSink">pSink</param>, <param name="dwThreadId">dwThreadId</param>, <param name="dwFlags">dwFlags</param>);
        </code>
                </body>
            </function>
            <function name="ShowFloating" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="dwFlags">dwFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetShowFloatingStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwFlags">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfLangBarMgr*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ITfLangBarMgr*)Unsafe.AsPointer(ref this)</param>, <param name="pdwFlags">pdwFlags</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
