<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/imapi2.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDiscFormat2Data" access="public" native="struct IDiscFormat2Data : IDiscFormat2" uuid="27354153-9f64-5b0f-8f00-5d77afbe261e" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfoCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pctinfo">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="pctinfo">pctinfo</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="iTInfo">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="ppTInfo">
                    <type>ITypeInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, uint, uint, ITypeInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="iTInfo">iTInfo</param>, <param name="lcid">lcid</param>, <param name="ppTInfo">ppTInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetIDsOfNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="rgDispId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, Guid*, ushort**, uint, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>, <param name="lcid">lcid</param>, <param name="rgDispId">rgDispId</param>);
        </code>
                </body>
            </function>
            <function name="Invoke" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dispIdMember">
                    <type>int</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="wFlags">
                    <type>ushort</type>
                </param>
                <param name="pDispParams">
                    <type>DISPPARAMS*</type>
                </param>
                <param name="pVarResult">
                    <type>VARIANT*</type>
                </param>
                <param name="pExcepInfo">
                    <type>EXCEPINFO*</type>
                </param>
                <param name="puArgErr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int, Guid*, uint, ushort, DISPPARAMS*, VARIANT*, EXCEPINFO*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="dispIdMember">dispIdMember</param>, <param name="riid">riid</param>, <param name="lcid">lcid</param>, <param name="wFlags">wFlags</param>, <param name="pDispParams">pDispParams</param>, <param name="pVarResult">pVarResult</param>, <param name="pExcepInfo">pExcepInfo</param>, <param name="puArgErr">puArgErr</param>);
        </code>
                </body>
            </function>
            <function name="IsRecorderSupported" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="recorder">
                    <type>IDiscRecorder2*</type>
                </param>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, IDiscRecorder2*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="recorder">recorder</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="IsCurrentMediaSupported" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="recorder">
                    <type>IDiscRecorder2*</type>
                </param>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, IDiscRecorder2*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="recorder">recorder</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_MediaPhysicallyBlank" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_MediaHeuristicallyBlank" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_SupportedMediaTypes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>SAFEARRAY**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, SAFEARRAY**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="put_Recorder" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>IDiscRecorder2*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, IDiscRecorder2*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_Recorder" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>IDiscRecorder2**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, IDiscRecorder2**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="put_BufferUnderrunFreeDisabled" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_BufferUnderrunFreeDisabled" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="put_PostgapAlreadyInImage" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_PostgapAlreadyInImage" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_CurrentMediaStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>IMAPI_FORMAT2_DATA_MEDIA_STATE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, IMAPI_FORMAT2_DATA_MEDIA_STATE*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_WriteProtectStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>IMAPI_MEDIA_WRITE_PROTECT_STATE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, IMAPI_MEDIA_WRITE_PROTECT_STATE*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_TotalSectorsOnMedia" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_FreeSectorsOnMedia" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_NextWritableAddress" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_StartAddressOfPreviousSession" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_LastWrittenAddressOfPreviousSession" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="put_ForceMediaToBeClosed" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_ForceMediaToBeClosed" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="put_DisableConsumerDvdCompatibilityMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_DisableConsumerDvdCompatibilityMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_CurrentPhysicalMediaType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>IMAPI_MEDIA_PHYSICAL_TYPE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, IMAPI_MEDIA_PHYSICAL_TYPE*, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="put_ClientName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_ClientName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_RequestedWriteSpeed" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_RequestedRotationTypeIsPureCAV" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_CurrentWriteSpeed" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">34</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_CurrentRotationTypeIsPureCAV" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">35</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_SupportedWriteSpeeds" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="supportedSpeeds">
                    <type>SAFEARRAY**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, SAFEARRAY**, int&gt;)(lpVtbl[<vtbl explicit="False">36</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="supportedSpeeds">supportedSpeeds</param>);
        </code>
                </body>
            </function>
            <function name="get_SupportedWriteSpeedDescriptors" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="supportedSpeedDescriptors">
                    <type>SAFEARRAY**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, SAFEARRAY**, int&gt;)(lpVtbl[<vtbl explicit="False">37</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="supportedSpeedDescriptors">supportedSpeedDescriptors</param>);
        </code>
                </body>
            </function>
            <function name="put_ForceOverwrite" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short, int&gt;)(lpVtbl[<vtbl explicit="False">38</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_ForceOverwrite" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">39</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_MultisessionInterfaces" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>SAFEARRAY**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, SAFEARRAY**, int&gt;)(lpVtbl[<vtbl explicit="False">40</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="Write" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="data">
                    <type>IStream*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, IStream*, int&gt;)(lpVtbl[<vtbl explicit="False">41</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="data">data</param>);
        </code>
                </body>
            </function>
            <function name="CancelWrite" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int&gt;)(lpVtbl[<vtbl explicit="False">42</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetWriteSpeed" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="RequestedSectorsPerSecond">
                    <type>int</type>
                </param>
                <param name="RotationTypeIsPureCAV">
                    <type>short</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDiscFormat2Data*, int, short, int&gt;)(lpVtbl[<vtbl explicit="False">43</vtbl>]))(<param special="thisPtr">(IDiscFormat2Data*)Unsafe.AsPointer(ref this)</param>, <param name="RequestedSectorsPerSecond">RequestedSectorsPerSecond</param>, <param name="RotationTypeIsPureCAV">RotationTypeIsPureCAV</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
