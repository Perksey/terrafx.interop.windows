<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/SetupAPI.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <class name="Windows" access="public" static="true" unsafe="true">
            <function name="SetupGetInfInformationA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfSpec">
                    <type>void*</type>
                </param>
                <param name="SearchControl">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>SP_INF_INFORMATION*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetInfInformationW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfSpec">
                    <type>void*</type>
                </param>
                <param name="SearchControl">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>SP_INF_INFORMATION*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupQueryInfFileInformationA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfInformation">
                    <type>SP_INF_INFORMATION*</type>
                </param>
                <param name="InfIndex">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupQueryInfFileInformationW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfInformation">
                    <type>SP_INF_INFORMATION*</type>
                </param>
                <param name="InfIndex">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupQueryInfOriginalFileInformationA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfInformation">
                    <type>SP_INF_INFORMATION*</type>
                </param>
                <param name="InfIndex">
                    <type>uint</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="OriginalFileInfo">
                    <type>SP_ORIGINAL_FILE_INFO_A*</type>
                </param>
            </function>
            <function name="SetupQueryInfOriginalFileInformationW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfInformation">
                    <type>SP_INF_INFORMATION*</type>
                </param>
                <param name="InfIndex">
                    <type>uint</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="OriginalFileInfo">
                    <type>SP_ORIGINAL_FILE_INFO_W*</type>
                </param>
            </function>
            <function name="SetupQueryInfVersionInformationA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfInformation">
                    <type>SP_INF_INFORMATION*</type>
                </param>
                <param name="InfIndex">
                    <type>uint</type>
                </param>
                <param name="Key">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupQueryInfVersionInformationW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfInformation">
                    <type>SP_INF_INFORMATION*</type>
                </param>
                <param name="InfIndex">
                    <type>uint</type>
                </param>
                <param name="Key">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetInfDriverStoreLocationA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileName">
                    <type>sbyte*</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="LocaleName">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetInfDriverStoreLocationW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileName">
                    <type>ushort*</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="LocaleName">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetInfPublishedNameA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DriverStoreLocation">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetInfPublishedNameW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DriverStoreLocation">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetInfFileListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DirectoryPath">
                    <type>sbyte*</type>
                </param>
                <param name="InfStyle">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetInfFileListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DirectoryPath">
                    <type>ushort*</type>
                </param>
                <param name="InfStyle">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupOpenInfFileW" access="public" lib="setupapi" static="true">
                <type native="HINF">void*</type>
                <param name="FileName">
                    <type>ushort*</type>
                </param>
                <param name="InfClass">
                    <type>ushort*</type>
                </param>
                <param name="InfStyle">
                    <type>uint</type>
                </param>
                <param name="ErrorLine">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupOpenInfFileA" access="public" lib="setupapi" static="true">
                <type native="HINF">void*</type>
                <param name="FileName">
                    <type>sbyte*</type>
                </param>
                <param name="InfClass">
                    <type>sbyte*</type>
                </param>
                <param name="InfStyle">
                    <type>uint</type>
                </param>
                <param name="ErrorLine">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupOpenMasterInf" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="HINF">void*</type>
            </function>
            <function name="SetupOpenAppendInfFileW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileName">
                    <type>ushort*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ErrorLine">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupOpenAppendInfFileA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileName">
                    <type>sbyte*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ErrorLine">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupCloseInfFile" access="public" lib="setupapi" static="true">
                <type>void</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupFindFirstLineA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
                <param name="Key">
                    <type>sbyte*</type>
                </param>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupFindFirstLineW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
                <param name="Key">
                    <type>ushort*</type>
                </param>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupFindNextLine" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="ContextIn">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="ContextOut">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupFindNextMatchLineA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ContextIn">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="Key">
                    <type>sbyte*</type>
                </param>
                <param name="ContextOut">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupFindNextMatchLineW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ContextIn">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="Key">
                    <type>ushort*</type>
                </param>
                <param name="ContextOut">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupGetLineByIndexA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
                <param name="Index">
                    <type>uint</type>
                </param>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupGetLineByIndexW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
                <param name="Index">
                    <type>uint</type>
                </param>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupGetLineCountA" access="public" lib="setupapi" static="true">
                <type native="LONG">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupGetLineCountW" access="public" lib="setupapi" static="true">
                <type native="LONG">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupGetLineTextA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
                <param name="Key">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetLineTextW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
                <param name="Key">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetFieldCount" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="DWORD">uint</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupGetStringFieldA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FieldIndex">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetStringFieldW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FieldIndex">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetIntField" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FieldIndex">
                    <type>uint</type>
                </param>
                <param name="IntegerValue">
                    <type>int*</type>
                </param>
            </function>
            <function name="SetupGetMultiSzFieldA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FieldIndex">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetMultiSzFieldW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FieldIndex">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetBinaryField" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FieldIndex">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>byte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetFileCompressionInfoA" access="public" lib="setupapi" static="true">
                <type native="DWORD">uint</type>
                <param name="SourceFileName">
                    <type>sbyte*</type>
                </param>
                <param name="ActualSourceFileName">
                    <type>sbyte**</type>
                </param>
                <param name="SourceFileSize">
                    <type>uint*</type>
                </param>
                <param name="TargetFileSize">
                    <type>uint*</type>
                </param>
                <param name="CompressionType">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetFileCompressionInfoW" access="public" lib="setupapi" static="true">
                <type native="DWORD">uint</type>
                <param name="SourceFileName">
                    <type>ushort*</type>
                </param>
                <param name="ActualSourceFileName">
                    <type>ushort**</type>
                </param>
                <param name="SourceFileSize">
                    <type>uint*</type>
                </param>
                <param name="TargetFileSize">
                    <type>uint*</type>
                </param>
                <param name="CompressionType">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetFileCompressionInfoExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="SourceFileName">
                    <type>sbyte*</type>
                </param>
                <param name="ActualSourceFileNameBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ActualSourceFileNameBufferLen">
                    <type>uint</type>
                </param>
                <param name="RequiredBufferLen">
                    <type>uint*</type>
                </param>
                <param name="SourceFileSize">
                    <type>uint*</type>
                </param>
                <param name="TargetFileSize">
                    <type>uint*</type>
                </param>
                <param name="CompressionType">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetFileCompressionInfoExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="SourceFileName">
                    <type>ushort*</type>
                </param>
                <param name="ActualSourceFileNameBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ActualSourceFileNameBufferLen">
                    <type>uint</type>
                </param>
                <param name="RequiredBufferLen">
                    <type>uint*</type>
                </param>
                <param name="SourceFileSize">
                    <type>uint*</type>
                </param>
                <param name="TargetFileSize">
                    <type>uint*</type>
                </param>
                <param name="CompressionType">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDecompressOrCopyFileA" access="public" lib="setupapi" static="true">
                <type native="DWORD">uint</type>
                <param name="SourceFileName">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFileName">
                    <type>sbyte*</type>
                </param>
                <param name="CompressionType">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDecompressOrCopyFileW" access="public" lib="setupapi" static="true">
                <type native="DWORD">uint</type>
                <param name="SourceFileName">
                    <type>ushort*</type>
                </param>
                <param name="TargetFileName">
                    <type>ushort*</type>
                </param>
                <param name="CompressionType">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetSourceFileLocationA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FileName">
                    <type>sbyte*</type>
                </param>
                <param name="SourceId">
                    <type>uint*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetSourceFileLocationW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FileName">
                    <type>ushort*</type>
                </param>
                <param name="SourceId">
                    <type>uint*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetSourceFileSizeA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FileName">
                    <type>sbyte*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
                <param name="FileSize">
                    <type>uint*</type>
                </param>
                <param name="RoundingFactor">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupGetSourceFileSizeW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="FileName">
                    <type>ushort*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
                <param name="FileSize">
                    <type>uint*</type>
                </param>
                <param name="RoundingFactor">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupGetTargetPathA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetTargetPathW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupSetSourceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="SourceList">
                    <type>sbyte**</type>
                </param>
                <param name="SourceCount">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupSetSourceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="SourceList">
                    <type>ushort**</type>
                </param>
                <param name="SourceCount">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupCancelTemporarySourceList" access="public" lib="setupapi" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="SetupAddToSourceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Source">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupAddToSourceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Source">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupRemoveFromSourceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Source">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupRemoveFromSourceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Source">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupQuerySourceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="List">
                    <type>sbyte***</type>
                </param>
                <param name="Count">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupQuerySourceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="List">
                    <type>ushort***</type>
                </param>
                <param name="Count">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupFreeSourceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="List">
                    <type>sbyte***</type>
                </param>
                <param name="Count">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupFreeSourceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="List">
                    <type>ushort***</type>
                </param>
                <param name="Count">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupPromptForDiskA" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>sbyte*</type>
                </param>
                <param name="DiskName">
                    <type>sbyte*</type>
                </param>
                <param name="PathToSource">
                    <type>sbyte*</type>
                </param>
                <param name="FileSought">
                    <type>sbyte*</type>
                </param>
                <param name="TagFile">
                    <type>sbyte*</type>
                </param>
                <param name="DiskPromptStyle">
                    <type>uint</type>
                </param>
                <param name="PathBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="PathBufferSize">
                    <type>uint</type>
                </param>
                <param name="PathRequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupPromptForDiskW" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>ushort*</type>
                </param>
                <param name="DiskName">
                    <type>ushort*</type>
                </param>
                <param name="PathToSource">
                    <type>ushort*</type>
                </param>
                <param name="FileSought">
                    <type>ushort*</type>
                </param>
                <param name="TagFile">
                    <type>ushort*</type>
                </param>
                <param name="DiskPromptStyle">
                    <type>uint</type>
                </param>
                <param name="PathBuffer">
                    <type>ushort*</type>
                </param>
                <param name="PathBufferSize">
                    <type>uint</type>
                </param>
                <param name="PathRequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupCopyErrorA" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>sbyte*</type>
                </param>
                <param name="DiskName">
                    <type>sbyte*</type>
                </param>
                <param name="PathToSource">
                    <type>sbyte*</type>
                </param>
                <param name="SourceFile">
                    <type>sbyte*</type>
                </param>
                <param name="TargetPathFile">
                    <type>sbyte*</type>
                </param>
                <param name="Win32ErrorCode">
                    <type>uint</type>
                </param>
                <param name="Style">
                    <type>uint</type>
                </param>
                <param name="PathBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="PathBufferSize">
                    <type>uint</type>
                </param>
                <param name="PathRequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupCopyErrorW" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>ushort*</type>
                </param>
                <param name="DiskName">
                    <type>ushort*</type>
                </param>
                <param name="PathToSource">
                    <type>ushort*</type>
                </param>
                <param name="SourceFile">
                    <type>ushort*</type>
                </param>
                <param name="TargetPathFile">
                    <type>ushort*</type>
                </param>
                <param name="Win32ErrorCode">
                    <type>uint</type>
                </param>
                <param name="Style">
                    <type>uint</type>
                </param>
                <param name="PathBuffer">
                    <type>ushort*</type>
                </param>
                <param name="PathBufferSize">
                    <type>uint</type>
                </param>
                <param name="PathRequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupRenameErrorA" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>sbyte*</type>
                </param>
                <param name="SourceFile">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFile">
                    <type>sbyte*</type>
                </param>
                <param name="Win32ErrorCode">
                    <type>uint</type>
                </param>
                <param name="Style">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupRenameErrorW" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>ushort*</type>
                </param>
                <param name="SourceFile">
                    <type>ushort*</type>
                </param>
                <param name="TargetFile">
                    <type>ushort*</type>
                </param>
                <param name="Win32ErrorCode">
                    <type>uint</type>
                </param>
                <param name="Style">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDeleteErrorA" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>sbyte*</type>
                </param>
                <param name="File">
                    <type>sbyte*</type>
                </param>
                <param name="Win32ErrorCode">
                    <type>uint</type>
                </param>
                <param name="Style">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDeleteErrorW" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>ushort*</type>
                </param>
                <param name="File">
                    <type>ushort*</type>
                </param>
                <param name="Win32ErrorCode">
                    <type>uint</type>
                </param>
                <param name="Style">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupBackupErrorA" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>sbyte*</type>
                </param>
                <param name="SourceFile">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFile">
                    <type>sbyte*</type>
                </param>
                <param name="Win32ErrorCode">
                    <type>uint</type>
                </param>
                <param name="Style">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupBackupErrorW" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DialogTitle">
                    <type>ushort*</type>
                </param>
                <param name="SourceFile">
                    <type>ushort*</type>
                </param>
                <param name="TargetFile">
                    <type>ushort*</type>
                </param>
                <param name="Win32ErrorCode">
                    <type>uint</type>
                </param>
                <param name="Style">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupSetDirectoryIdA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Id">
                    <type>uint</type>
                </param>
                <param name="Directory">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupSetDirectoryIdW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Id">
                    <type>uint</type>
                </param>
                <param name="Directory">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupSetDirectoryIdExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Id">
                    <type>uint</type>
                </param>
                <param name="Directory">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>uint</type>
                </param>
                <param name="Reserved2">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupSetDirectoryIdExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Id">
                    <type>uint</type>
                </param>
                <param name="Directory">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>uint</type>
                </param>
                <param name="Reserved2">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupGetSourceInfoA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SourceId">
                    <type>uint</type>
                </param>
                <param name="InfoDesired">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetSourceInfoW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SourceId">
                    <type>uint</type>
                </param>
                <param name="InfoDesired">
                    <type>uint</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupInstallFileA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="SourceFile">
                    <type>sbyte*</type>
                </param>
                <param name="SourcePathRoot">
                    <type>sbyte*</type>
                </param>
                <param name="DestinationName">
                    <type>sbyte*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
                <param name="CopyMsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupInstallFileW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="SourceFile">
                    <type>ushort*</type>
                </param>
                <param name="SourcePathRoot">
                    <type>ushort*</type>
                </param>
                <param name="DestinationName">
                    <type>ushort*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
                <param name="CopyMsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupInstallFileExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="SourceFile">
                    <type>sbyte*</type>
                </param>
                <param name="SourcePathRoot">
                    <type>sbyte*</type>
                </param>
                <param name="DestinationName">
                    <type>sbyte*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
                <param name="CopyMsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
                <param name="FileWasInUse">
                    <type>int*</type>
                </param>
            </function>
            <function name="SetupInstallFileExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfContext">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="SourceFile">
                    <type>ushort*</type>
                </param>
                <param name="SourcePathRoot">
                    <type>ushort*</type>
                </param>
                <param name="DestinationName">
                    <type>ushort*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
                <param name="CopyMsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
                <param name="FileWasInUse">
                    <type>int*</type>
                </param>
            </function>
            <function name="SetupOpenFileQueue" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="HSPFILEQ">void*</type>
            </function>
            <function name="SetupCloseFileQueue" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupSetFileQueueAlternatePlatformA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="AlternateDefaultCatalogFile">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupSetFileQueueAlternatePlatformW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="AlternateDefaultCatalogFile">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupSetPlatformPathOverrideA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Override">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupSetPlatformPathOverrideW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Override">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupQueueCopyA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="SourceRootPath">
                    <type>sbyte*</type>
                </param>
                <param name="SourcePath">
                    <type>sbyte*</type>
                </param>
                <param name="SourceFilename">
                    <type>sbyte*</type>
                </param>
                <param name="SourceDescription">
                    <type>sbyte*</type>
                </param>
                <param name="SourceTagfile">
                    <type>sbyte*</type>
                </param>
                <param name="TargetDirectory">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFilename">
                    <type>sbyte*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupQueueCopyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="SourceRootPath">
                    <type>ushort*</type>
                </param>
                <param name="SourcePath">
                    <type>ushort*</type>
                </param>
                <param name="SourceFilename">
                    <type>ushort*</type>
                </param>
                <param name="SourceDescription">
                    <type>ushort*</type>
                </param>
                <param name="SourceTagfile">
                    <type>ushort*</type>
                </param>
                <param name="TargetDirectory">
                    <type>ushort*</type>
                </param>
                <param name="TargetFilename">
                    <type>ushort*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupQueueCopyIndirectA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="CopyParams">
                    <type>SP_FILE_COPY_PARAMS_A*</type>
                </param>
            </function>
            <function name="SetupQueueCopyIndirectW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="CopyParams">
                    <type>SP_FILE_COPY_PARAMS_W*</type>
                </param>
            </function>
            <function name="SetupQueueDefaultCopyA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SourceRootPath">
                    <type>sbyte*</type>
                </param>
                <param name="SourceFilename">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFilename">
                    <type>sbyte*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupQueueDefaultCopyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SourceRootPath">
                    <type>ushort*</type>
                </param>
                <param name="SourceFilename">
                    <type>ushort*</type>
                </param>
                <param name="TargetFilename">
                    <type>ushort*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupQueueCopySectionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="SourceRootPath">
                    <type>sbyte*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupQueueCopySectionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="SourceRootPath">
                    <type>ushort*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupQueueDeleteA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="PathPart1">
                    <type>sbyte*</type>
                </param>
                <param name="PathPart2">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupQueueDeleteW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="PathPart1">
                    <type>ushort*</type>
                </param>
                <param name="PathPart2">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupQueueDeleteSectionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupQueueDeleteSectionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupQueueRenameA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="SourcePath">
                    <type>sbyte*</type>
                </param>
                <param name="SourceFilename">
                    <type>sbyte*</type>
                </param>
                <param name="TargetPath">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFilename">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupQueueRenameW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="SourcePath">
                    <type>ushort*</type>
                </param>
                <param name="SourceFilename">
                    <type>ushort*</type>
                </param>
                <param name="TargetPath">
                    <type>ushort*</type>
                </param>
                <param name="TargetFilename">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupQueueRenameSectionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupQueueRenameSectionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="Section">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupCommitFileQueueA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Owner">
                    <type>IntPtr</type>
                </param>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="MsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupCommitFileQueueW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Owner">
                    <type>IntPtr</type>
                </param>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="MsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupScanFileQueueA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Window">
                    <type>IntPtr</type>
                </param>
                <param name="CallbackRoutine">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="CallbackContext">
                    <type>void*</type>
                </param>
                <param name="Result">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupScanFileQueueW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Window">
                    <type>IntPtr</type>
                </param>
                <param name="CallbackRoutine">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="CallbackContext">
                    <type>void*</type>
                </param>
                <param name="Result">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetFileQueueCount" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="SubQueueFileOp">
                    <type>uint</type>
                </param>
                <param name="NumOperations">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupGetFileQueueFlags" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="Flags">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupSetFileQueueFlags" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="FlagMask">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupCopyOEMInfA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="SourceInfFileName">
                    <type>sbyte*</type>
                </param>
                <param name="OEMSourceMediaLocation">
                    <type>sbyte*</type>
                </param>
                <param name="OEMSourceMediaType">
                    <type>uint</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
                <param name="DestinationInfFileName">
                    <type>sbyte*</type>
                </param>
                <param name="DestinationInfFileNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="DestinationInfFileNameComponent">
                    <type>sbyte**</type>
                </param>
            </function>
            <function name="SetupCopyOEMInfW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="SourceInfFileName">
                    <type>ushort*</type>
                </param>
                <param name="OEMSourceMediaLocation">
                    <type>ushort*</type>
                </param>
                <param name="OEMSourceMediaType">
                    <type>uint</type>
                </param>
                <param name="CopyStyle">
                    <type>uint</type>
                </param>
                <param name="DestinationInfFileName">
                    <type>ushort*</type>
                </param>
                <param name="DestinationInfFileNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="DestinationInfFileNameComponent">
                    <type>ushort**</type>
                </param>
            </function>
            <function name="SetupUninstallOEMInfA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfFileName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupUninstallOEMInfW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfFileName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupUninstallNewlyCopiedInfs" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupCreateDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="HDSKSPC">void*</type>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupCreateDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="HDSKSPC">void*</type>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDuplicateDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="HDSKSPC">void*</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDuplicateDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="HDSKSPC">void*</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDestroyDiskSpaceList" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupQueryDrivesInDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupQueryDrivesInDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="ReturnBuffer">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupQuerySpaceRequiredOnDriveA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="DriveSpec">
                    <type>sbyte*</type>
                </param>
                <param name="SpaceRequired">
                    <type>long*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupQuerySpaceRequiredOnDriveW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="DriveSpec">
                    <type>ushort*</type>
                </param>
                <param name="SpaceRequired">
                    <type>long*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupAdjustDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="DriveRoot">
                    <type>sbyte*</type>
                </param>
                <param name="Amount">
                    <type>long</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupAdjustDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="DriveRoot">
                    <type>ushort*</type>
                </param>
                <param name="Amount">
                    <type>long</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupAddToDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="TargetFilespec">
                    <type>sbyte*</type>
                </param>
                <param name="FileSize">
                    <type>long</type>
                </param>
                <param name="Operation">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupAddToDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="TargetFilespec">
                    <type>ushort*</type>
                </param>
                <param name="FileSize">
                    <type>long</type>
                </param>
                <param name="Operation">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupAddSectionToDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="Operation">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupAddSectionToDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="Operation">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupAddInstallSectionToDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="LayoutInfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupAddInstallSectionToDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="LayoutInfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupRemoveFromDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="TargetFilespec">
                    <type>sbyte*</type>
                </param>
                <param name="Operation">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupRemoveFromDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="TargetFilespec">
                    <type>ushort*</type>
                </param>
                <param name="Operation">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupRemoveSectionFromDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="Operation">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupRemoveSectionFromDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="ListInfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="Operation">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupRemoveInstallSectionFromDiskSpaceListA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="LayoutInfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupRemoveInstallSectionFromDiskSpaceListW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DiskSpace">
                    <type>void*</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="LayoutInfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupIterateCabinetA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="CabinetFile">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>uint</type>
                </param>
                <param name="MsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupIterateCabinetW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="CabinetFile">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>uint</type>
                </param>
                <param name="MsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupPromptReboot" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="INT">int</type>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="Owner">
                    <type>IntPtr</type>
                </param>
                <param name="ScanOnly">
                    <type>int</type>
                </param>
            </function>
            <function name="SetupInitDefaultQueueCallback" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="PVOID">void*</type>
                <param name="OwnerWindow">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetupInitDefaultQueueCallbackEx" access="public" lib="setupapi" static="true">
                <type native="PVOID">void*</type>
                <param name="OwnerWindow">
                    <type>IntPtr</type>
                </param>
                <param name="AlternateProgressWindow">
                    <type>IntPtr</type>
                </param>
                <param name="ProgressMessage">
                    <type>uint</type>
                </param>
                <param name="Reserved1">
                    <type>uint</type>
                </param>
                <param name="Reserved2">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupTermDefaultQueueCallback" access="public" lib="setupapi" setlasterror="true" static="true">
                <type>void</type>
                <param name="Context">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDefaultQueueCallbackA" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="Context">
                    <type>void*</type>
                </param>
                <param name="Notification">
                    <type>uint</type>
                </param>
                <param name="Param1">
                    <type>nuint</type>
                </param>
                <param name="Param2">
                    <type>nuint</type>
                </param>
            </function>
            <function name="SetupDefaultQueueCallbackW" access="public" lib="setupapi" static="true">
                <type native="UINT">uint</type>
                <param name="Context">
                    <type>void*</type>
                </param>
                <param name="Notification">
                    <type>uint</type>
                </param>
                <param name="Param1">
                    <type>nuint</type>
                </param>
                <param name="Param2">
                    <type>nuint</type>
                </param>
            </function>
            <function name="SetupInstallFromInfSectionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Owner">
                    <type>IntPtr</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="RelativeKeyRoot">
                    <type>IntPtr</type>
                </param>
                <param name="SourceRootPath">
                    <type>sbyte*</type>
                </param>
                <param name="CopyFlags">
                    <type>uint</type>
                </param>
                <param name="MsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupInstallFromInfSectionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Owner">
                    <type>IntPtr</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="RelativeKeyRoot">
                    <type>IntPtr</type>
                </param>
                <param name="SourceRootPath">
                    <type>ushort*</type>
                </param>
                <param name="CopyFlags">
                    <type>uint</type>
                </param>
                <param name="MsgHandler">
                    <type>delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;</type>
                </param>
                <param name="Context">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupInstallFilesFromInfSectionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="LayoutInfHandle">
                    <type>void*</type>
                </param>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="SourceRootPath">
                    <type>sbyte*</type>
                </param>
                <param name="CopyFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupInstallFilesFromInfSectionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="LayoutInfHandle">
                    <type>void*</type>
                </param>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="SourceRootPath">
                    <type>ushort*</type>
                </param>
                <param name="CopyFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupInstallServicesFromInfSectionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupInstallServicesFromInfSectionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupInstallServicesFromInfSectionExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupInstallServicesFromInfSectionExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>void*</type>
                </param>
            </function>
            <function name="InstallHinfSectionA" access="public" lib="setupapi" static="true">
                <type>void</type>
                <param name="Window">
                    <type>IntPtr</type>
                </param>
                <param name="ModuleHandle">
                    <type>IntPtr</type>
                </param>
                <param name="CommandLine">
                    <type>sbyte*</type>
                </param>
                <param name="ShowCommand">
                    <type>int</type>
                </param>
            </function>
            <function name="InstallHinfSectionW" access="public" lib="setupapi" static="true">
                <type>void</type>
                <param name="Window">
                    <type>IntPtr</type>
                </param>
                <param name="ModuleHandle">
                    <type>IntPtr</type>
                </param>
                <param name="CommandLine">
                    <type>ushort*</type>
                </param>
                <param name="ShowCommand">
                    <type>int</type>
                </param>
            </function>
            <function name="SetupInitializeFileLogA" access="public" lib="setupapi" static="true">
                <type native="HSPFILELOG">void*</type>
                <param name="LogFileName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupInitializeFileLogW" access="public" lib="setupapi" static="true">
                <type native="HSPFILELOG">void*</type>
                <param name="LogFileName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupTerminateFileLog" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="FileLogHandle">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupLogFileA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileLogHandle">
                    <type>void*</type>
                </param>
                <param name="LogSectionName">
                    <type>sbyte*</type>
                </param>
                <param name="SourceFilename">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFilename">
                    <type>sbyte*</type>
                </param>
                <param name="Checksum">
                    <type>uint</type>
                </param>
                <param name="DiskTagfile">
                    <type>sbyte*</type>
                </param>
                <param name="DiskDescription">
                    <type>sbyte*</type>
                </param>
                <param name="OtherInfo">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupLogFileW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileLogHandle">
                    <type>void*</type>
                </param>
                <param name="LogSectionName">
                    <type>ushort*</type>
                </param>
                <param name="SourceFilename">
                    <type>ushort*</type>
                </param>
                <param name="TargetFilename">
                    <type>ushort*</type>
                </param>
                <param name="Checksum">
                    <type>uint</type>
                </param>
                <param name="DiskTagfile">
                    <type>ushort*</type>
                </param>
                <param name="DiskDescription">
                    <type>ushort*</type>
                </param>
                <param name="OtherInfo">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupRemoveFileLogEntryA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileLogHandle">
                    <type>void*</type>
                </param>
                <param name="LogSectionName">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFilename">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupRemoveFileLogEntryW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileLogHandle">
                    <type>void*</type>
                </param>
                <param name="LogSectionName">
                    <type>ushort*</type>
                </param>
                <param name="TargetFilename">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupQueryFileLogA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileLogHandle">
                    <type>void*</type>
                </param>
                <param name="LogSectionName">
                    <type>sbyte*</type>
                </param>
                <param name="TargetFilename">
                    <type>sbyte*</type>
                </param>
                <param name="DesiredInfo">
                    <type>SetupFileLogInfo</type>
                </param>
                <param name="DataOut">
                    <type>sbyte*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupQueryFileLogW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="FileLogHandle">
                    <type>void*</type>
                </param>
                <param name="LogSectionName">
                    <type>ushort*</type>
                </param>
                <param name="TargetFilename">
                    <type>ushort*</type>
                </param>
                <param name="DesiredInfo">
                    <type>SetupFileLogInfo</type>
                </param>
                <param name="DataOut">
                    <type>ushort*</type>
                </param>
                <param name="ReturnBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupOpenLog" access="public" lib="setupapi" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="Erase">
                    <type>int</type>
                </param>
            </function>
            <function name="SetupLogErrorA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="MessageString">
                    <type>sbyte*</type>
                </param>
                <param name="Severity">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupLogErrorW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="MessageString">
                    <type>ushort*</type>
                </param>
                <param name="Severity">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupCloseLog" access="public" lib="setupapi" static="true" unsafe="true">
                <type>void</type>
            </function>
            <function name="SetupGetThreadLogToken" access="public" lib="setupapi" static="true" unsafe="true">
                <type native="SP_LOG_TOKEN">ulong</type>
            </function>
            <function name="SetupSetThreadLogToken" access="public" lib="setupapi" static="true" unsafe="true">
                <type>void</type>
                <param name="LogToken">
                    <type>ulong</type>
                </param>
            </function>
            <function name="SetupWriteTextLog" access="public" lib="setupapi" static="true">
                <type>void</type>
                <param name="LogToken">
                    <type>ulong</type>
                </param>
                <param name="Category">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="MessageStr">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupWriteTextLogError" access="public" lib="setupapi" static="true">
                <type>void</type>
                <param name="LogToken">
                    <type>ulong</type>
                </param>
                <param name="Category">
                    <type>uint</type>
                </param>
                <param name="LogFlags">
                    <type>uint</type>
                </param>
                <param name="Error">
                    <type>uint</type>
                </param>
                <param name="MessageStr">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupWriteTextLogInfLine" access="public" lib="setupapi" static="true">
                <type>void</type>
                <param name="LogToken">
                    <type>ulong</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
            </function>
            <function name="SetupGetBackupInformationA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="BackupParams">
                    <type>SP_BACKUP_QUEUE_PARAMS_V2_A*</type>
                </param>
            </function>
            <function name="SetupGetBackupInformationW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="BackupParams">
                    <type>SP_BACKUP_QUEUE_PARAMS_V2_W*</type>
                </param>
            </function>
            <function name="SetupPrepareQueueForRestoreA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="BackupPath">
                    <type>sbyte*</type>
                </param>
                <param name="RestoreFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupPrepareQueueForRestoreW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="QueueHandle">
                    <type>void*</type>
                </param>
                <param name="BackupPath">
                    <type>ushort*</type>
                </param>
                <param name="RestoreFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupSetNonInteractiveMode" access="public" lib="setupapi" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="NonInteractiveFlag">
                    <type>int</type>
                </param>
            </function>
            <function name="SetupGetNonInteractiveMode" access="public" lib="setupapi" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="SetupDiCreateDeviceInfoList" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="HDEVINFO">void*</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetupDiCreateDeviceInfoListExA" access="public" lib="setupapi" static="true">
                <type native="HDEVINFO">void*</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiCreateDeviceInfoListExW" access="public" lib="setupapi" static="true">
                <type native="HDEVINFO">void*</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInfoListClass" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInfoListDetailA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoSetDetailData">
                    <type>SP_DEVINFO_LIST_DETAIL_DATA_A*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInfoListDetailW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoSetDetailData">
                    <type>SP_DEVINFO_LIST_DETAIL_DATA_W*</type>
                </param>
            </function>
            <function name="SetupDiCreateDeviceInfoA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceName">
                    <type>sbyte*</type>
                </param>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="DeviceDescription">
                    <type>sbyte*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="CreationFlags">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiCreateDeviceInfoW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceName">
                    <type>ushort*</type>
                </param>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="DeviceDescription">
                    <type>ushort*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="CreationFlags">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiOpenDeviceInfoA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInstanceId">
                    <type>sbyte*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="OpenFlags">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiOpenDeviceInfoW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInstanceId">
                    <type>ushort*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="OpenFlags">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInstanceIdA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DeviceInstanceId">
                    <type>sbyte*</type>
                </param>
                <param name="DeviceInstanceIdSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInstanceIdW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DeviceInstanceId">
                    <type>ushort*</type>
                </param>
                <param name="DeviceInstanceIdSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiDeleteDeviceInfo" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiEnumDeviceInfo" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="MemberIndex">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiDestroyDeviceInfoList" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiEnumDeviceInterfaces" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="InterfaceClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="MemberIndex">
                    <type>uint</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
            </function>
            <function name="SetupDiCreateDeviceInterfaceA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="InterfaceClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ReferenceString">
                    <type>sbyte*</type>
                </param>
                <param name="CreationFlags">
                    <type>uint</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
            </function>
            <function name="SetupDiCreateDeviceInterfaceW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="InterfaceClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ReferenceString">
                    <type>ushort*</type>
                </param>
                <param name="CreationFlags">
                    <type>uint</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
            </function>
            <function name="SetupDiOpenDeviceInterfaceA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DevicePath">
                    <type>sbyte*</type>
                </param>
                <param name="OpenFlags">
                    <type>uint</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
            </function>
            <function name="SetupDiOpenDeviceInterfaceW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DevicePath">
                    <type>ushort*</type>
                </param>
                <param name="OpenFlags">
                    <type>uint</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInterfaceAlias" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="AliasInterfaceClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="AliasDeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
            </function>
            <function name="SetupDiDeleteDeviceInterfaceData" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
            </function>
            <function name="SetupDiRemoveDeviceInterface" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInterfaceDetailA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="DeviceInterfaceDetailData">
                    <type>SP_DEVICE_INTERFACE_DETAIL_DATA_A*</type>
                </param>
                <param name="DeviceInterfaceDetailDataSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInterfaceDetailW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="DeviceInterfaceDetailData">
                    <type>SP_DEVICE_INTERFACE_DETAIL_DATA_W*</type>
                </param>
                <param name="DeviceInterfaceDetailDataSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiInstallDeviceInterfaces" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiSetDeviceInterfaceDefault" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiRegisterDeviceInfo" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="CompareProc">
                    <type>delegate* unmanaged&lt;void*, SP_DEVINFO_DATA*, SP_DEVINFO_DATA*, void*, uint&gt;</type>
                </param>
                <param name="CompareContext">
                    <type>void*</type>
                </param>
                <param name="DupDeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiBuildDriverInfoList" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverType">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiCancelDriverInfoSearch" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiEnumDriverInfoA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverType">
                    <type>uint</type>
                </param>
                <param name="MemberIndex">
                    <type>uint</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_A*</type>
                </param>
            </function>
            <function name="SetupDiEnumDriverInfoW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverType">
                    <type>uint</type>
                </param>
                <param name="MemberIndex">
                    <type>uint</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_W*</type>
                </param>
            </function>
            <function name="SetupDiGetSelectedDriverA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_A*</type>
                </param>
            </function>
            <function name="SetupDiGetSelectedDriverW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_W*</type>
                </param>
            </function>
            <function name="SetupDiSetSelectedDriverA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_A*</type>
                </param>
            </function>
            <function name="SetupDiSetSelectedDriverW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_W*</type>
                </param>
            </function>
            <function name="SetupDiGetDriverInfoDetailA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_A*</type>
                </param>
                <param name="DriverInfoDetailData">
                    <type>SP_DRVINFO_DETAIL_DATA_A*</type>
                </param>
                <param name="DriverInfoDetailDataSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetDriverInfoDetailW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_W*</type>
                </param>
                <param name="DriverInfoDetailData">
                    <type>SP_DRVINFO_DETAIL_DATA_W*</type>
                </param>
                <param name="DriverInfoDetailDataSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiDestroyDriverInfoList" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverType">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetClassDevsA" access="public" lib="setupapi" static="true">
                <type native="HDEVINFO">void*</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Enumerator">
                    <type>sbyte*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetClassDevsW" access="public" lib="setupapi" static="true">
                <type native="HDEVINFO">void*</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Enumerator">
                    <type>ushort*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetClassDevsExA" access="public" lib="setupapi" static="true">
                <type native="HDEVINFO">void*</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Enumerator">
                    <type>sbyte*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetClassDevsExW" access="public" lib="setupapi" static="true">
                <type native="HDEVINFO">void*</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Enumerator">
                    <type>ushort*</type>
                </param>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetINFClassA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfName">
                    <type>sbyte*</type>
                </param>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassName">
                    <type>sbyte*</type>
                </param>
                <param name="ClassNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetINFClassW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfName">
                    <type>ushort*</type>
                </param>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassName">
                    <type>ushort*</type>
                </param>
                <param name="ClassNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiBuildClassInfoList" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="ClassGuidList">
                    <type>Guid*</type>
                </param>
                <param name="ClassGuidListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiBuildClassInfoListExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="ClassGuidList">
                    <type>Guid*</type>
                </param>
                <param name="ClassGuidListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiBuildClassInfoListExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="ClassGuidList">
                    <type>Guid*</type>
                </param>
                <param name="ClassGuidListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetClassDescriptionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassDescription">
                    <type>sbyte*</type>
                </param>
                <param name="ClassDescriptionSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetClassDescriptionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassDescription">
                    <type>ushort*</type>
                </param>
                <param name="ClassDescriptionSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetClassDescriptionExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassDescription">
                    <type>sbyte*</type>
                </param>
                <param name="ClassDescriptionSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetClassDescriptionExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassDescription">
                    <type>ushort*</type>
                </param>
                <param name="ClassDescriptionSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiCallClassInstaller" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InstallFunction">
                    <type>uint</type>
                </param>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiSelectDevice" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiSelectBestCompatDrv" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiInstallDevice" access="public" lib="setupapi" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiInstallDriverFiles" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiRegisterCoDeviceInstallers" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiRemoveDevice" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiUnremoveDevice" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiRestartDevices" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiChangeState" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiInstallClassA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="InfFileName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiInstallClassW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="InfFileName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiInstallClassExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="InfFileName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="InterfaceClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiInstallClassExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="InfFileName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="FileQueue">
                    <type>void*</type>
                </param>
                <param name="InterfaceClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Reserved1">
                    <type>void*</type>
                </param>
                <param name="Reserved2">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiOpenClassRegKey" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="samDesired">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiOpenClassRegKeyExA" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="samDesired">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiOpenClassRegKeyExW" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="samDesired">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiCreateDeviceInterfaceRegKeyA" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="Reserved">
                    <type>uint</type>
                </param>
                <param name="samDesired">
                    <type>uint</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfSectionName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupDiCreateDeviceInterfaceRegKeyW" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="Reserved">
                    <type>uint</type>
                </param>
                <param name="samDesired">
                    <type>uint</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfSectionName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupDiOpenDeviceInterfaceRegKey" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="Reserved">
                    <type>uint</type>
                </param>
                <param name="samDesired">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiDeleteDeviceInterfaceRegKey" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="Reserved">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiCreateDevRegKeyA" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Scope">
                    <type>uint</type>
                </param>
                <param name="HwProfile">
                    <type>uint</type>
                </param>
                <param name="KeyType">
                    <type>uint</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfSectionName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetupDiCreateDevRegKeyW" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Scope">
                    <type>uint</type>
                </param>
                <param name="HwProfile">
                    <type>uint</type>
                </param>
                <param name="KeyType">
                    <type>uint</type>
                </param>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfSectionName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="SetupDiOpenDevRegKey" access="public" lib="setupapi" static="true">
                <type native="HKEY">IntPtr</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Scope">
                    <type>uint</type>
                </param>
                <param name="HwProfile">
                    <type>uint</type>
                </param>
                <param name="KeyType">
                    <type>uint</type>
                </param>
                <param name="samDesired">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiDeleteDevRegKey" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Scope">
                    <type>uint</type>
                </param>
                <param name="HwProfile">
                    <type>uint</type>
                </param>
                <param name="KeyType">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetHwProfileList" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="HwProfileList">
                    <type>uint*</type>
                </param>
                <param name="HwProfileListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="CurrentlyActiveIndex">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetHwProfileListExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="HwProfileList">
                    <type>uint*</type>
                </param>
                <param name="HwProfileListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="CurrentlyActiveIndex">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetHwProfileListExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="HwProfileList">
                    <type>uint*</type>
                </param>
                <param name="HwProfileListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="CurrentlyActiveIndex">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetDevicePropertyKeys" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="PropertyKeyArray">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyKeyCount">
                    <type>uint</type>
                </param>
                <param name="RequiredPropertyKeyCount">
                    <type>uint*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetDevicePropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="PropertyKey">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiSetDevicePropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="PropertyKey">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyType">
                    <type>uint</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInterfacePropertyKeys" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="PropertyKeyArray">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyKeyCount">
                    <type>uint</type>
                </param>
                <param name="RequiredPropertyKeyCount">
                    <type>uint*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInterfacePropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="PropertyKey">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiSetDeviceInterfacePropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInterfaceData">
                    <type>SP_DEVICE_INTERFACE_DATA*</type>
                </param>
                <param name="PropertyKey">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyType">
                    <type>uint</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetClassPropertyKeys" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="PropertyKeyArray">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyKeyCount">
                    <type>uint</type>
                </param>
                <param name="RequiredPropertyKeyCount">
                    <type>uint*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetClassPropertyKeysExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="PropertyKeyArray">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyKeyCount">
                    <type>uint</type>
                </param>
                <param name="RequiredPropertyKeyCount">
                    <type>uint*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetClassPropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="PropertyKey">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetClassPropertyExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="PropertyKey">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiSetClassPropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="PropertyKey">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyType">
                    <type>uint</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiSetClassPropertyExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="PropertyKey">
                    <type>DEVPROPKEY*</type>
                </param>
                <param name="PropertyType">
                    <type>uint</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceRegistryPropertyA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Property">
                    <type>uint</type>
                </param>
                <param name="PropertyRegDataType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceRegistryPropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Property">
                    <type>uint</type>
                </param>
                <param name="PropertyRegDataType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetClassRegistryPropertyA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Property">
                    <type>uint</type>
                </param>
                <param name="PropertyRegDataType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetClassRegistryPropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Property">
                    <type>uint</type>
                </param>
                <param name="PropertyRegDataType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiSetDeviceRegistryPropertyA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Property">
                    <type>uint</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiSetDeviceRegistryPropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="Property">
                    <type>uint</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiSetClassRegistryPropertyA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Property">
                    <type>uint</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiSetClassRegistryPropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="Property">
                    <type>uint</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInstallParamsA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DeviceInstallParams">
                    <type>SP_DEVINSTALL_PARAMS_A*</type>
                </param>
            </function>
            <function name="SetupDiGetDeviceInstallParamsW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DeviceInstallParams">
                    <type>SP_DEVINSTALL_PARAMS_W*</type>
                </param>
            </function>
            <function name="SetupDiGetClassInstallParamsA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="ClassInstallParams">
                    <type>SP_CLASSINSTALL_HEADER*</type>
                </param>
                <param name="ClassInstallParamsSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetClassInstallParamsW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="ClassInstallParams">
                    <type>SP_CLASSINSTALL_HEADER*</type>
                </param>
                <param name="ClassInstallParamsSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiSetDeviceInstallParamsA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DeviceInstallParams">
                    <type>SP_DEVINSTALL_PARAMS_A*</type>
                </param>
            </function>
            <function name="SetupDiSetDeviceInstallParamsW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DeviceInstallParams">
                    <type>SP_DEVINSTALL_PARAMS_W*</type>
                </param>
            </function>
            <function name="SetupDiSetClassInstallParamsA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="ClassInstallParams">
                    <type>SP_CLASSINSTALL_HEADER*</type>
                </param>
                <param name="ClassInstallParamsSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiSetClassInstallParamsW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="ClassInstallParams">
                    <type>SP_CLASSINSTALL_HEADER*</type>
                </param>
                <param name="ClassInstallParamsSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetDriverInstallParamsA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_A*</type>
                </param>
                <param name="DriverInstallParams">
                    <type>SP_DRVINSTALL_PARAMS*</type>
                </param>
            </function>
            <function name="SetupDiGetDriverInstallParamsW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_W*</type>
                </param>
                <param name="DriverInstallParams">
                    <type>SP_DRVINSTALL_PARAMS*</type>
                </param>
            </function>
            <function name="SetupDiSetDriverInstallParamsA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_A*</type>
                </param>
                <param name="DriverInstallParams">
                    <type>SP_DRVINSTALL_PARAMS*</type>
                </param>
            </function>
            <function name="SetupDiSetDriverInstallParamsW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="DriverInfoData">
                    <type>SP_DRVINFO_DATA_V2_W*</type>
                </param>
                <param name="DriverInstallParams">
                    <type>SP_DRVINSTALL_PARAMS*</type>
                </param>
            </function>
            <function name="SetupDiLoadClassIcon" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="LargeIcon">
                    <type>IntPtr*</type>
                </param>
                <param name="MiniIconIndex">
                    <type>int*</type>
                </param>
            </function>
            <function name="SetupDiLoadDeviceIcon" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="cxIcon">
                    <type>uint</type>
                </param>
                <param name="cyIcon">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="hIcon">
                    <type>IntPtr*</type>
                </param>
            </function>
            <function name="SetupDiDrawMiniIcon" access="public" lib="setupapi" static="true" unsafe="true">
                <type native="INT">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="rc">
                    <type>RECT</type>
                </param>
                <param name="MiniIconIndex">
                    <type>int</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetClassBitmapIndex" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="MiniIconIndex">
                    <type>int*</type>
                </param>
            </function>
            <function name="SetupDiGetClassImageList" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassImageListData">
                    <type>SP_CLASSIMAGELIST_DATA*</type>
                </param>
            </function>
            <function name="SetupDiGetClassImageListExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassImageListData">
                    <type>SP_CLASSIMAGELIST_DATA*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetClassImageListExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassImageListData">
                    <type>SP_CLASSIMAGELIST_DATA*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetClassImageIndex" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassImageListData">
                    <type>SP_CLASSIMAGELIST_DATA*</type>
                </param>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ImageIndex">
                    <type>int*</type>
                </param>
            </function>
            <function name="SetupDiDestroyClassImageList" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassImageListData">
                    <type>SP_CLASSIMAGELIST_DATA*</type>
                </param>
            </function>
            <function name="SetupDiGetClassDevPropertySheetsA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="PropertySheetHeader">
                    <type>PROPSHEETHEADERA_V2*</type>
                </param>
                <param name="PropertySheetHeaderPageListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="PropertySheetType">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetClassDevPropertySheetsW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="PropertySheetHeader">
                    <type>PROPSHEETHEADERW_V2*</type>
                </param>
                <param name="PropertySheetHeaderPageListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="PropertySheetType">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiAskForOEMDisk" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiSelectOEMDrv" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiClassNameFromGuidA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassName">
                    <type>sbyte*</type>
                </param>
                <param name="ClassNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiClassNameFromGuidW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassName">
                    <type>ushort*</type>
                </param>
                <param name="ClassNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiClassNameFromGuidExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassName">
                    <type>sbyte*</type>
                </param>
                <param name="ClassNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiClassNameFromGuidExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassGuid">
                    <type>Guid*</type>
                </param>
                <param name="ClassName">
                    <type>ushort*</type>
                </param>
                <param name="ClassNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiClassGuidsFromNameA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassName">
                    <type>sbyte*</type>
                </param>
                <param name="ClassGuidList">
                    <type>Guid*</type>
                </param>
                <param name="ClassGuidListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiClassGuidsFromNameW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassName">
                    <type>ushort*</type>
                </param>
                <param name="ClassGuidList">
                    <type>Guid*</type>
                </param>
                <param name="ClassGuidListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiClassGuidsFromNameExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassName">
                    <type>sbyte*</type>
                </param>
                <param name="ClassGuidList">
                    <type>Guid*</type>
                </param>
                <param name="ClassGuidListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiClassGuidsFromNameExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="ClassName">
                    <type>ushort*</type>
                </param>
                <param name="ClassGuidList">
                    <type>Guid*</type>
                </param>
                <param name="ClassGuidListSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetHwProfileFriendlyNameA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="HwProfile">
                    <type>uint</type>
                </param>
                <param name="FriendlyName">
                    <type>sbyte*</type>
                </param>
                <param name="FriendlyNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetHwProfileFriendlyNameW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="HwProfile">
                    <type>uint</type>
                </param>
                <param name="FriendlyName">
                    <type>ushort*</type>
                </param>
                <param name="FriendlyNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetHwProfileFriendlyNameExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="HwProfile">
                    <type>uint</type>
                </param>
                <param name="FriendlyName">
                    <type>sbyte*</type>
                </param>
                <param name="FriendlyNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>sbyte*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetHwProfileFriendlyNameExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="HwProfile">
                    <type>uint</type>
                </param>
                <param name="FriendlyName">
                    <type>ushort*</type>
                </param>
                <param name="FriendlyNameSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="MachineName">
                    <type>ushort*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetWizardPage" access="public" lib="setupapi" static="true">
                <type native="HPROPSHEETPAGE">IntPtr</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="InstallWizardData">
                    <type>SP_INSTALLWIZARD_DATA*</type>
                </param>
                <param name="PageType">
                    <type>uint</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupDiGetSelectedDevice" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiSetSelectedDevice" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
            </function>
            <function name="SetupDiGetActualModelsSectionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="InfSectionWithExt">
                    <type>sbyte*</type>
                </param>
                <param name="InfSectionWithExtSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetActualModelsSectionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="Context">
                    <type>INFCONTEXT*</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="InfSectionWithExt">
                    <type>ushort*</type>
                </param>
                <param name="InfSectionWithExtSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetActualSectionToInstallA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfSectionName">
                    <type>sbyte*</type>
                </param>
                <param name="InfSectionWithExt">
                    <type>sbyte*</type>
                </param>
                <param name="InfSectionWithExtSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Extension">
                    <type>sbyte**</type>
                </param>
            </function>
            <function name="SetupDiGetActualSectionToInstallW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfSectionName">
                    <type>ushort*</type>
                </param>
                <param name="InfSectionWithExt">
                    <type>ushort*</type>
                </param>
                <param name="InfSectionWithExtSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Extension">
                    <type>ushort**</type>
                </param>
            </function>
            <function name="SetupDiGetActualSectionToInstallExA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfSectionName">
                    <type>sbyte*</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="InfSectionWithExt">
                    <type>sbyte*</type>
                </param>
                <param name="InfSectionWithExtSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Extension">
                    <type>sbyte**</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupDiGetActualSectionToInstallExW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="InfSectionName">
                    <type>ushort*</type>
                </param>
                <param name="AlternatePlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="InfSectionWithExt">
                    <type>ushort*</type>
                </param>
                <param name="InfSectionWithExtSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
                <param name="Extension">
                    <type>ushort**</type>
                </param>
                <param name="Reserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetupEnumInfSectionsA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Index">
                    <type>uint</type>
                </param>
                <param name="Buffer">
                    <type>sbyte*</type>
                </param>
                <param name="Size">
                    <type>uint</type>
                </param>
                <param name="SizeNeeded">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupEnumInfSectionsW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="Index">
                    <type>uint</type>
                </param>
                <param name="Buffer">
                    <type>ushort*</type>
                </param>
                <param name="Size">
                    <type>uint</type>
                </param>
                <param name="SizeNeeded">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupVerifyInfFileA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfName">
                    <type>sbyte*</type>
                </param>
                <param name="AltPlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="InfSignerInfo">
                    <type>SP_INF_SIGNER_INFO_V2_A*</type>
                </param>
            </function>
            <function name="SetupVerifyInfFileW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfName">
                    <type>ushort*</type>
                </param>
                <param name="AltPlatformInfo">
                    <type>SP_ALTPLATFORM_INFO_V2*</type>
                </param>
                <param name="InfSignerInfo">
                    <type>SP_INF_SIGNER_INFO_V2_W*</type>
                </param>
            </function>
            <function name="SetupDiGetCustomDevicePropertyA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="CustomPropertyName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="PropertyRegDataType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupDiGetCustomDevicePropertyW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="DeviceInfoSet">
                    <type>void*</type>
                </param>
                <param name="DeviceInfoData">
                    <type>SP_DEVINFO_DATA*</type>
                </param>
                <param name="CustomPropertyName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
                <param name="PropertyRegDataType">
                    <type>uint*</type>
                </param>
                <param name="PropertyBuffer">
                    <type>byte*</type>
                </param>
                <param name="PropertyBufferSize">
                    <type>uint</type>
                </param>
                <param name="RequiredSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetupConfigureWmiFromInfSectionA" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetupConfigureWmiFromInfSectionW" access="public" lib="setupapi" static="true">
                <type native="BOOL">int</type>
                <param name="InfHandle">
                    <type>void*</type>
                </param>
                <param name="SectionName">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <constant name="_SETUPAPI_VER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0A00
            </code>
                </value>
            </constant>
            <constant name="LINE_LEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>256
            </code>
                </value>
            </constant>
            <constant name="MAX_INF_STRING_LENGTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4096
            </code>
                </value>
            </constant>
            <constant name="MAX_INF_SECTION_NAME_LENGTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>255
            </code>
                </value>
            </constant>
            <constant name="MAX_TITLE_LEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>60
            </code>
                </value>
            </constant>
            <constant name="MAX_INSTRUCTION_LEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>256
            </code>
                </value>
            </constant>
            <constant name="MAX_LABEL_LEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>30
            </code>
                </value>
            </constant>
            <constant name="MAX_SERVICE_NAME_LEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>256
            </code>
                </value>
            </constant>
            <constant name="MAX_SUBTITLE_LEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>256
            </code>
                </value>
            </constant>
            <constant name="SP_MAX_MACHINENAME_LENGTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(260 + 3)
            </code>
                </value>
            </constant>
            <constant name="SP_ALTPLATFORM_FLAGS_VERSION_RANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001)
            </code>
                </value>
            </constant>
            <constant name="SP_ALTPLATFORM_FLAGS_SUITE_MASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0002)
            </code>
                </value>
            </constant>
            <constant name="INF_STYLE_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="INF_STYLE_OLDNT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="INF_STYLE_WIN4" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="INF_STYLE_CACHE_ENABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="INF_STYLE_CACHE_DISABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="INF_STYLE_CACHE_IGNORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="DIRID_ABSOLUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>-1
            </code>
                </value>
            </constant>
            <constant name="DIRID_ABSOLUTE_16BIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xffff
            </code>
                </value>
            </constant>
            <constant name="DIRID_NULL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="DIRID_SRCPATH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="DIRID_WINDOWS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="DIRID_SYSTEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="DIRID_DRIVERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="DIRID_IOSUBSYS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="DIRID_DRIVER_STORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="DIRID_INF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>17
            </code>
                </value>
            </constant>
            <constant name="DIRID_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>18
            </code>
                </value>
            </constant>
            <constant name="DIRID_FONTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="DIRID_VIEWERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>21
            </code>
                </value>
            </constant>
            <constant name="DIRID_COLOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>23
            </code>
                </value>
            </constant>
            <constant name="DIRID_APPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>24
            </code>
                </value>
            </constant>
            <constant name="DIRID_SHARED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>25
            </code>
                </value>
            </constant>
            <constant name="DIRID_BOOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>30
            </code>
                </value>
            </constant>
            <constant name="DIRID_SYSTEM16" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>50
            </code>
                </value>
            </constant>
            <constant name="DIRID_SPOOL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>51
            </code>
                </value>
            </constant>
            <constant name="DIRID_SPOOLDRIVERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>52
            </code>
                </value>
            </constant>
            <constant name="DIRID_USERPROFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>53
            </code>
                </value>
            </constant>
            <constant name="DIRID_LOADER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>54
            </code>
                </value>
            </constant>
            <constant name="DIRID_PRINTPROCESSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>55
            </code>
                </value>
            </constant>
            <constant name="DIRID_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="DIRID_COMMON_STARTMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16406
            </code>
                </value>
            </constant>
            <constant name="DIRID_COMMON_PROGRAMS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16407
            </code>
                </value>
            </constant>
            <constant name="DIRID_COMMON_STARTUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16408
            </code>
                </value>
            </constant>
            <constant name="DIRID_COMMON_DESKTOPDIRECTORY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16409
            </code>
                </value>
            </constant>
            <constant name="DIRID_COMMON_FAVORITES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16415
            </code>
                </value>
            </constant>
            <constant name="DIRID_COMMON_APPDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16419
            </code>
                </value>
            </constant>
            <constant name="DIRID_PROGRAM_FILES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16422
            </code>
                </value>
            </constant>
            <constant name="DIRID_SYSTEM_X86" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16425
            </code>
                </value>
            </constant>
            <constant name="DIRID_PROGRAM_FILES_X86" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16426
            </code>
                </value>
            </constant>
            <constant name="DIRID_PROGRAM_FILES_COMMON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16427
            </code>
                </value>
            </constant>
            <constant name="DIRID_PROGRAM_FILES_COMMONX86" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16428
            </code>
                </value>
            </constant>
            <constant name="DIRID_COMMON_TEMPLATES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16429
            </code>
                </value>
            </constant>
            <constant name="DIRID_COMMON_DOCUMENTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16430
            </code>
                </value>
            </constant>
            <constant name="DIRID_USER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_STARTQUEUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_ENDQUEUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_STARTSUBQUEUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_ENDSUBQUEUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_STARTDELETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000005
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_ENDDELETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000006
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_DELETEERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000007
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_STARTRENAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_ENDRENAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000009
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_RENAMEERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000a
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_STARTCOPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000b
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_ENDCOPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000c
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_COPYERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000d
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_NEEDMEDIA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000e
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_QUEUESCAN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000f
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_CABINETINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_FILEINCABINET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000011
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_NEEDNEWCABINET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000012
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_FILEEXTRACTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000013
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_FILEOPDELAYED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000014
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_STARTBACKUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000015
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_BACKUPERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000016
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_ENDBACKUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000017
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_QUEUESCAN_EX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000018
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_STARTREGISTRATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000019
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_ENDREGISTRATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_QUEUESCAN_SIGNERINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_LANGMISMATCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_TARGETEXISTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="SPFILENOTIFY_TARGETNEWER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="FILEOP_COPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="FILEOP_RENAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="FILEOP_DELETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="FILEOP_BACKUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="FILEOP_ABORT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="FILEOP_DOIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="FILEOP_SKIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="FILEOP_RETRY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="FILEOP_NEWPATH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_WARN_IF_SKIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_NOSKIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_NOVERSIONCHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_FORCE_FILE_IN_USE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_NO_OVERWRITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_NO_VERSION_DIALOG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_OVERWRITE_OLDER_ONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_PROTECTED_WINDOWS_DRIVER_FILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_REPLACEONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_NODECOMP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_REPLACE_BOOT_FILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_NOPRUNE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="COPYFLG_IN_USE_TRY_RENAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="DELFLG_IN_USE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DELFLG_IN_USE1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="SPREG_SUCCESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="SPREG_LOADLIBRARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPREG_GETPROCADDR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPREG_REGSVR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="SPREG_DLLINSTALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SPREG_TIMEOUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000005
            </code>
                </value>
            </constant>
            <constant name="SPREG_UNKNOWN" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0xFFFFFFFF
            </code>
                </value>
            </constant>
            <constant name="SPINT_ACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPINT_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPINT_REMOVED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SPID_ACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPID_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPID_REMOVED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DIF_SELECTDEVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DIF_INSTALLDEVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DIF_ASSIGNRESOURCES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="DIF_PROPERTIES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DIF_REMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000005
            </code>
                </value>
            </constant>
            <constant name="DIF_FIRSTTIMESETUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000006
            </code>
                </value>
            </constant>
            <constant name="DIF_FOUNDDEVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000007
            </code>
                </value>
            </constant>
            <constant name="DIF_SELECTCLASSDRIVERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="DIF_VALIDATECLASSDRIVERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000009
            </code>
                </value>
            </constant>
            <constant name="DIF_INSTALLCLASSDRIVERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000A
            </code>
                </value>
            </constant>
            <constant name="DIF_CALCDISKSPACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000B
            </code>
                </value>
            </constant>
            <constant name="DIF_DESTROYPRIVATEDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000C
            </code>
                </value>
            </constant>
            <constant name="DIF_VALIDATEDRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000D
            </code>
                </value>
            </constant>
            <constant name="DIF_DETECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000F
            </code>
                </value>
            </constant>
            <constant name="DIF_INSTALLWIZARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="DIF_DESTROYWIZARDDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000011
            </code>
                </value>
            </constant>
            <constant name="DIF_PROPERTYCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000012
            </code>
                </value>
            </constant>
            <constant name="DIF_ENABLECLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000013
            </code>
                </value>
            </constant>
            <constant name="DIF_DETECTVERIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000014
            </code>
                </value>
            </constant>
            <constant name="DIF_INSTALLDEVICEFILES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000015
            </code>
                </value>
            </constant>
            <constant name="DIF_UNREMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000016
            </code>
                </value>
            </constant>
            <constant name="DIF_SELECTBESTCOMPATDRV" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000017
            </code>
                </value>
            </constant>
            <constant name="DIF_ALLOW_INSTALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000018
            </code>
                </value>
            </constant>
            <constant name="DIF_REGISTERDEVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000019
            </code>
                </value>
            </constant>
            <constant name="DIF_NEWDEVICEWIZARD_PRESELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000001A
            </code>
                </value>
            </constant>
            <constant name="DIF_NEWDEVICEWIZARD_SELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000001B
            </code>
                </value>
            </constant>
            <constant name="DIF_NEWDEVICEWIZARD_PREANALYZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000001C
            </code>
                </value>
            </constant>
            <constant name="DIF_NEWDEVICEWIZARD_POSTANALYZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000001D
            </code>
                </value>
            </constant>
            <constant name="DIF_NEWDEVICEWIZARD_FINISHINSTALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000001E
            </code>
                </value>
            </constant>
            <constant name="DIF_UNUSED1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000001F
            </code>
                </value>
            </constant>
            <constant name="DIF_INSTALLINTERFACES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="DIF_DETECTCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000021
            </code>
                </value>
            </constant>
            <constant name="DIF_REGISTER_COINSTALLERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000022
            </code>
                </value>
            </constant>
            <constant name="DIF_ADDPROPERTYPAGE_ADVANCED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000023
            </code>
                </value>
            </constant>
            <constant name="DIF_ADDPROPERTYPAGE_BASIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000024
            </code>
                </value>
            </constant>
            <constant name="DIF_RESERVED1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000025
            </code>
                </value>
            </constant>
            <constant name="DIF_TROUBLESHOOTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000026
            </code>
                </value>
            </constant>
            <constant name="DIF_POWERMESSAGEWAKE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000027
            </code>
                </value>
            </constant>
            <constant name="DIF_ADDREMOTEPROPERTYPAGE_ADVANCED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000028
            </code>
                </value>
            </constant>
            <constant name="DIF_UPDATEDRIVER_UI" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000029
            </code>
                </value>
            </constant>
            <constant name="DIF_FINISHINSTALL_ACTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000002A
            </code>
                </value>
            </constant>
            <constant name="DIF_RESERVED2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000030
            </code>
                </value>
            </constant>
            <constant name="DIF_MOVEDEVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000E
            </code>
                </value>
            </constant>
            <constant name="DI_SHOWOEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DI_SHOWCOMPAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DI_SHOWCLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DI_SHOWALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000007
            </code>
                </value>
            </constant>
            <constant name="DI_NOVCP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="DI_DIDCOMPAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="DI_DIDCLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="DI_AUTOASSIGNRES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="DI_NEEDRESTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="DI_NEEDREBOOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="DI_NOBROWSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="DI_MULTMFGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="DI_DISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="DI_GENERALPAGE_ADDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="DI_RESOURCEPAGE_ADDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="DI_PROPERTIES_CHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="DI_INF_IS_SORTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="DI_ENUMSINGLEINF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="DI_DONOTCALLCONFIGMG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="DI_INSTALLDISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="DI_COMPAT_FROM_CLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="DI_CLASSINSTALLPARAMS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="DI_NODI_DEFAULTACTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="DI_QUIETINSTALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00800000
            </code>
                </value>
            </constant>
            <constant name="DI_NOFILECOPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000000
            </code>
                </value>
            </constant>
            <constant name="DI_FORCECOPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02000000
            </code>
                </value>
            </constant>
            <constant name="DI_DRIVERPAGE_ADDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04000000
            </code>
                </value>
            </constant>
            <constant name="DI_USECI_SELECTSTRINGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08000000
            </code>
                </value>
            </constant>
            <constant name="DI_OVERRIDE_INFFLAGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="DI_PROPS_NOCHANGEUSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="DI_NOSELECTICONS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="DI_NOWRITE_IDS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_RESERVED2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_RESERVED3" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_CI_FAILED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_FINISHINSTALL_ACTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_DIDINFOLIST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_DIDCOMPATINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_FILTERCLASSES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_SETFAILEDINSTALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_DEVICECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_ALWAYSWRITEIDS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_PROPCHANGE_PENDING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_ALLOWEXCLUDEDDRVS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_NOUIONQUERYREMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_USECLASSFORCOMPAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_RESERVED4" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_NO_DRVREG_MODIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_IN_SYSTEM_SETUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_INET_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_APPENDDRIVERLIST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_PREINSTALLBACKUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_BACKUPONREPLACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_DRIVERLIST_FROM_URL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_RESERVED1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00400000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_EXCLUDE_OLD_INET_DRIVERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00800000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_POWERPAGE_ADDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_FILTERSIMILARDRIVERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02000000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_INSTALLEDDRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04000000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_NO_CLASSLIST_NODE_MERGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08000000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_ALTPLATFORM_DRVSEARCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_RESTART_DEVICE_ONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_RECURSIVESEARCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="DI_FLAGSEX_SEARCH_PUBLISHED_INFS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="ENABLECLASS_QUERY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="ENABLECLASS_SUCCESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="ENABLECLASS_FAILURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="DICS_ENABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DICS_DISABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DICS_PROPCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="DICS_START" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DICS_STOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000005
            </code>
                </value>
            </constant>
            <constant name="DICS_FLAG_GLOBAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DICS_FLAG_CONFIGSPECIFIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DICS_FLAG_CONFIGGENERAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DI_REMOVEDEVICE_GLOBAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DI_REMOVEDEVICE_CONFIGSPECIFIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DI_UNREMOVEDEVICE_CONFIGSPECIFIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="MAX_INSTALLWIZARD_DYNAPAGES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_DIDFACTDEFS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_HARDWAREALLREADYIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_NEEDRESTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_NEEDREBOOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_NEEDSHUTDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_EXPRESSINTRO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_SKIPISDEVINSTALLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_NODETECTEDDEVS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_INSTALLSPECIFIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_SKIPCLASSLIST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_CI_PICKED_OEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_PCMCIAMODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_PCMCIADEVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_USERCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="NDW_INSTALLFLAG_KNOWNCLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="DYNAWIZ_FLAG_PAGESADDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DYNAWIZ_FLAG_ANALYZE_HANDLECONFLICT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="DYNAWIZ_FLAG_INSTALLDET_NEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DYNAWIZ_FLAG_INSTALLDET_PREV" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="MIN_IDD_DYNAWIZ_RESOURCE_ID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10000
            </code>
                </value>
            </constant>
            <constant name="MAX_IDD_DYNAWIZ_RESOURCE_ID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11000
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_FIRSTPAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10000
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_SELECT_PREVPAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10001
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_SELECT_NEXTPAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10002
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_ANALYZE_PREVPAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10003
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_ANALYZE_NEXTPAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10004
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_SELECTDEV_PAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10009
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_ANALYZEDEV_PAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10010
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_INSTALLDETECTEDDEVS_PAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10011
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_SELECTCLASS_PAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10012
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_INSTALLDETECTED_PREVPAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10006
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_INSTALLDETECTED_NEXTPAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10007
            </code>
                </value>
            </constant>
            <constant name="IDD_DYNAWIZ_INSTALLDETECTED_NODEVS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10008
            </code>
                </value>
            </constant>
            <constant name="DNF_DUPDESC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DNF_OLDDRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DNF_EXCLUDEFROMLIST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DNF_NODRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="DNF_LEGACYINF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="DNF_CLASS_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="DNF_COMPATIBLE_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="DNF_INET_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="DNF_OLD_INET_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="DNF_BAD_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="DNF_DUPPROVIDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="DNF_INF_IS_SIGNED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="DNF_OEM_F6_INF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="DNF_DUPDRIVERVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="DNF_BASIC_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="DNF_AUTHENTICODE_SIGNED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="DNF_INSTALLEDDRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="DNF_ALWAYSEXCLUDEFROMLIST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="DNF_INBOX_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="DNF_REQUESTADDITIONALSOFTWARE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_22" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00400000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_23" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00800000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_24" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_25" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02000000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_26" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04000000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_27" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08000000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_28" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_29" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_30" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="DNF_UNUSED_31" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="DRIVER_HARDWAREID_RANK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000FFF
            </code>
                </value>
            </constant>
            <constant name="DRIVER_HARDWAREID_MASK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000FFF
            </code>
                </value>
            </constant>
            <constant name="DRIVER_UNTRUSTED_RANK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="DRIVER_W9X_SUSPECT_RANK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0xC0000000
            </code>
                </value>
            </constant>
            <constant name="SPPSR_SELECT_DEVICE_RESOURCES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SPPSR_ENUM_BASIC_DEVICE_PROPERTIES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SPPSR_ENUM_ADV_DEVICE_PROPERTIES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="ERROR_EXPECTED_SECTION_NAME" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0)
            </code>
                </value>
            </constant>
            <constant name="ERROR_BAD_SECTION_NAME_LINE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 1)
            </code>
                </value>
            </constant>
            <constant name="ERROR_SECTION_NAME_TOO_LONG" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 2)
            </code>
                </value>
            </constant>
            <constant name="ERROR_GENERAL_SYNTAX" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 3)
            </code>
                </value>
            </constant>
            <constant name="ERROR_WRONG_INF_STYLE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x100)
            </code>
                </value>
            </constant>
            <constant name="ERROR_SECTION_NOT_FOUND" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x101)
            </code>
                </value>
            </constant>
            <constant name="ERROR_LINE_NOT_FOUND" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x102)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_BACKUP" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x103)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_ASSOCIATED_CLASS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x200)
            </code>
                </value>
            </constant>
            <constant name="ERROR_CLASS_MISMATCH" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x201)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DUPLICATE_FOUND" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x202)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_DRIVER_SELECTED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x203)
            </code>
                </value>
            </constant>
            <constant name="ERROR_KEY_DOES_NOT_EXIST" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x204)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_DEVINST_NAME" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x205)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_CLASS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x206)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVINST_ALREADY_EXISTS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x207)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVINFO_NOT_REGISTERED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x208)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_REG_PROPERTY" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x209)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_INF" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x20A)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_SUCH_DEVINST" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x20B)
            </code>
                </value>
            </constant>
            <constant name="ERROR_CANT_LOAD_CLASS_ICON" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x20C)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_CLASS_INSTALLER" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x20D)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DI_DO_DEFAULT" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x20E)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DI_NOFILECOPY" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x20F)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_HWPROFILE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x210)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_DEVICE_SELECTED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x211)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVINFO_LIST_LOCKED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x212)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVINFO_DATA_LOCKED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x213)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DI_BAD_PATH" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x214)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_CLASSINSTALL_PARAMS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x215)
            </code>
                </value>
            </constant>
            <constant name="ERROR_FILEQUEUE_LOCKED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x216)
            </code>
                </value>
            </constant>
            <constant name="ERROR_BAD_SERVICE_INSTALLSECT" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x217)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_CLASS_DRIVER_LIST" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x218)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_ASSOCIATED_SERVICE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x219)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_DEFAULT_DEVICE_INTERFACE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21A)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVICE_INTERFACE_ACTIVE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21B)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVICE_INTERFACE_REMOVED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21C)
            </code>
                </value>
            </constant>
            <constant name="ERROR_BAD_INTERFACE_INSTALLSECT" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21D)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_SUCH_INTERFACE_CLASS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21E)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_REFERENCE_STRING" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21F)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_MACHINENAME" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x220)
            </code>
                </value>
            </constant>
            <constant name="ERROR_REMOTE_COMM_FAILURE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x221)
            </code>
                </value>
            </constant>
            <constant name="ERROR_MACHINE_UNAVAILABLE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x222)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_CONFIGMGR_SERVICES" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x223)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_PROPPAGE_PROVIDER" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x224)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_SUCH_DEVICE_INTERFACE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x225)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DI_POSTPROCESSING_REQUIRED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x226)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_COINSTALLER" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x227)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_COMPAT_DRIVERS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x228)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_DEVICE_ICON" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x229)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_INF_LOGCONFIG" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x22A)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DI_DONT_INSTALL" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x22B)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_FILTER_DRIVER" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x22C)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NON_WINDOWS_NT_DRIVER" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x22D)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NON_WINDOWS_DRIVER" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x22E)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_CATALOG_FOR_OEM_INF" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x22F)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVINSTALL_QUEUE_NONNATIVE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x230)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NOT_DISABLEABLE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x231)
            </code>
                </value>
            </constant>
            <constant name="ERROR_CANT_REMOVE_DEVINST" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x232)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INVALID_TARGET" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x233)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DRIVER_NONNATIVE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x234)
            </code>
                </value>
            </constant>
            <constant name="ERROR_IN_WOW64" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x235)
            </code>
                </value>
            </constant>
            <constant name="ERROR_SET_SYSTEM_RESTORE_POINT" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x236)
            </code>
                </value>
            </constant>
            <constant name="ERROR_SCE_DISABLED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x238)
            </code>
                </value>
            </constant>
            <constant name="ERROR_UNKNOWN_EXCEPTION" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x239)
            </code>
                </value>
            </constant>
            <constant name="ERROR_PNP_REGISTRY_ERROR" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x23A)
            </code>
                </value>
            </constant>
            <constant name="ERROR_REMOTE_REQUEST_UNSUPPORTED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x23B)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NOT_AN_INSTALLED_OEM_INF" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x23C)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INF_IN_USE_BY_DEVICES" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x23D)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DI_FUNCTION_OBSOLETE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x23E)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_AUTHENTICODE_CATALOG" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x23F)
            </code>
                </value>
            </constant>
            <constant name="ERROR_AUTHENTICODE_DISALLOWED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x240)
            </code>
                </value>
            </constant>
            <constant name="ERROR_AUTHENTICODE_TRUSTED_PUBLISHER" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x241)
            </code>
                </value>
            </constant>
            <constant name="ERROR_AUTHENTICODE_TRUST_NOT_ESTABLISHED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x242)
            </code>
                </value>
            </constant>
            <constant name="ERROR_AUTHENTICODE_PUBLISHER_NOT_TRUSTED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x243)
            </code>
                </value>
            </constant>
            <constant name="ERROR_SIGNATURE_OSATTRIBUTE_MISMATCH" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x244)
            </code>
                </value>
            </constant>
            <constant name="ERROR_ONLY_VALIDATE_VIA_AUTHENTICODE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x245)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVICE_INSTALLER_NOT_READY" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x246)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DRIVER_STORE_ADD_FAILED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x247)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DEVICE_INSTALL_BLOCKED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x248)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DRIVER_INSTALL_BLOCKED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x249)
            </code>
                </value>
            </constant>
            <constant name="ERROR_WRONG_INF_TYPE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x24A)
            </code>
                </value>
            </constant>
            <constant name="ERROR_FILE_HASH_NOT_IN_CATALOG" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x24B)
            </code>
                </value>
            </constant>
            <constant name="ERROR_DRIVER_STORE_DELETE_FAILED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x24C)
            </code>
                </value>
            </constant>
            <constant name="ERROR_UNRECOVERABLE_STACK_OVERFLOW" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x300)
            </code>
                </value>
            </constant>
            <constant name="EXCEPTION_SPAPI_UNRECOVERABLE_STACK_OVERFLOW" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x300)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_DEFAULT_INTERFACE_DEVICE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21A)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INTERFACE_DEVICE_ACTIVE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21B)
            </code>
                </value>
            </constant>
            <constant name="ERROR_INTERFACE_DEVICE_REMOVED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x21C)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NO_SUCH_INTERFACE_DEVICE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x225)
            </code>
                </value>
            </constant>
            <constant name="ERROR_NOT_INSTALLED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x20000000 | 0xC0000000 | 0x1000)
            </code>
                </value>
            </constant>
            <constant name="INFINFO_INF_SPEC_IS_HINF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="INFINFO_INF_NAME_IS_ABSOLUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="INFINFO_DEFAULT_SEARCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="INFINFO_REVERSE_DEFAULT_SEARCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="INFINFO_INF_PATH_LIST_SEARCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="SetupGetInfInformation" access="public">
                <type primitive="False">delegate*&lt;void*, uint, SP_INF_INFORMATION*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetInfInformationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueryInfFileInformation" access="public">
                <type primitive="False">delegate*&lt;SP_INF_INFORMATION*, uint, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueryInfFileInformationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueryInfOriginalFileInformation" access="public">
                <type primitive="False">delegate*&lt;SP_INF_INFORMATION*, uint, SP_ALTPLATFORM_INFO_V2*, SP_ORIGINAL_FILE_INFO_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueryInfOriginalFileInformationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueryInfVersionInformation" access="public">
                <type primitive="False">delegate*&lt;SP_INF_INFORMATION*, uint, ushort*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueryInfVersionInformationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetInfDriverStoreLocation" access="public">
                <type primitive="False">delegate*&lt;ushort*, SP_ALTPLATFORM_INFO_V2*, ushort*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetInfDriverStoreLocationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetInfPublishedName" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetInfPublishedNameW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetInfFileList" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetInfFileListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupOpenInfFile" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, uint, uint*, void*&gt;</type>
                <value>
                    <deref>
                        <code>SetupOpenInfFileW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupOpenAppendInfFile" access="public">
                <type primitive="False">delegate*&lt;ushort*, void*, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupOpenAppendInfFileW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupFindFirstLine" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, ushort*, INFCONTEXT*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupFindFirstLineW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupFindNextMatchLine" access="public">
                <type primitive="False">delegate*&lt;INFCONTEXT*, ushort*, INFCONTEXT*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupFindNextMatchLineW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetLineByIndex" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, INFCONTEXT*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetLineByIndexW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetLineCount" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetLineCountW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetLineText" access="public">
                <type primitive="False">delegate*&lt;INFCONTEXT*, void*, ushort*, ushort*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetLineTextW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetStringField" access="public">
                <type primitive="False">delegate*&lt;INFCONTEXT*, uint, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetStringFieldW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetMultiSzField" access="public">
                <type primitive="False">delegate*&lt;INFCONTEXT*, uint, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetMultiSzFieldW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetFileCompressionInfo" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort**, uint*, uint*, uint*, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetFileCompressionInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetFileCompressionInfoEx" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, uint, uint*, uint*, uint*, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetFileCompressionInfoExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="FILE_COMPRESSION_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="FILE_COMPRESSION_WINLZA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="FILE_COMPRESSION_MSZIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="FILE_COMPRESSION_NTCAB" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SetupDecompressOrCopyFile" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, uint*, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetupDecompressOrCopyFileW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetSourceFileLocation" access="public">
                <type primitive="False">delegate*&lt;void*, INFCONTEXT*, ushort*, uint*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetSourceFileLocationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetSourceFileSize" access="public">
                <type primitive="False">delegate*&lt;void*, INFCONTEXT*, ushort*, ushort*, uint*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetSourceFileSizeW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetTargetPath" access="public">
                <type primitive="False">delegate*&lt;void*, INFCONTEXT*, ushort*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetTargetPathW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SRCLIST_TEMPORARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SRCLIST_NOBROWSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SRCLIST_SYSTEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="SRCLIST_USER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="SRCLIST_SYSIFADMIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="SRCLIST_SUBDIRS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="SRCLIST_APPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="SRCLIST_NOSTRIPPLATFORM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="SetupSetSourceList" access="public">
                <type primitive="False">delegate*&lt;uint, ushort**, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupSetSourceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupAddToSourceList" access="public">
                <type primitive="False">delegate*&lt;uint, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupAddToSourceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupRemoveFromSourceList" access="public">
                <type primitive="False">delegate*&lt;uint, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupRemoveFromSourceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQuerySourceList" access="public">
                <type primitive="False">delegate*&lt;uint, ushort***, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQuerySourceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupFreeSourceList" access="public">
                <type primitive="False">delegate*&lt;ushort***, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupFreeSourceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupPromptForDisk" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, ushort*, ushort*, ushort*, ushort*, uint, ushort*, uint, uint*, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetupPromptForDiskW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupCopyError" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, ushort*, ushort*, ushort*, ushort*, uint, uint, ushort*, uint, uint*, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetupCopyErrorW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupRenameError" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, ushort*, ushort*, uint, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetupRenameErrorW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDeleteError" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, ushort*, uint, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetupDeleteErrorW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupBackupError" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, ushort*, ushort*, uint, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetupBackupErrorW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="IDF_NOBROWSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="IDF_NOSKIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="IDF_NODETAILS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="IDF_NOCOMPRESSED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="IDF_CHECKFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="IDF_NOBEEP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="IDF_NOFOREGROUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="IDF_WARNIFSKIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="IDF_NOREMOVABLEMEDIAPROMPT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="IDF_USEDISKNAMEASPROMPT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="IDF_OEMDISK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="DPROMPT_SUCCESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="DPROMPT_CANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="DPROMPT_SKIPFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="DPROMPT_BUFFERTOOSMALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="DPROMPT_OUTOFMEMORY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SetupSetDirectoryId" access="public">
                <type primitive="False">delegate*&lt;void*, uint, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupSetDirectoryIdW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupSetDirectoryIdEx" access="public">
                <type primitive="False">delegate*&lt;void*, uint, ushort*, uint, uint, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupSetDirectoryIdExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SETDIRID_NOT_FULL_PATH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SetupGetSourceInfo" access="public">
                <type primitive="False">delegate*&lt;void*, uint, uint, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetSourceInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SRCINFO_PATH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SRCINFO_TAGFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SRCINFO_DESCRIPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SRCINFO_FLAGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SRCINFO_TAGFILE2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="SRC_FLAGS_CABFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0010)
            </code>
                </value>
            </constant>
            <constant name="SetupInstallFile" access="public">
                <type primitive="False">delegate*&lt;void*, INFCONTEXT*, ushort*, ushort*, ushort*, uint, delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupInstallFileW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupInstallFileEx" access="public">
                <type primitive="False">delegate*&lt;void*, INFCONTEXT*, ushort*, ushort*, ushort*, uint, delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;, void*, int*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupInstallFileExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SP_COPY_DELETESOURCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000001
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_REPLACEONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000002
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_NEWER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000004
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_NEWER_OR_SAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000004
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_NOOVERWRITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000008
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_NODECOMP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000010
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_LANGUAGEAWARE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000020
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_SOURCE_ABSOLUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000040
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_SOURCEPATH_ABSOLUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000080
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_IN_USE_NEEDS_REBOOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000100
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_FORCE_IN_USE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000200
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_NOSKIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000400
            </code>
                </value>
            </constant>
            <constant name="SP_FLAG_CABINETCONTINUATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000800
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_FORCE_NOOVERWRITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_FORCE_NEWER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_WARNIFSKIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_NOBROWSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_NEWER_ONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_RESERVED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_OEMINF_CATALOG_ONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_REPLACE_BOOT_FILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_NOPRUNE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_OEM_F6_INF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_ALREADYDECOMP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_WINDOWS_SIGNED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_PNPLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_IN_USE_TRY_RENAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_INBOX_INF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000000
            </code>
                </value>
            </constant>
            <constant name="SP_COPY_HARDLINK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="SP_BACKUP_BACKUPPASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SP_BACKUP_DEMANDPASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SP_BACKUP_SPECIAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SP_BACKUP_BOOTFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="SetupSetFileQueueAlternatePlatform" access="public">
                <type primitive="False">delegate*&lt;void*, SP_ALTPLATFORM_INFO_V2*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupSetFileQueueAlternatePlatformW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupSetPlatformPathOverride" access="public">
                <type primitive="False">delegate*&lt;ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupSetPlatformPathOverrideW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueueCopy" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, ushort*, ushort*, ushort*, ushort*, ushort*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueueCopyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueueCopyIndirect" access="public">
                <type primitive="False">delegate*&lt;SP_FILE_COPY_PARAMS_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueueCopyIndirectW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueueDefaultCopy" access="public">
                <type primitive="False">delegate*&lt;void*, void*, ushort*, ushort*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueueDefaultCopyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueueCopySection" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, void*, void*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueueCopySectionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueueDelete" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueueDeleteW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueueDeleteSection" access="public">
                <type primitive="False">delegate*&lt;void*, void*, void*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueueDeleteSectionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueueRename" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, ushort*, ushort*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueueRenameW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueueRenameSection" access="public">
                <type primitive="False">delegate*&lt;void*, void*, void*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueueRenameSectionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupCommitFileQueue" access="public">
                <type primitive="False">delegate*&lt;IntPtr, void*, delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupCommitFileQueueW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupScanFileQueue" access="public">
                <type primitive="False">delegate*&lt;void*, uint, IntPtr, delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;, void*, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupScanFileQueueW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPQ_SCAN_FILE_PRESENCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_FILE_VALIDITY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_USE_CALLBACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_USE_CALLBACKEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_INFORM_USER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_PRUNE_COPY_QUEUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_USE_CALLBACK_SIGNERINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_PRUNE_DELREN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_FILE_PRESENCE_WITHOUT_SOURCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_FILE_COMPARISON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="SPQ_SCAN_ACTIVATE_DRP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="SPQ_DELAYED_COPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPQ_FLAG_BACKUP_AWARE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPQ_FLAG_ABORT_IF_UNSIGNED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPQ_FLAG_FILES_MODIFIED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SPQ_FLAG_DO_SHUFFLEMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="SPQ_FLAG_VALID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000F
            </code>
                </value>
            </constant>
            <constant name="SPOST_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SPOST_PATH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SPOST_URL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SPOST_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SetupCopyOEMInf" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, uint, uint, ushort*, uint, uint*, ushort**, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupCopyOEMInfW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SUOI_FORCEDELETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SUOI_INTERNAL1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SetupUninstallOEMInf" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupUninstallOEMInfW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupCreateDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, uint, uint, void*&gt;</type>
                <value>
                    <deref>
                        <code>SetupCreateDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPDSL_IGNORE_DISK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPDSL_DISALLOW_NEGATIVE_ADJUST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SetupDuplicateDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, void*, uint, uint, void*&gt;</type>
                <value>
                    <deref>
                        <code>SetupDuplicateDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueryDrivesInDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueryDrivesInDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQuerySpaceRequiredOnDrive" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, long*, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQuerySpaceRequiredOnDriveW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupAdjustDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, long, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupAdjustDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupAddToDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, long, uint, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupAddToDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupAddSectionToDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, void*, void*, ushort*, uint, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupAddSectionToDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupAddInstallSectionToDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, void*, void*, ushort*, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupAddInstallSectionToDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupRemoveFromDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupRemoveFromDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupRemoveSectionFromDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, void*, void*, ushort*, uint, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupRemoveSectionFromDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupRemoveInstallSectionFromDiskSpaceList" access="public">
                <type primitive="False">delegate*&lt;void*, void*, void*, ushort*, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupRemoveInstallSectionFromDiskSpaceListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupIterateCabinet" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupIterateCabinetW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPFILEQ_FILE_IN_USE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPFILEQ_REBOOT_RECOMMENDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPFILEQ_REBOOT_IN_PROGRESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SetupDefaultQueueCallback" access="public">
                <type primitive="False">delegate*&lt;void*, uint, nuint, nuint, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetupDefaultQueueCallbackW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="FLG_ADDREG_DELREG_BIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00008000)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_BINVALUETYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_NOCLOBBER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000002)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_DELVAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000004)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_APPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000008)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_KEYONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000010)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_OVERWRITEONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000020)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_64BITKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00001000)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_KEYONLY_COMMON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00002000)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_32BITKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00004000)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_TYPE_MASK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0xFFFF0000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_TYPE_SZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_TYPE_MULTI_SZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00010000)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_TYPE_EXPAND_SZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00020000)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_TYPE_BINARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_TYPE_DWORD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00010000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_TYPE_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00020000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDREG_TYPE_QWORD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x000B0000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_VALUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_TYPE_MASK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0xFFFF0000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_TYPE_SZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_TYPE_MULTI_SZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00010000)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_TYPE_EXPAND_SZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00020000)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_TYPE_BINARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_TYPE_DWORD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00010000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_TYPE_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00020000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_64BITKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00001000)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_KEYONLY_COMMON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00002000)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_32BITKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00004000)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_OPERATION_MASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x000000FE)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_MULTI_SZ_DELSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>((0x00010000) | (0x00008000) | 0x00000002)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELREG_TYPE_QWORD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x000B0000 | (0x00000001))
            </code>
                </value>
            </constant>
            <constant name="FLG_BITREG_CLEARBITS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000)
            </code>
                </value>
            </constant>
            <constant name="FLG_BITREG_SETBITS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="FLG_BITREG_64BITKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00001000)
            </code>
                </value>
            </constant>
            <constant name="FLG_BITREG_32BITKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00004000)
            </code>
                </value>
            </constant>
            <constant name="FLG_INI2REG_64BITKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00001000)
            </code>
                </value>
            </constant>
            <constant name="FLG_INI2REG_32BITKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00004000)
            </code>
                </value>
            </constant>
            <constant name="FLG_REGSVR_DLLREGISTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="FLG_REGSVR_DLLINSTALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000002)
            </code>
                </value>
            </constant>
            <constant name="FLG_PROFITEM_CURRENTUSER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="FLG_PROFITEM_DELETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000002)
            </code>
                </value>
            </constant>
            <constant name="FLG_PROFITEM_GROUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000004)
            </code>
                </value>
            </constant>
            <constant name="FLG_PROFITEM_CSIDL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000008)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDPROPERTY_NOCLOBBER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDPROPERTY_OVERWRITEONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000002)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDPROPERTY_APPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000004)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDPROPERTY_OR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000008)
            </code>
                </value>
            </constant>
            <constant name="FLG_ADDPROPERTY_AND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000010)
            </code>
                </value>
            </constant>
            <constant name="FLG_DELPROPERTY_MULTI_SZ_DELSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="SetupInstallFromInfSection" access="public">
                <type primitive="False">delegate*&lt;IntPtr, void*, ushort*, uint, IntPtr, ushort*, uint, delegate* unmanaged&lt;void*, uint, nuint, nuint, uint&gt;, void*, void*, SP_DEVINFO_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupInstallFromInfSectionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPINST_LOGCONFIG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPINST_INIFILES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPINST_REGISTRY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SPINST_INI2REG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="SPINST_FILES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="SPINST_BITREG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="SPINST_REGSVR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="SPINST_UNREGSVR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="SPINST_PROFILEITEMS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="SPINST_COPYINF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="SPINST_PROPERTIES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="SPINST_ALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000007ff
            </code>
                </value>
            </constant>
            <constant name="SPINST_SINGLESECTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="SPINST_LOGCONFIG_IS_FORCED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="SPINST_LOGCONFIGS_ARE_OVERRIDES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="SPINST_REGISTERCALLBACKAWARE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="SPINST_DEVICEINSTALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="SetupInstallFilesFromInfSection" access="public">
                <type primitive="False">delegate*&lt;void*, void*, void*, ushort*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupInstallFilesFromInfSectionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPSVCINST_TAGTOFRONT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_ASSOCSERVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000002)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_DELETEEVENTLOGENTRY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000004)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_DISPLAYNAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000008)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_STARTTYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000010)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_ERRORCONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000020)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_LOADORDERGROUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000040)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_DEPENDENCIES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000080)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_DESCRIPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000100)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_STOPSERVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000200)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_CLOBBER_SECURITY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000400)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_STARTSERVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000800)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_REQUIREDPRIVILEGES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00001000)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_TRIGGERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00002000)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_SERVICESIDTYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00004000)
            </code>
                </value>
            </constant>
            <constant name="SPSVCINST_NOCLOBBER_DELAYEDAUTOSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00008000)
            </code>
                </value>
            </constant>
            <constant name="SetupInstallServicesFromInfSection" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupInstallServicesFromInfSectionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupInstallServicesFromInfSectionEx" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, void*, SP_DEVINFO_DATA*, void*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupInstallServicesFromInfSectionExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="InstallHinfSection" access="public">
                <type primitive="False">delegate*&lt;IntPtr, IntPtr, ushort*, int, void&gt;</type>
                <value>
                    <deref>
                        <code>InstallHinfSectionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupInitializeFileLog" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, void*&gt;</type>
                <value>
                    <deref>
                        <code>SetupInitializeFileLogW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPFILELOG_SYSTEMLOG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPFILELOG_FORCENEW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SPFILELOG_QUERYONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SetupLogFile" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, ushort*, ushort*, uint, ushort*, ushort*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupLogFileW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPFILELOG_OEMFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SetupRemoveFileLogEntry" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupRemoveFileLogEntryW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupQueryFileLog" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, ushort*, SetupFileLogInfo, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupQueryFileLogW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="LogSevInformation" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="LogSevWarning" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="LogSevError" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="LogSevFatalError" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="LogSevMaximum" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SetupLogError" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupLogErrorW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupGetBackupInformation" access="public">
                <type primitive="False">delegate*&lt;void*, SP_BACKUP_QUEUE_PARAMS_V2_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupGetBackupInformationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupPrepareQueueForRestore" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupPrepareQueueForRestoreW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateDeviceInfoListEx" access="public">
                <type primitive="False">delegate*&lt;Guid*, IntPtr, ushort*, void*, void*&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInfoListExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetDeviceInfoListDetail" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_LIST_DETAIL_DATA_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInfoListDetailW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DICD_GENERATE_ID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DICD_INHERIT_CLASSDRVS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SetupDiCreateDeviceInfo" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, Guid*, ushort*, IntPtr, uint, SP_DEVINFO_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DIOD_INHERIT_CLASSDRVS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DIOD_CANCEL_REMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SetupDiOpenDeviceInfo" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, IntPtr, uint, SP_DEVINFO_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiOpenDeviceInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetDeviceInstanceId" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInstanceIdW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiEnumInterfaceDevice" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, Guid*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiEnumDeviceInterfaces
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateDeviceInterface" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, Guid*, ushort*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInterfaceW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateInterfaceDeviceW" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, Guid*, ushort*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInterfaceW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateInterfaceDeviceA" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, Guid*, sbyte*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInterfaceA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateInterfaceDevice" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, Guid*, ushort*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInterfaceW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DIODI_NO_ADD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SetupDiOpenDeviceInterface" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiOpenDeviceInterfaceW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiOpenInterfaceDeviceW" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiOpenDeviceInterfaceW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiOpenInterfaceDeviceA" access="public">
                <type primitive="False">delegate*&lt;void*, sbyte*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiOpenDeviceInterfaceA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiOpenInterfaceDevice" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiOpenDeviceInterfaceW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetInterfaceDeviceAlias" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, Guid*, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInterfaceAlias
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiDeleteInterfaceDeviceData" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiDeleteDeviceInterfaceData
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiRemoveInterfaceDevice" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiRemoveDeviceInterface
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetDeviceInterfaceDetail" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, SP_DEVICE_INTERFACE_DETAIL_DATA_W*, uint, uint*, SP_DEVINFO_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInterfaceDetailW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetInterfaceDeviceDetailW" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, SP_DEVICE_INTERFACE_DETAIL_DATA_W*, uint, uint*, SP_DEVINFO_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInterfaceDetailW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetInterfaceDeviceDetailA" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, SP_DEVICE_INTERFACE_DETAIL_DATA_A*, uint, uint*, SP_DEVINFO_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInterfaceDetailA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetInterfaceDeviceDetail" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, SP_DEVICE_INTERFACE_DETAIL_DATA_W*, uint, uint*, SP_DEVINFO_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInterfaceDetailW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiInstallInterfaceDevices" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiInstallDeviceInterfaces
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPRDI_FIND_DUPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPDIT_NODRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="SPDIT_CLASSDRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPDIT_COMPATDRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SetupDiEnumDriverInfo" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, uint, uint, SP_DRVINFO_DATA_V2_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiEnumDriverInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetSelectedDriver" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_DRVINFO_DATA_V2_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetSelectedDriverW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetSelectedDriver" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_DRVINFO_DATA_V2_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetSelectedDriverW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetDriverInfoDetail" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_DRVINFO_DATA_V2_W*, SP_DRVINFO_DETAIL_DATA_W*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDriverInfoDetailW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DIGCF_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DIGCF_PRESENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DIGCF_ALLCLASSES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DIGCF_PROFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="DIGCF_DEVICEINTERFACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="DIGCF_INTERFACEDEVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="SetupDiGetClassDevs" access="public">
                <type primitive="False">delegate*&lt;Guid*, ushort*, IntPtr, uint, void*&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassDevsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetClassDevsEx" access="public">
                <type primitive="False">delegate*&lt;Guid*, ushort*, IntPtr, uint, void*, ushort*, void*, void*&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassDevsExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetINFClass" access="public">
                <type primitive="False">delegate*&lt;ushort*, Guid*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetINFClassW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DIBCI_NOINSTALLCLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DIBCI_NODISPLAYCLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SetupDiBuildClassInfoListEx" access="public">
                <type primitive="False">delegate*&lt;uint, Guid*, uint, uint*, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiBuildClassInfoListExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetClassDescription" access="public">
                <type primitive="False">delegate*&lt;Guid*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassDescriptionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetClassDescriptionEx" access="public">
                <type primitive="False">delegate*&lt;Guid*, ushort*, uint, uint*, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassDescriptionExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiInstallClass" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, uint, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiInstallClassW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiInstallClassEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, uint, void*, Guid*, void*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiInstallClassExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DIOCR_INSTALLER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DIOCR_INTERFACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SetupDiOpenClassRegKeyEx" access="public">
                <type primitive="False">delegate*&lt;Guid*, uint, uint, ushort*, void*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiOpenClassRegKeyExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateDeviceInterfaceRegKey" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, uint, uint, void*, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInterfaceRegKeyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateInterfaceDeviceRegKeyW" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, uint, uint, void*, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInterfaceRegKeyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateInterfaceDeviceRegKeyA" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, uint, uint, void*, sbyte*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInterfaceRegKeyA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiCreateInterfaceDeviceRegKey" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, uint, uint, void*, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDeviceInterfaceRegKeyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiOpenInterfaceDeviceRegKey" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, uint, uint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiOpenDeviceInterfaceRegKey
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiDeleteInterfaceDeviceRegKey" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiDeleteDeviceInterfaceRegKey
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DIREG_DEV" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DIREG_DRV" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DIREG_BOTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SetupDiCreateDevRegKey" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, uint, uint, uint, void*, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiCreateDevRegKeyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetHwProfileListEx" access="public">
                <type primitive="False">delegate*&lt;uint*, uint, uint*, uint*, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetHwProfileListExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetDeviceProperty" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, DEVPROPKEY*, uint*, byte*, uint, uint*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDevicePropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetDeviceProperty" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, DEVPROPKEY*, uint, byte*, uint, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetDevicePropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetDeviceInterfaceProperty" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, DEVPROPKEY*, uint*, byte*, uint, uint*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInterfacePropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetDeviceInterfaceProperty" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVICE_INTERFACE_DATA*, DEVPROPKEY*, uint, byte*, uint, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetDeviceInterfacePropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DICLASSPROP_INSTALLER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DICLASSPROP_INTERFACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SetupDiGetClassPropertyKeysEx" access="public">
                <type primitive="False">delegate*&lt;Guid*, DEVPROPKEY*, uint, uint*, uint, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassPropertyKeysExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetClassProperty" access="public">
                <type primitive="False">delegate*&lt;Guid*, DEVPROPKEY*, uint*, byte*, uint, uint*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassPropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetClassPropertyEx" access="public">
                <type primitive="False">delegate*&lt;Guid*, DEVPROPKEY*, uint*, byte*, uint, uint*, uint, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassPropertyExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetClassProperty" access="public">
                <type primitive="False">delegate*&lt;Guid*, DEVPROPKEY*, uint, byte*, uint, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetClassPropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetClassPropertyEx" access="public">
                <type primitive="False">delegate*&lt;Guid*, DEVPROPKEY*, uint, byte*, uint, uint, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetClassPropertyExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPDRP_DEVICEDESC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_HARDWAREID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_COMPATIBLEIDS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000002)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_UNUSED0" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000003)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_SERVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000004)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_UNUSED1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000005)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_UNUSED2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000006)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_CLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000007)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_CLASSGUID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000008)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_DRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000009)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_CONFIGFLAGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000000A)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_MFG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000000B)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_FRIENDLYNAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000000C)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_LOCATION_INFORMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000000D)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_PHYSICAL_DEVICE_OBJECT_NAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000000E)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_CAPABILITIES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000000F)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_UI_NUMBER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000010)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_UPPERFILTERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000011)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_LOWERFILTERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000012)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_BUSTYPEGUID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000013)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_LEGACYBUSTYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000014)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_BUSNUMBER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000015)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_ENUMERATOR_NAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000016)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_SECURITY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000017)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_SECURITY_SDS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000018)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_DEVTYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000019)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_EXCLUSIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000001A)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_CHARACTERISTICS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000001B)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_ADDRESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000001C)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_UI_NUMBER_DESC_FORMAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0X0000001D)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_DEVICE_POWER_DATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000001E)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_REMOVAL_POLICY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000001F)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_REMOVAL_POLICY_HW_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000020)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_REMOVAL_POLICY_OVERRIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000021)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_INSTALL_STATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000022)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_LOCATION_PATHS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000023)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_BASE_CONTAINERID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000024)
            </code>
                </value>
            </constant>
            <constant name="SPDRP_MAXIMUM_PROPERTY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000025)
            </code>
                </value>
            </constant>
            <constant name="SPCRP_UPPERFILTERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000011)
            </code>
                </value>
            </constant>
            <constant name="SPCRP_LOWERFILTERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000012)
            </code>
                </value>
            </constant>
            <constant name="SPCRP_SECURITY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000017)
            </code>
                </value>
            </constant>
            <constant name="SPCRP_SECURITY_SDS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000018)
            </code>
                </value>
            </constant>
            <constant name="SPCRP_DEVTYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000019)
            </code>
                </value>
            </constant>
            <constant name="SPCRP_EXCLUSIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000001A)
            </code>
                </value>
            </constant>
            <constant name="SPCRP_CHARACTERISTICS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000001B)
            </code>
                </value>
            </constant>
            <constant name="SPCRP_MAXIMUM_PROPERTY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0000001C)
            </code>
                </value>
            </constant>
            <constant name="SetupDiGetDeviceRegistryProperty" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, uint, uint*, byte*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceRegistryPropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetClassRegistryProperty" access="public">
                <type primitive="False">delegate*&lt;Guid*, uint, uint*, byte*, uint, uint*, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassRegistryPropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetDeviceRegistryProperty" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, uint, byte*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetDeviceRegistryPropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetClassRegistryProperty" access="public">
                <type primitive="False">delegate*&lt;Guid*, uint, byte*, uint, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetClassRegistryPropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetDeviceInstallParams" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_DEVINSTALL_PARAMS_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDeviceInstallParamsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetClassInstallParams" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_CLASSINSTALL_HEADER*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassInstallParamsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetDeviceInstallParams" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_DEVINSTALL_PARAMS_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetDeviceInstallParamsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetClassInstallParams" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_CLASSINSTALL_HEADER*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetClassInstallParamsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetDriverInstallParams" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_DRVINFO_DATA_V2_W*, SP_DRVINSTALL_PARAMS*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetDriverInstallParamsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiSetDriverInstallParams" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, SP_DRVINFO_DATA_V2_W*, SP_DRVINSTALL_PARAMS*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiSetDriverInstallParamsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DMI_MASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DMI_BKCOLOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DMI_USERECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SetupDiGetClassImageListEx" access="public">
                <type primitive="False">delegate*&lt;SP_CLASSIMAGELIST_DATA*, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassImageListExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DIGCDP_FLAG_BASIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DIGCDP_FLAG_ADVANCED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DIGCDP_FLAG_REMOTE_BASIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="DIGCDP_FLAG_REMOTE_ADVANCED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SetupDiGetClassDevPropertySheets" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, PROPSHEETHEADERW_V2*, uint, uint*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetClassDevPropertySheetsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="IDI_RESOURCEFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>159
            </code>
                </value>
            </constant>
            <constant name="IDI_RESOURCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>159
            </code>
                </value>
            </constant>
            <constant name="IDI_RESOURCELAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>161
            </code>
                </value>
            </constant>
            <constant name="IDI_RESOURCEOVERLAYFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>161
            </code>
                </value>
            </constant>
            <constant name="IDI_RESOURCEOVERLAYLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>161
            </code>
                </value>
            </constant>
            <constant name="IDI_CONFLICT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>161
            </code>
                </value>
            </constant>
            <constant name="IDI_CLASSICON_OVERLAYFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>500
            </code>
                </value>
            </constant>
            <constant name="IDI_CLASSICON_OVERLAYLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>502
            </code>
                </value>
            </constant>
            <constant name="IDI_PROBLEM_OVL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>500
            </code>
                </value>
            </constant>
            <constant name="IDI_DISABLED_OVL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>501
            </code>
                </value>
            </constant>
            <constant name="IDI_FORCED_OVL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>502
            </code>
                </value>
            </constant>
            <constant name="SetupDiClassNameFromGuid" access="public">
                <type primitive="False">delegate*&lt;Guid*, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiClassNameFromGuidW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiClassNameFromGuidEx" access="public">
                <type primitive="False">delegate*&lt;Guid*, ushort*, uint, uint*, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiClassNameFromGuidExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiClassGuidsFromName" access="public">
                <type primitive="False">delegate*&lt;ushort*, Guid*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiClassGuidsFromNameW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiClassGuidsFromNameEx" access="public">
                <type primitive="False">delegate*&lt;ushort*, Guid*, uint, uint*, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiClassGuidsFromNameExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetHwProfileFriendlyName" access="public">
                <type primitive="False">delegate*&lt;uint, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetHwProfileFriendlyNameW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetHwProfileFriendlyNameEx" access="public">
                <type primitive="False">delegate*&lt;uint, ushort*, uint, uint*, ushort*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetHwProfileFriendlyNameExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SPWPT_SELECTDEVICE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SPWP_USE_DEVINFO_DATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SetupDiGetActualModelsSection" access="public">
                <type primitive="False">delegate*&lt;INFCONTEXT*, SP_ALTPLATFORM_INFO_V2*, ushort*, uint, uint*, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetActualModelsSectionW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetActualSectionToInstall" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, ushort*, uint, uint*, ushort**, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetActualSectionToInstallW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupDiGetActualSectionToInstallEx" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, SP_ALTPLATFORM_INFO_V2*, ushort*, uint, uint*, ushort**, void*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetActualSectionToInstallExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetupEnumInfSections" access="public">
                <type primitive="False">delegate*&lt;void*, uint, ushort*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupEnumInfSectionsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SIGNERSCORE_UNKNOWN" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0xFF000000
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_W9X_SUSPECT" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0xC0000000
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_UNSIGNED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_AUTHENTICODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0F000000
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_WHQL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0D000005
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_UNCLASSIFIED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0D000004
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_INBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0D000003
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_LOGO_STANDARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0D000002
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_LOGO_PREMIUM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0D000001
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_MASK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0xFF000000
            </code>
                </value>
            </constant>
            <constant name="SIGNERSCORE_SIGNED_MASK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0xF0000000
            </code>
                </value>
            </constant>
            <constant name="SetupVerifyInfFile" access="public">
                <type primitive="False">delegate*&lt;ushort*, SP_ALTPLATFORM_INFO_V2*, SP_INF_SIGNER_INFO_V2_W*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupVerifyInfFileW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DICUSTOMDEVPROP_MERGE_MULTISZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SetupDiGetCustomDeviceProperty" access="public">
                <type primitive="False">delegate*&lt;void*, SP_DEVINFO_DATA*, ushort*, uint, uint*, byte*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupDiGetCustomDevicePropertyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SCWMI_CLOBBER_SECURITY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SetupConfigureWmiFromInfSection" access="public">
                <type primitive="False">delegate*&lt;void*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetupConfigureWmiFromInfSectionW
            </code>
                    </deref>
                </value>
            </constant>
        </class>
    </namespace>
</bindings>
