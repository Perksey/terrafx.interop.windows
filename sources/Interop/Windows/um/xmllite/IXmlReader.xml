<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/xmllite.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IXmlReader" access="public" native="struct IXmlReader : IUnknown" uuid="7279fc81-709d-4095-b63d-69fe4b0d9030" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetInput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pInput">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pInput">pInput</param>);
        </code>
                </body>
            </function>
            <function name="GetProperty" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nProperty">
                    <type>uint</type>
                </param>
                <param name="ppValue">
                    <type>nint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, uint, nint*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="nProperty">nProperty</param>, <param name="ppValue">ppValue</param>);
        </code>
                </body>
            </function>
            <function name="SetProperty" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nProperty">
                    <type>uint</type>
                </param>
                <param name="pValue">
                    <type>nint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, uint, nint, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="nProperty">nProperty</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="Read" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pNodeType">
                    <type>XmlNodeType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, XmlNodeType*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pNodeType">pNodeType</param>);
        </code>
                </body>
            </function>
            <function name="GetNodeType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pNodeType">
                    <type>XmlNodeType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, XmlNodeType*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pNodeType">pNodeType</param>);
        </code>
                </body>
            </function>
            <function name="MoveToFirstAttribute" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="MoveToNextAttribute" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="MoveToAttributeByName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pwszLocalName">
                    <type>ushort*</type>
                </param>
                <param name="pwszNamespaceUri">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, ushort*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pwszLocalName">pwszLocalName</param>, <param name="pwszNamespaceUri">pwszNamespaceUri</param>);
        </code>
                </body>
            </function>
            <function name="MoveToElement" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetQualifiedName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppwszQualifiedName">
                    <type>ushort**</type>
                </param>
                <param name="pcwchQualifiedName">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, ushort**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="ppwszQualifiedName">ppwszQualifiedName</param>, <param name="pcwchQualifiedName">pcwchQualifiedName</param>);
        </code>
                </body>
            </function>
            <function name="GetNamespaceUri" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppwszNamespaceUri">
                    <type>ushort**</type>
                </param>
                <param name="pcwchNamespaceUri">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, ushort**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="ppwszNamespaceUri">ppwszNamespaceUri</param>, <param name="pcwchNamespaceUri">pcwchNamespaceUri</param>);
        </code>
                </body>
            </function>
            <function name="GetLocalName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppwszLocalName">
                    <type>ushort**</type>
                </param>
                <param name="pcwchLocalName">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, ushort**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="ppwszLocalName">ppwszLocalName</param>, <param name="pcwchLocalName">pcwchLocalName</param>);
        </code>
                </body>
            </function>
            <function name="GetPrefix" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppwszPrefix">
                    <type>ushort**</type>
                </param>
                <param name="pcwchPrefix">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, ushort**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="ppwszPrefix">ppwszPrefix</param>, <param name="pcwchPrefix">pcwchPrefix</param>);
        </code>
                </body>
            </function>
            <function name="GetValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppwszValue">
                    <type>ushort**</type>
                </param>
                <param name="pcwchValue">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, ushort**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="ppwszValue">ppwszValue</param>, <param name="pcwchValue">pcwchValue</param>);
        </code>
                </body>
            </function>
            <function name="ReadValueChunk" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pwchBuffer">
                    <type>ushort*</type>
                </param>
                <param name="cwchChunkSize">
                    <type>uint</type>
                </param>
                <param name="pcwchRead">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, ushort*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pwchBuffer">pwchBuffer</param>, <param name="cwchChunkSize">cwchChunkSize</param>, <param name="pcwchRead">pcwchRead</param>);
        </code>
                </body>
            </function>
            <function name="GetBaseUri" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppwszBaseUri">
                    <type>ushort**</type>
                </param>
                <param name="pcwchBaseUri">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, ushort**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="ppwszBaseUri">ppwszBaseUri</param>, <param name="pcwchBaseUri">pcwchBaseUri</param>);
        </code>
                </body>
            </function>
            <function name="IsDefault" access="public" unsafe="true">
                <type native="BOOL">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="IsEmptyElement" access="public" unsafe="true">
                <type native="BOOL">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetLineNumber" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pnLineNumber">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pnLineNumber">pnLineNumber</param>);
        </code>
                </body>
            </function>
            <function name="GetLinePosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pnLinePosition">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pnLinePosition">pnLinePosition</param>);
        </code>
                </body>
            </function>
            <function name="GetAttributeCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pnAttributeCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pnAttributeCount">pnAttributeCount</param>);
        </code>
                </body>
            </function>
            <function name="GetDepth" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pnDepth">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>, <param name="pnDepth">pnDepth</param>);
        </code>
                </body>
            </function>
            <function name="IsEOF" access="public" unsafe="true">
                <type native="BOOL">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXmlReader*, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IXmlReader*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
