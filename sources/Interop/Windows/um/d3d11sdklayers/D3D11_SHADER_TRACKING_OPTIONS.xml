<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d3d11sdklayers.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <attribute>Flags</attribute>
        <enumeration name="D3D11_SHADER_TRACKING_OPTIONS" access="public">
            <type>int</type>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_IGNORE" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_UNINITIALIZED" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x1
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_RAW" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x2
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_WAR" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x4
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_WAW" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x8
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_ALLOW_SAME" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x10
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x20
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_RAW_ACROSS_THREADGROUPS" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x40
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_WAR_ACROSS_THREADGROUPS" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x80
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_WAW_ACROSS_THREADGROUPS" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x100
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY_ACROSS_THREADGROUPS" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0x200
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_UAV_SPECIFIC_FLAGS" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(((D3D11_SHADER_TRACKING_OPTION_TRACK_RAW_ACROSS_THREADGROUPS | D3D11_SHADER_TRACKING_OPTION_TRACK_WAR_ACROSS_THREADGROUPS) | D3D11_SHADER_TRACKING_OPTION_TRACK_WAW_ACROSS_THREADGROUPS) | D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY_ACROSS_THREADGROUPS)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(((((((D3D11_SHADER_TRACKING_OPTION_TRACK_RAW | D3D11_SHADER_TRACKING_OPTION_TRACK_WAR) | D3D11_SHADER_TRACKING_OPTION_TRACK_WAW) | D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY) | D3D11_SHADER_TRACKING_OPTION_TRACK_RAW_ACROSS_THREADGROUPS) | D3D11_SHADER_TRACKING_OPTION_TRACK_WAR_ACROSS_THREADGROUPS) | D3D11_SHADER_TRACKING_OPTION_TRACK_WAW_ACROSS_THREADGROUPS) | D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY_ACROSS_THREADGROUPS)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS_ALLOWING_SAME" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS | D3D11_SHADER_TRACKING_OPTION_ALLOW_SAME)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D11_SHADER_TRACKING_OPTION_ALL_OPTIONS" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS_ALLOWING_SAME | D3D11_SHADER_TRACKING_OPTION_TRACK_UNINITIALIZED)
        </code>
                </value>
            </enumerator>
        </enumeration>
    </namespace>
</bindings>
