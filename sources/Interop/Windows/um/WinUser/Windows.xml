<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/WinUser.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <class name="Windows" access="public" static="true" unsafe="true">
            <function name="wvsprintfA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="param0">
                    <type>sbyte*</type>
                </param>
                <param name="param1">
                    <type>sbyte*</type>
                </param>
                <param name="arglist">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="wvsprintfW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="param0">
                    <type>ushort*</type>
                </param>
                <param name="param1">
                    <type>ushort*</type>
                </param>
                <param name="arglist">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="wsprintfA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="param0">
                    <type>sbyte*</type>
                </param>
                <param name="param1">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="wsprintfW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="param0">
                    <type>ushort*</type>
                </param>
                <param name="param1">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="LoadKeyboardLayoutA" access="public" lib="user32" static="true">
                <type native="HKL">IntPtr</type>
                <param name="pwszKLID">
                    <type>sbyte*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="LoadKeyboardLayoutW" access="public" lib="user32" static="true">
                <type native="HKL">IntPtr</type>
                <param name="pwszKLID">
                    <type>ushort*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="ActivateKeyboardLayout" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HKL">IntPtr</type>
                <param name="hkl">
                    <type>IntPtr</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="ToUnicodeEx" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="wVirtKey">
                    <type>uint</type>
                </param>
                <param name="wScanCode">
                    <type>uint</type>
                </param>
                <param name="lpKeyState">
                    <type>byte*</type>
                </param>
                <param name="pwszBuff">
                    <type>ushort*</type>
                </param>
                <param name="cchBuff">
                    <type>int</type>
                </param>
                <param name="wFlags">
                    <type>uint</type>
                </param>
                <param name="dwhkl">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="UnloadKeyboardLayout" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hkl">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetKeyboardLayoutNameA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="pwszKLID">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="GetKeyboardLayoutNameW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="pwszKLID">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="GetKeyboardLayoutList" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="nBuff">
                    <type>int</type>
                </param>
                <param name="lpList">
                    <type>IntPtr*</type>
                </param>
            </function>
            <function name="GetKeyboardLayout" access="public" lib="user32" static="true" unsafe="true">
                <type native="HKL">IntPtr</type>
                <param name="idThread">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetMouseMovePointsEx" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="cbSize">
                    <type>uint</type>
                </param>
                <param name="lppt">
                    <type>MOUSEMOVEPOINT*</type>
                </param>
                <param name="lpptBuf">
                    <type>MOUSEMOVEPOINT*</type>
                </param>
                <param name="nBufPoints">
                    <type>int</type>
                </param>
                <param name="resolution">
                    <type>uint</type>
                </param>
            </function>
            <function name="CreateDesktopA" access="public" lib="user32" static="true">
                <type native="HDESK">IntPtr</type>
                <param name="lpszDesktop">
                    <type>sbyte*</type>
                </param>
                <param name="lpszDevice">
                    <type>sbyte*</type>
                </param>
                <param name="pDevmode">
                    <type>DEVMODEA*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
                <param name="lpsa">
                    <type>SECURITY_ATTRIBUTES*</type>
                </param>
            </function>
            <function name="CreateDesktopW" access="public" lib="user32" static="true">
                <type native="HDESK">IntPtr</type>
                <param name="lpszDesktop">
                    <type>ushort*</type>
                </param>
                <param name="lpszDevice">
                    <type>ushort*</type>
                </param>
                <param name="pDevmode">
                    <type>DEVMODEW*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
                <param name="lpsa">
                    <type>SECURITY_ATTRIBUTES*</type>
                </param>
            </function>
            <function name="CreateDesktopExA" access="public" lib="user32" static="true">
                <type native="HDESK">IntPtr</type>
                <param name="lpszDesktop">
                    <type>sbyte*</type>
                </param>
                <param name="lpszDevice">
                    <type>sbyte*</type>
                </param>
                <param name="pDevmode">
                    <type>DEVMODEA*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
                <param name="lpsa">
                    <type>SECURITY_ATTRIBUTES*</type>
                </param>
                <param name="ulHeapSize">
                    <type>uint</type>
                </param>
                <param name="pvoid">
                    <type>void*</type>
                </param>
            </function>
            <function name="CreateDesktopExW" access="public" lib="user32" static="true">
                <type native="HDESK">IntPtr</type>
                <param name="lpszDesktop">
                    <type>ushort*</type>
                </param>
                <param name="lpszDevice">
                    <type>ushort*</type>
                </param>
                <param name="pDevmode">
                    <type>DEVMODEW*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
                <param name="lpsa">
                    <type>SECURITY_ATTRIBUTES*</type>
                </param>
                <param name="ulHeapSize">
                    <type>uint</type>
                </param>
                <param name="pvoid">
                    <type>void*</type>
                </param>
            </function>
            <function name="OpenDesktopA" access="public" lib="user32" static="true">
                <type native="HDESK">IntPtr</type>
                <param name="lpszDesktop">
                    <type>sbyte*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="fInherit">
                    <type>int</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
            </function>
            <function name="OpenDesktopW" access="public" lib="user32" static="true">
                <type native="HDESK">IntPtr</type>
                <param name="lpszDesktop">
                    <type>ushort*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="fInherit">
                    <type>int</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
            </function>
            <function name="OpenInputDesktop" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HDESK">IntPtr</type>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="fInherit">
                    <type>int</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
            </function>
            <function name="EnumDesktopsA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwinsta">
                    <type>IntPtr</type>
                </param>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;sbyte*, nint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="EnumDesktopsW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwinsta">
                    <type>IntPtr</type>
                </param>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;ushort*, nint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="EnumDesktopWindows" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hDesktop">
                    <type>IntPtr</type>
                </param>
                <param name="lpfn">
                    <type>delegate* unmanaged&lt;IntPtr, nint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="SwitchDesktop" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDesktop">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetThreadDesktop" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDesktop">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CloseDesktop" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDesktop">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetThreadDesktop" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HDESK">IntPtr</type>
                <param name="dwThreadId">
                    <type>uint</type>
                </param>
            </function>
            <function name="CreateWindowStationA" access="public" lib="user32" static="true">
                <type native="HWINSTA">IntPtr</type>
                <param name="lpwinsta">
                    <type>sbyte*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
                <param name="lpsa">
                    <type>SECURITY_ATTRIBUTES*</type>
                </param>
            </function>
            <function name="CreateWindowStationW" access="public" lib="user32" static="true">
                <type native="HWINSTA">IntPtr</type>
                <param name="lpwinsta">
                    <type>ushort*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
                <param name="lpsa">
                    <type>SECURITY_ATTRIBUTES*</type>
                </param>
            </function>
            <function name="OpenWindowStationA" access="public" lib="user32" static="true">
                <type native="HWINSTA">IntPtr</type>
                <param name="lpszWinSta">
                    <type>sbyte*</type>
                </param>
                <param name="fInherit">
                    <type>int</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
            </function>
            <function name="OpenWindowStationW" access="public" lib="user32" static="true">
                <type native="HWINSTA">IntPtr</type>
                <param name="lpszWinSta">
                    <type>ushort*</type>
                </param>
                <param name="fInherit">
                    <type>int</type>
                </param>
                <param name="dwDesiredAccess">
                    <type>uint</type>
                </param>
            </function>
            <function name="EnumWindowStationsA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;sbyte*, nint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="EnumWindowStationsW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;ushort*, nint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="CloseWindowStation" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWinSta">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetProcessWindowStation" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWinSta">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetProcessWindowStation" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWINSTA">IntPtr</type>
            </function>
            <function name="SetUserObjectSecurity" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hObj">
                    <type>IntPtr</type>
                </param>
                <param name="pSIRequested">
                    <type>uint*</type>
                </param>
                <param name="pSID">
                    <type>void*</type>
                </param>
            </function>
            <function name="GetUserObjectSecurity" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hObj">
                    <type>IntPtr</type>
                </param>
                <param name="pSIRequested">
                    <type>uint*</type>
                </param>
                <param name="pSID">
                    <type>void*</type>
                </param>
                <param name="nLength">
                    <type>uint</type>
                </param>
                <param name="lpnLengthNeeded">
                    <type>uint*</type>
                </param>
            </function>
            <function name="GetUserObjectInformationA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hObj">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="pvInfo">
                    <type>void*</type>
                </param>
                <param name="nLength">
                    <type>uint</type>
                </param>
                <param name="lpnLengthNeeded">
                    <type>uint*</type>
                </param>
            </function>
            <function name="GetUserObjectInformationW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hObj">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="pvInfo">
                    <type>void*</type>
                </param>
                <param name="nLength">
                    <type>uint</type>
                </param>
                <param name="lpnLengthNeeded">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetUserObjectInformationA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hObj">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="pvInfo">
                    <type>void*</type>
                </param>
                <param name="nLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetUserObjectInformationW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hObj">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="pvInfo">
                    <type>void*</type>
                </param>
                <param name="nLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="IsHungAppWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="DisableProcessWindowsGhosting" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
            </function>
            <function name="RegisterWindowMessageA" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="RegisterWindowMessageW" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="TrackMouseEvent" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpEventTrack">
                    <type>TRACKMOUSEEVENT*</type>
                </param>
            </function>
            <function name="DrawEdge" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="qrc">
                    <type>RECT*</type>
                </param>
                <param name="edge">
                    <type>uint</type>
                </param>
                <param name="grfFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="DrawFrameControl" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="param0">
                    <type>IntPtr</type>
                </param>
                <param name="param1">
                    <type>RECT*</type>
                </param>
                <param name="param2">
                    <type>uint</type>
                </param>
                <param name="param3">
                    <type>uint</type>
                </param>
            </function>
            <function name="DrawCaption" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="lprect">
                    <type>RECT*</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="DrawAnimatedRects" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="idAni">
                    <type>int</type>
                </param>
                <param name="lprcFrom">
                    <type>RECT*</type>
                </param>
                <param name="lprcTo">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="GetMessageA" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="wMsgFilterMin">
                    <type>uint</type>
                </param>
                <param name="wMsgFilterMax">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetMessageW" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="wMsgFilterMin">
                    <type>uint</type>
                </param>
                <param name="wMsgFilterMax">
                    <type>uint</type>
                </param>
            </function>
            <function name="TranslateMessage" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
            </function>
            <function name="DispatchMessageA" access="public" lib="user32" static="true">
                <type native="LRESULT">nint</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
            </function>
            <function name="DispatchMessageW" access="public" lib="user32" static="true">
                <type native="LRESULT">nint</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
            </function>
            <function name="SetMessageQueue" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="cMessagesMax">
                    <type>int</type>
                </param>
            </function>
            <function name="PeekMessageA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="wMsgFilterMin">
                    <type>uint</type>
                </param>
                <param name="wMsgFilterMax">
                    <type>uint</type>
                </param>
                <param name="wRemoveMsg">
                    <type>uint</type>
                </param>
            </function>
            <function name="PeekMessageW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="wMsgFilterMin">
                    <type>uint</type>
                </param>
                <param name="wMsgFilterMax">
                    <type>uint</type>
                </param>
                <param name="wRemoveMsg">
                    <type>uint</type>
                </param>
            </function>
            <function name="RegisterHotKey" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="id">
                    <type>int</type>
                </param>
                <param name="fsModifiers">
                    <type>uint</type>
                </param>
                <param name="vk">
                    <type>uint</type>
                </param>
            </function>
            <function name="UnregisterHotKey" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="id">
                    <type>int</type>
                </param>
            </function>
            <function name="ExitWindowsEx" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="dwReason">
                    <type>uint</type>
                </param>
            </function>
            <function name="SwapMouseButton" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="fSwap">
                    <type>int</type>
                </param>
            </function>
            <function name="GetMessagePos" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
            </function>
            <function name="GetMessageTime" access="public" lib="user32" static="true" unsafe="true">
                <type native="LONG">int</type>
            </function>
            <function name="GetMessageExtraInfo" access="public" lib="user32" static="true" unsafe="true">
                <type native="LPARAM">nint</type>
            </function>
            <function name="GetUnpredictedMessagePos" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
            </function>
            <function name="IsWow64Message" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="SetMessageExtraInfo" access="public" lib="user32" static="true" unsafe="true">
                <type native="LPARAM">nint</type>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="SendMessageA" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="SendMessageW" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="SendMessageTimeoutA" access="public" lib="user32" static="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
                <param name="fuFlags">
                    <type>uint</type>
                </param>
                <param name="uTimeout">
                    <type>uint</type>
                </param>
                <param name="lpdwResult">
                    <type>nuint*</type>
                </param>
            </function>
            <function name="SendMessageTimeoutW" access="public" lib="user32" static="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
                <param name="fuFlags">
                    <type>uint</type>
                </param>
                <param name="uTimeout">
                    <type>uint</type>
                </param>
                <param name="lpdwResult">
                    <type>nuint*</type>
                </param>
            </function>
            <function name="SendNotifyMessageA" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="SendNotifyMessageW" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="SendMessageCallbackA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
                <param name="lpResultCallBack">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, void&gt;</type>
                </param>
                <param name="dwData">
                    <type>nuint</type>
                </param>
            </function>
            <function name="SendMessageCallbackW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
                <param name="lpResultCallBack">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, void&gt;</type>
                </param>
                <param name="dwData">
                    <type>nuint</type>
                </param>
            </function>
            <function name="BroadcastSystemMessageExA" access="public" lib="user32" static="true">
                <type native="long">int</type>
                <param name="flags">
                    <type>uint</type>
                </param>
                <param name="lpInfo">
                    <type>uint*</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
                <param name="pbsmInfo">
                    <type>BSMINFO*</type>
                </param>
            </function>
            <function name="BroadcastSystemMessageExW" access="public" lib="user32" static="true">
                <type native="long">int</type>
                <param name="flags">
                    <type>uint</type>
                </param>
                <param name="lpInfo">
                    <type>uint*</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
                <param name="pbsmInfo">
                    <type>BSMINFO*</type>
                </param>
            </function>
            <function name="BroadcastSystemMessageA" access="public" lib="user32" static="true">
                <type native="long">int</type>
                <param name="flags">
                    <type>uint</type>
                </param>
                <param name="lpInfo">
                    <type>uint*</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="BroadcastSystemMessageW" access="public" lib="user32" static="true">
                <type native="long">int</type>
                <param name="flags">
                    <type>uint</type>
                </param>
                <param name="lpInfo">
                    <type>uint*</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="RegisterDeviceNotificationA" access="public" lib="user32" static="true">
                <type native="HDEVNOTIFY">void*</type>
                <param name="hRecipient">
                    <type>IntPtr</type>
                </param>
                <param name="NotificationFilter">
                    <type>void*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="RegisterDeviceNotificationW" access="public" lib="user32" static="true">
                <type native="HDEVNOTIFY">void*</type>
                <param name="hRecipient">
                    <type>IntPtr</type>
                </param>
                <param name="NotificationFilter">
                    <type>void*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="UnregisterDeviceNotification" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="Handle">
                    <type>void*</type>
                </param>
            </function>
            <function name="RegisterPowerSettingNotification" access="public" lib="user32" setlasterror="true" static="true">
                <type native="HPOWERNOTIFY">void*</type>
                <param name="hRecipient">
                    <type>IntPtr</type>
                </param>
                <param name="PowerSettingGuid">
                    <type>Guid*</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="UnregisterPowerSettingNotification" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="Handle">
                    <type>void*</type>
                </param>
            </function>
            <function name="RegisterSuspendResumeNotification" access="public" lib="user32" setlasterror="true" static="true">
                <type native="HPOWERNOTIFY">void*</type>
                <param name="hRecipient">
                    <type>IntPtr</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="UnregisterSuspendResumeNotification" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="Handle">
                    <type>void*</type>
                </param>
            </function>
            <function name="PostMessageA" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="PostMessageW" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="PostThreadMessageA" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="idThread">
                    <type>uint</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="PostThreadMessageW" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="idThread">
                    <type>uint</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="AttachThreadInput" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="idAttach">
                    <type>uint</type>
                </param>
                <param name="idAttachTo">
                    <type>uint</type>
                </param>
                <param name="fAttach">
                    <type>int</type>
                </param>
            </function>
            <function name="ReplyMessage" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="lResult">
                    <type>nint</type>
                </param>
            </function>
            <function name="WaitMessage" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="WaitForInputIdle" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hProcess">
                    <type>IntPtr</type>
                </param>
                <param name="dwMilliseconds">
                    <type>uint</type>
                </param>
            </function>
            <function name="DefWindowProcA" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DefWindowProcW" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="PostQuitMessage" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
                <param name="nExitCode">
                    <type>int</type>
                </param>
            </function>
            <function name="CallWindowProcA" access="public" lib="user32" static="true">
                <type native="LRESULT">nint</type>
                <param name="lpPrevWndFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="CallWindowProcW" access="public" lib="user32" static="true">
                <type native="LRESULT">nint</type>
                <param name="lpPrevWndFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="InSendMessage" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="InSendMessageEx" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="lpReserved">
                    <type>void*</type>
                </param>
            </function>
            <function name="GetDoubleClickTime" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
            </function>
            <function name="SetDoubleClickTime" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
            </function>
            <function name="RegisterClassA" access="public" lib="user32" static="true">
                <type native="ATOM">ushort</type>
                <param name="lpWndClass">
                    <type>WNDCLASSA*</type>
                </param>
            </function>
            <function name="RegisterClassW" access="public" lib="user32" static="true">
                <type native="ATOM">ushort</type>
                <param name="lpWndClass">
                    <type>WNDCLASSW*</type>
                </param>
            </function>
            <function name="UnregisterClassA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpClassName">
                    <type>sbyte*</type>
                </param>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="UnregisterClassW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpClassName">
                    <type>ushort*</type>
                </param>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetClassInfoA" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpClassName">
                    <type>sbyte*</type>
                </param>
                <param name="lpWndClass">
                    <type>WNDCLASSA*</type>
                </param>
            </function>
            <function name="GetClassInfoW" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpClassName">
                    <type>ushort*</type>
                </param>
                <param name="lpWndClass">
                    <type>WNDCLASSW*</type>
                </param>
            </function>
            <function name="RegisterClassExA" access="public" lib="user32" static="true">
                <type native="ATOM">ushort</type>
                <param name="param0">
                    <type>WNDCLASSEXA*</type>
                </param>
            </function>
            <function name="RegisterClassExW" access="public" lib="user32" static="true">
                <type native="ATOM">ushort</type>
                <param name="param0">
                    <type>WNDCLASSEXW*</type>
                </param>
            </function>
            <function name="GetClassInfoExA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpszClass">
                    <type>sbyte*</type>
                </param>
                <param name="lpwcx">
                    <type>WNDCLASSEXA*</type>
                </param>
            </function>
            <function name="GetClassInfoExW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpszClass">
                    <type>ushort*</type>
                </param>
                <param name="lpwcx">
                    <type>WNDCLASSEXW*</type>
                </param>
            </function>
            <function name="CreateWindowExA" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="dwExStyle">
                    <type>uint</type>
                </param>
                <param name="lpClassName">
                    <type>sbyte*</type>
                </param>
                <param name="lpWindowName">
                    <type>sbyte*</type>
                </param>
                <param name="dwStyle">
                    <type>uint</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpParam">
                    <type>void*</type>
                </param>
            </function>
            <function name="CreateWindowExW" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="dwExStyle">
                    <type>uint</type>
                </param>
                <param name="lpClassName">
                    <type>ushort*</type>
                </param>
                <param name="lpWindowName">
                    <type>ushort*</type>
                </param>
                <param name="dwStyle">
                    <type>uint</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpParam">
                    <type>void*</type>
                </param>
            </function>
            <function name="IsWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="IsMenu" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="IsChild" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="DestroyWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="ShowWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nCmdShow">
                    <type>int</type>
                </param>
            </function>
            <function name="AnimateWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="dwTime">
                    <type>uint</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="UpdateLayeredWindow" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hdcDst">
                    <type>IntPtr</type>
                </param>
                <param name="pptDst">
                    <type>POINT*</type>
                </param>
                <param name="psize">
                    <type>SIZE*</type>
                </param>
                <param name="hdcSrc">
                    <type>IntPtr</type>
                </param>
                <param name="pptSrc">
                    <type>POINT*</type>
                </param>
                <param name="crKey">
                    <type>uint</type>
                </param>
                <param name="pblend">
                    <type>BLENDFUNCTION*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="UpdateLayeredWindowIndirect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="pULWInfo">
                    <type>UPDATELAYEREDWINDOWINFO*</type>
                </param>
            </function>
            <function name="GetLayeredWindowAttributes" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pcrKey">
                    <type>uint*</type>
                </param>
                <param name="pbAlpha">
                    <type>byte*</type>
                </param>
                <param name="pdwFlags">
                    <type>uint*</type>
                </param>
            </function>
            <function name="PrintWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="hdcBlt">
                    <type>IntPtr</type>
                </param>
                <param name="nFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetLayeredWindowAttributes" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="crKey">
                    <type>uint</type>
                </param>
                <param name="bAlpha">
                    <type>byte</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="ShowWindowAsync" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nCmdShow">
                    <type>int</type>
                </param>
            </function>
            <function name="FlashWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="bInvert">
                    <type>int</type>
                </param>
            </function>
            <function name="FlashWindowEx" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="pfwi">
                    <type>FLASHWINFO*</type>
                </param>
            </function>
            <function name="ShowOwnedPopups" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="fShow">
                    <type>int</type>
                </param>
            </function>
            <function name="OpenIcon" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CloseWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="MoveWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
                <param name="bRepaint">
                    <type>int</type>
                </param>
            </function>
            <function name="SetWindowPos" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hWndInsertAfter">
                    <type>IntPtr</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="cx">
                    <type>int</type>
                </param>
                <param name="cy">
                    <type>int</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetWindowPlacement" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpwndpl">
                    <type>WINDOWPLACEMENT*</type>
                </param>
            </function>
            <function name="SetWindowPlacement" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpwndpl">
                    <type>WINDOWPLACEMENT*</type>
                </param>
            </function>
            <function name="GetWindowDisplayAffinity" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="pdwAffinity">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetWindowDisplayAffinity" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="dwAffinity">
                    <type>uint</type>
                </param>
            </function>
            <function name="BeginDeferWindowPos" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HDWP">IntPtr</type>
                <param name="nNumWindows">
                    <type>int</type>
                </param>
            </function>
            <function name="DeferWindowPos" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HDWP">IntPtr</type>
                <param name="hWinPosInfo">
                    <type>IntPtr</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hWndInsertAfter">
                    <type>IntPtr</type>
                </param>
                <param name="x">
                    <type>int</type>
                </param>
                <param name="y">
                    <type>int</type>
                </param>
                <param name="cx">
                    <type>int</type>
                </param>
                <param name="cy">
                    <type>int</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="EndDeferWindowPos" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWinPosInfo">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="IsWindowVisible" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="IsIconic" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="AnyPopup" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="BringWindowToTop" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="IsZoomed" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CreateDialogParamA" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpTemplateName">
                    <type>sbyte*</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpDialogFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="dwInitParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="CreateDialogParamW" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpTemplateName">
                    <type>ushort*</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpDialogFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="dwInitParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="CreateDialogIndirectParamA" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpTemplate">
                    <type>DLGTEMPLATE*</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpDialogFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="dwInitParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="CreateDialogIndirectParamW" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpTemplate">
                    <type>DLGTEMPLATE*</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpDialogFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="dwInitParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DialogBoxParamA" access="public" lib="user32" static="true">
                <type native="INT_PTR">nint</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpTemplateName">
                    <type>sbyte*</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpDialogFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="dwInitParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DialogBoxParamW" access="public" lib="user32" static="true">
                <type native="INT_PTR">nint</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpTemplateName">
                    <type>ushort*</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpDialogFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="dwInitParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DialogBoxIndirectParamA" access="public" lib="user32" static="true">
                <type native="INT_PTR">nint</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="hDialogTemplate">
                    <type>DLGTEMPLATE*</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpDialogFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="dwInitParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DialogBoxIndirectParamW" access="public" lib="user32" static="true">
                <type native="INT_PTR">nint</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="hDialogTemplate">
                    <type>DLGTEMPLATE*</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpDialogFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                </param>
                <param name="dwInitParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="EndDialog" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nResult">
                    <type>nint</type>
                </param>
            </function>
            <function name="GetDlgItem" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
            </function>
            <function name="SetDlgItemInt" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
                <param name="uValue">
                    <type>uint</type>
                </param>
                <param name="bSigned">
                    <type>int</type>
                </param>
            </function>
            <function name="GetDlgItemInt" access="public" lib="user32" setlasterror="true" static="true">
                <type native="UINT">uint</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
                <param name="lpTranslated">
                    <type>int*</type>
                </param>
                <param name="bSigned">
                    <type>int</type>
                </param>
            </function>
            <function name="SetDlgItemTextA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetDlgItemTextW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="GetDlgItemTextA" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="cchMax">
                    <type>int</type>
                </param>
            </function>
            <function name="GetDlgItemTextW" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="cchMax">
                    <type>int</type>
                </param>
            </function>
            <function name="CheckDlgButton" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDButton">
                    <type>int</type>
                </param>
                <param name="uCheck">
                    <type>uint</type>
                </param>
            </function>
            <function name="CheckRadioButton" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDFirstButton">
                    <type>int</type>
                </param>
                <param name="nIDLastButton">
                    <type>int</type>
                </param>
                <param name="nIDCheckButton">
                    <type>int</type>
                </param>
            </function>
            <function name="IsDlgButtonChecked" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDButton">
                    <type>int</type>
                </param>
            </function>
            <function name="SendDlgItemMessageA" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="SendDlgItemMessageW" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="nIDDlgItem">
                    <type>int</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="GetNextDlgGroupItem" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="hCtl">
                    <type>IntPtr</type>
                </param>
                <param name="bPrevious">
                    <type>int</type>
                </param>
            </function>
            <function name="GetNextDlgTabItem" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="hCtl">
                    <type>IntPtr</type>
                </param>
                <param name="bPrevious">
                    <type>int</type>
                </param>
            </function>
            <function name="GetDlgCtrlID" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetDialogBaseUnits" access="public" lib="user32" static="true" unsafe="true">
                <type native="long">int</type>
            </function>
            <function name="DefDlgProcA" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DefDlgProcW" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="Msg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="SetDialogControlDpiChangeBehavior" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="mask">
                    <type>DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS</type>
                </param>
                <param name="values">
                    <type>DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS</type>
                </param>
            </function>
            <function name="GetDialogControlDpiChangeBehavior" access="public" lib="user32" static="true" unsafe="true">
                <type>DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetDialogDpiChangeBehavior" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="mask">
                    <type>DIALOG_DPI_CHANGE_BEHAVIORS</type>
                </param>
                <param name="values">
                    <type>DIALOG_DPI_CHANGE_BEHAVIORS</type>
                </param>
            </function>
            <function name="GetDialogDpiChangeBehavior" access="public" lib="user32" static="true" unsafe="true">
                <type>DIALOG_DPI_CHANGE_BEHAVIORS</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CallMsgFilterA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
                <param name="nCode">
                    <type>int</type>
                </param>
            </function>
            <function name="CallMsgFilterW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
                <param name="nCode">
                    <type>int</type>
                </param>
            </function>
            <function name="OpenClipboard" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWndNewOwner">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CloseClipboard" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="GetClipboardSequenceNumber" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
            </function>
            <function name="GetClipboardOwner" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="SetClipboardViewer" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWndNewViewer">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetClipboardViewer" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="ChangeClipboardChain" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWndRemove">
                    <type>IntPtr</type>
                </param>
                <param name="hWndNewNext">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetClipboardData" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HANDLE">IntPtr</type>
                <param name="uFormat">
                    <type>uint</type>
                </param>
                <param name="hMem">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetClipboardData" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HANDLE">IntPtr</type>
                <param name="uFormat">
                    <type>uint</type>
                </param>
            </function>
            <function name="RegisterClipboardFormatA" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="lpszFormat">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="RegisterClipboardFormatW" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="lpszFormat">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="CountClipboardFormats" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type>int</type>
            </function>
            <function name="EnumClipboardFormats" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="format">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetClipboardFormatNameA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="format">
                    <type>uint</type>
                </param>
                <param name="lpszFormatName">
                    <type>sbyte*</type>
                </param>
                <param name="cchMaxCount">
                    <type>int</type>
                </param>
            </function>
            <function name="GetClipboardFormatNameW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="format">
                    <type>uint</type>
                </param>
                <param name="lpszFormatName">
                    <type>ushort*</type>
                </param>
                <param name="cchMaxCount">
                    <type>int</type>
                </param>
            </function>
            <function name="EmptyClipboard" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="IsClipboardFormatAvailable" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="format">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetPriorityClipboardFormat" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="paFormatPriorityList">
                    <type>uint*</type>
                </param>
                <param name="cFormats">
                    <type>int</type>
                </param>
            </function>
            <function name="GetOpenClipboardWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="AddClipboardFormatListener" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="RemoveClipboardFormatListener" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetUpdatedClipboardFormats" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpuiFormats">
                    <type>uint*</type>
                </param>
                <param name="cFormats">
                    <type>uint</type>
                </param>
                <param name="pcFormatsOut">
                    <type>uint*</type>
                </param>
            </function>
            <function name="CharToOemA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="pSrc">
                    <type>sbyte*</type>
                </param>
                <param name="pDst">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="CharToOemW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="pSrc">
                    <type>ushort*</type>
                </param>
                <param name="pDst">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="OemToCharA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="pSrc">
                    <type>sbyte*</type>
                </param>
                <param name="pDst">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="OemToCharW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="pSrc">
                    <type>sbyte*</type>
                </param>
                <param name="pDst">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="CharToOemBuffA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpszSrc">
                    <type>sbyte*</type>
                </param>
                <param name="lpszDst">
                    <type>sbyte*</type>
                </param>
                <param name="cchDstLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="CharToOemBuffW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpszSrc">
                    <type>ushort*</type>
                </param>
                <param name="lpszDst">
                    <type>sbyte*</type>
                </param>
                <param name="cchDstLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="OemToCharBuffA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpszSrc">
                    <type>sbyte*</type>
                </param>
                <param name="lpszDst">
                    <type>sbyte*</type>
                </param>
                <param name="cchDstLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="OemToCharBuffW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lpszSrc">
                    <type>sbyte*</type>
                </param>
                <param name="lpszDst">
                    <type>ushort*</type>
                </param>
                <param name="cchDstLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="CharUpperA" access="public" lib="user32" static="true">
                <type native="LPSTR">sbyte*</type>
                <param name="lpsz">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="CharUpperW" access="public" lib="user32" static="true">
                <type native="LPWSTR">ushort*</type>
                <param name="lpsz">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="CharUpperBuffA" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="lpsz">
                    <type>sbyte*</type>
                </param>
                <param name="cchLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="CharUpperBuffW" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="lpsz">
                    <type>ushort*</type>
                </param>
                <param name="cchLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="CharLowerA" access="public" lib="user32" static="true">
                <type native="LPSTR">sbyte*</type>
                <param name="lpsz">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="CharLowerW" access="public" lib="user32" static="true">
                <type native="LPWSTR">ushort*</type>
                <param name="lpsz">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="CharLowerBuffA" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="lpsz">
                    <type>sbyte*</type>
                </param>
                <param name="cchLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="CharLowerBuffW" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="lpsz">
                    <type>ushort*</type>
                </param>
                <param name="cchLength">
                    <type>uint</type>
                </param>
            </function>
            <function name="CharNextA" access="public" lib="user32" static="true">
                <type native="LPSTR">sbyte*</type>
                <param name="lpsz">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="CharNextW" access="public" lib="user32" static="true">
                <type native="LPWSTR">ushort*</type>
                <param name="lpsz">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="CharPrevA" access="public" lib="user32" static="true">
                <type native="LPSTR">sbyte*</type>
                <param name="lpszStart">
                    <type>sbyte*</type>
                </param>
                <param name="lpszCurrent">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="CharPrevW" access="public" lib="user32" static="true">
                <type native="LPWSTR">ushort*</type>
                <param name="lpszStart">
                    <type>ushort*</type>
                </param>
                <param name="lpszCurrent">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="CharNextExA" access="public" lib="user32" static="true">
                <type native="LPSTR">sbyte*</type>
                <param name="CodePage">
                    <type>ushort</type>
                </param>
                <param name="lpCurrentChar">
                    <type>sbyte*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="CharPrevExA" access="public" lib="user32" static="true">
                <type native="LPSTR">sbyte*</type>
                <param name="CodePage">
                    <type>ushort</type>
                </param>
                <param name="lpStart">
                    <type>sbyte*</type>
                </param>
                <param name="lpCurrentChar">
                    <type>sbyte*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="IsCharAlphaA" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="ch">
                    <type>sbyte</type>
                </param>
            </function>
            <function name="IsCharAlphaW" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="ch">
                    <type>ushort</type>
                </param>
            </function>
            <function name="IsCharAlphaNumericA" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="ch">
                    <type>sbyte</type>
                </param>
            </function>
            <function name="IsCharAlphaNumericW" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="ch">
                    <type>ushort</type>
                </param>
            </function>
            <function name="IsCharUpperA" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="ch">
                    <type>sbyte</type>
                </param>
            </function>
            <function name="IsCharUpperW" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="ch">
                    <type>ushort</type>
                </param>
            </function>
            <function name="IsCharLowerA" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="ch">
                    <type>sbyte</type>
                </param>
            </function>
            <function name="IsCharLowerW" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="ch">
                    <type>ushort</type>
                </param>
            </function>
            <function name="SetFocus" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetActiveWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="GetFocus" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="GetKBCodePage" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
            </function>
            <function name="GetKeyState" access="public" lib="user32" static="true" unsafe="true">
                <type native="SHORT">short</type>
                <param name="nVirtKey">
                    <type>int</type>
                </param>
            </function>
            <function name="GetAsyncKeyState" access="public" lib="user32" static="true" unsafe="true">
                <type native="SHORT">short</type>
                <param name="vKey">
                    <type>int</type>
                </param>
            </function>
            <function name="GetKeyboardState" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpKeyState">
                    <type>byte*</type>
                </param>
            </function>
            <function name="SetKeyboardState" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpKeyState">
                    <type>byte*</type>
                </param>
            </function>
            <function name="GetKeyNameTextA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="lParam">
                    <type>int</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="cchSize">
                    <type>int</type>
                </param>
            </function>
            <function name="GetKeyNameTextW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="lParam">
                    <type>int</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="cchSize">
                    <type>int</type>
                </param>
            </function>
            <function name="GetKeyboardType" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type>int</type>
                <param name="nTypeFlag">
                    <type>int</type>
                </param>
            </function>
            <function name="ToAscii" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="uVirtKey">
                    <type>uint</type>
                </param>
                <param name="uScanCode">
                    <type>uint</type>
                </param>
                <param name="lpKeyState">
                    <type>byte*</type>
                </param>
                <param name="lpChar">
                    <type>ushort*</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="ToAsciiEx" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="uVirtKey">
                    <type>uint</type>
                </param>
                <param name="uScanCode">
                    <type>uint</type>
                </param>
                <param name="lpKeyState">
                    <type>byte*</type>
                </param>
                <param name="lpChar">
                    <type>ushort*</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="dwhkl">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="ToUnicode" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="wVirtKey">
                    <type>uint</type>
                </param>
                <param name="wScanCode">
                    <type>uint</type>
                </param>
                <param name="lpKeyState">
                    <type>byte*</type>
                </param>
                <param name="pwszBuff">
                    <type>ushort*</type>
                </param>
                <param name="cchBuff">
                    <type>int</type>
                </param>
                <param name="wFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="OemKeyScan" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="wOemChar">
                    <type>ushort</type>
                </param>
            </function>
            <function name="VkKeyScanA" access="public" lib="user32" static="true" unsafe="true">
                <type native="SHORT">short</type>
                <param name="ch">
                    <type>sbyte</type>
                </param>
            </function>
            <function name="VkKeyScanW" access="public" lib="user32" static="true" unsafe="true">
                <type native="SHORT">short</type>
                <param name="ch">
                    <type>ushort</type>
                </param>
            </function>
            <function name="VkKeyScanExA" access="public" lib="user32" static="true" unsafe="true">
                <type native="SHORT">short</type>
                <param name="ch">
                    <type>sbyte</type>
                </param>
                <param name="dwhkl">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="VkKeyScanExW" access="public" lib="user32" static="true" unsafe="true">
                <type native="SHORT">short</type>
                <param name="ch">
                    <type>ushort</type>
                </param>
                <param name="dwhkl">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="keybd_event" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
                <param name="bVk">
                    <type>byte</type>
                </param>
                <param name="bScan">
                    <type>byte</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dwExtraInfo">
                    <type>nuint</type>
                </param>
            </function>
            <function name="mouse_event" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dx">
                    <type>uint</type>
                </param>
                <param name="dy">
                    <type>uint</type>
                </param>
                <param name="dwData">
                    <type>uint</type>
                </param>
                <param name="dwExtraInfo">
                    <type>nuint</type>
                </param>
            </function>
            <function name="SendInput" access="public" lib="user32" setlasterror="true" static="true">
                <type native="UINT">uint</type>
                <param name="cInputs">
                    <type>uint</type>
                </param>
                <param name="pInputs">
                    <type>INPUT*</type>
                </param>
                <param name="cbSize">
                    <type>int</type>
                </param>
            </function>
            <function name="GetTouchInputInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hTouchInput">
                    <type>IntPtr</type>
                </param>
                <param name="cInputs">
                    <type>uint</type>
                </param>
                <param name="pInputs">
                    <type>TOUCHINPUT*</type>
                </param>
                <param name="cbSize">
                    <type>int</type>
                </param>
            </function>
            <function name="CloseTouchInputHandle" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hTouchInput">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="RegisterTouchWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="ulFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="UnregisterTouchWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="IsTouchWindow" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pulFlags">
                    <type>uint*</type>
                </param>
            </function>
            <function name="InitializeTouchInjection" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="maxCount">
                    <type>uint</type>
                </param>
                <param name="dwMode">
                    <type>uint</type>
                </param>
            </function>
            <function name="InjectTouchInput" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="count">
                    <type>uint</type>
                </param>
                <param name="contacts">
                    <type>POINTER_TOUCH_INFO*</type>
                </param>
            </function>
            <function name="GetPointerType" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="pointerType">
                    <type>uint*</type>
                </param>
            </function>
            <function name="GetPointerCursorId" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="cursorId">
                    <type>uint*</type>
                </param>
            </function>
            <function name="GetPointerInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="pointerInfo">
                    <type>POINTER_INFO*</type>
                </param>
            </function>
            <function name="GetPointerInfoHistory" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="entriesCount">
                    <type>uint*</type>
                </param>
                <param name="pointerInfo">
                    <type>POINTER_INFO*</type>
                </param>
            </function>
            <function name="GetPointerFrameInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="pointerCount">
                    <type>uint*</type>
                </param>
                <param name="pointerInfo">
                    <type>POINTER_INFO*</type>
                </param>
            </function>
            <function name="GetPointerFrameInfoHistory" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="entriesCount">
                    <type>uint*</type>
                </param>
                <param name="pointerCount">
                    <type>uint*</type>
                </param>
                <param name="pointerInfo">
                    <type>POINTER_INFO*</type>
                </param>
            </function>
            <function name="GetPointerTouchInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="touchInfo">
                    <type>POINTER_TOUCH_INFO*</type>
                </param>
            </function>
            <function name="GetPointerTouchInfoHistory" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="entriesCount">
                    <type>uint*</type>
                </param>
                <param name="touchInfo">
                    <type>POINTER_TOUCH_INFO*</type>
                </param>
            </function>
            <function name="GetPointerFrameTouchInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="pointerCount">
                    <type>uint*</type>
                </param>
                <param name="touchInfo">
                    <type>POINTER_TOUCH_INFO*</type>
                </param>
            </function>
            <function name="GetPointerFrameTouchInfoHistory" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="entriesCount">
                    <type>uint*</type>
                </param>
                <param name="pointerCount">
                    <type>uint*</type>
                </param>
                <param name="touchInfo">
                    <type>POINTER_TOUCH_INFO*</type>
                </param>
            </function>
            <function name="GetPointerPenInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="penInfo">
                    <type>POINTER_PEN_INFO*</type>
                </param>
            </function>
            <function name="GetPointerPenInfoHistory" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="entriesCount">
                    <type>uint*</type>
                </param>
                <param name="penInfo">
                    <type>POINTER_PEN_INFO*</type>
                </param>
            </function>
            <function name="GetPointerFramePenInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="pointerCount">
                    <type>uint*</type>
                </param>
                <param name="penInfo">
                    <type>POINTER_PEN_INFO*</type>
                </param>
            </function>
            <function name="GetPointerFramePenInfoHistory" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="entriesCount">
                    <type>uint*</type>
                </param>
                <param name="pointerCount">
                    <type>uint*</type>
                </param>
                <param name="penInfo">
                    <type>POINTER_PEN_INFO*</type>
                </param>
            </function>
            <function name="SkipPointerFrameMessages" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
            </function>
            <function name="RegisterPointerInputTarget" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pointerType">
                    <type>uint</type>
                </param>
            </function>
            <function name="UnregisterPointerInputTarget" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pointerType">
                    <type>uint</type>
                </param>
            </function>
            <function name="RegisterPointerInputTargetEx" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pointerType">
                    <type>uint</type>
                </param>
                <param name="fObserve">
                    <type>int</type>
                </param>
            </function>
            <function name="UnregisterPointerInputTargetEx" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pointerType">
                    <type>uint</type>
                </param>
            </function>
            <function name="CreateSyntheticPointerDevice" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HSYNTHETICPOINTERDEVICE">IntPtr</type>
                <param name="pointerType">
                    <type>uint</type>
                </param>
                <param name="maxCount">
                    <type>uint</type>
                </param>
                <param name="mode">
                    <type>POINTER_FEEDBACK_MODE</type>
                </param>
            </function>
            <function name="InjectSyntheticPointerInput" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="device">
                    <type>IntPtr</type>
                </param>
                <param name="pointerInfo">
                    <type>POINTER_TYPE_INFO*</type>
                </param>
                <param name="count">
                    <type>uint</type>
                </param>
            </function>
            <function name="DestroySyntheticPointerDevice" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
                <param name="device">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="EnableMouseInPointer" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="fEnable">
                    <type>int</type>
                </param>
            </function>
            <function name="IsMouseInPointerEnabled" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="EnableMouseInPointerForThread" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="RegisterTouchHitTestingWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="value">
                    <type>uint</type>
                </param>
            </function>
            <function name="EvaluateProximityToRect" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="controlBoundingBox">
                    <type>RECT*</type>
                </param>
                <param name="pHitTestingInput">
                    <type>TOUCH_HIT_TESTING_INPUT*</type>
                </param>
                <param name="pProximityEval">
                    <type>TOUCH_HIT_TESTING_PROXIMITY_EVALUATION*</type>
                </param>
            </function>
            <function name="EvaluateProximityToPolygon" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="numVertices">
                    <type>uint</type>
                </param>
                <param name="controlPolygon">
                    <type>POINT*</type>
                </param>
                <param name="pHitTestingInput">
                    <type>TOUCH_HIT_TESTING_INPUT*</type>
                </param>
                <param name="pProximityEval">
                    <type>TOUCH_HIT_TESTING_PROXIMITY_EVALUATION*</type>
                </param>
            </function>
            <function name="PackTouchHitTestingProximityEvaluation" access="public" lib="user32" setlasterror="true" static="true">
                <type native="LRESULT">nint</type>
                <param name="pHitTestingInput">
                    <type>TOUCH_HIT_TESTING_INPUT*</type>
                </param>
                <param name="pProximityEval">
                    <type>TOUCH_HIT_TESTING_PROXIMITY_EVALUATION*</type>
                </param>
            </function>
            <function name="GetWindowFeedbackSetting" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="feedback">
                    <type>FEEDBACK_TYPE</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="pSize">
                    <type>uint*</type>
                </param>
                <param name="config">
                    <type>void*</type>
                </param>
            </function>
            <function name="SetWindowFeedbackSetting" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="feedback">
                    <type>FEEDBACK_TYPE</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="size">
                    <type>uint</type>
                </param>
                <param name="configuration">
                    <type>void*</type>
                </param>
            </function>
            <function name="GetPointerInputTransform" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="historyCount">
                    <type>uint</type>
                </param>
                <param name="inputTransform">
                    <type>INPUT_TRANSFORM*</type>
                </param>
            </function>
            <function name="GetLastInputInfo" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="plii">
                    <type>LASTINPUTINFO*</type>
                </param>
            </function>
            <function name="MapVirtualKeyA" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="uCode">
                    <type>uint</type>
                </param>
                <param name="uMapType">
                    <type>uint</type>
                </param>
            </function>
            <function name="MapVirtualKeyW" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="uCode">
                    <type>uint</type>
                </param>
                <param name="uMapType">
                    <type>uint</type>
                </param>
            </function>
            <function name="MapVirtualKeyExA" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="uCode">
                    <type>uint</type>
                </param>
                <param name="uMapType">
                    <type>uint</type>
                </param>
                <param name="dwhkl">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="MapVirtualKeyExW" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="uCode">
                    <type>uint</type>
                </param>
                <param name="uMapType">
                    <type>uint</type>
                </param>
                <param name="dwhkl">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetInputState" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="GetQueueStatus" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetCapture" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="SetCapture" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="ReleaseCapture" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="MsgWaitForMultipleObjects" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="nCount">
                    <type>uint</type>
                </param>
                <param name="pHandles">
                    <type>IntPtr*</type>
                </param>
                <param name="fWaitAll">
                    <type>int</type>
                </param>
                <param name="dwMilliseconds">
                    <type>uint</type>
                </param>
                <param name="dwWakeMask">
                    <type>uint</type>
                </param>
            </function>
            <function name="MsgWaitForMultipleObjectsEx" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="nCount">
                    <type>uint</type>
                </param>
                <param name="pHandles">
                    <type>IntPtr*</type>
                </param>
                <param name="dwMilliseconds">
                    <type>uint</type>
                </param>
                <param name="dwWakeMask">
                    <type>uint</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetTimer" access="public" lib="user32" setlasterror="true" static="true">
                <type native="UINT_PTR">nuint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIDEvent">
                    <type>nuint</type>
                </param>
                <param name="uElapse">
                    <type>uint</type>
                </param>
                <param name="lpTimerFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, uint, void&gt;</type>
                </param>
            </function>
            <function name="SetCoalescableTimer" access="public" lib="user32" setlasterror="true" static="true">
                <type native="UINT_PTR">nuint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIDEvent">
                    <type>nuint</type>
                </param>
                <param name="uElapse">
                    <type>uint</type>
                </param>
                <param name="lpTimerFunc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, nuint, uint, void&gt;</type>
                </param>
                <param name="uToleranceDelay">
                    <type>uint</type>
                </param>
            </function>
            <function name="KillTimer" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="uIDEvent">
                    <type>nuint</type>
                </param>
            </function>
            <function name="IsWindowUnicode" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="EnableWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="bEnable">
                    <type>int</type>
                </param>
            </function>
            <function name="IsWindowEnabled" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="LoadAcceleratorsA" access="public" lib="user32" static="true">
                <type native="HACCEL">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpTableName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="LoadAcceleratorsW" access="public" lib="user32" static="true">
                <type native="HACCEL">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpTableName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="CreateAcceleratorTableA" access="public" lib="user32" static="true">
                <type native="HACCEL">IntPtr</type>
                <param name="paccel">
                    <type>ACCEL*</type>
                </param>
                <param name="cAccel">
                    <type>int</type>
                </param>
            </function>
            <function name="CreateAcceleratorTableW" access="public" lib="user32" static="true">
                <type native="HACCEL">IntPtr</type>
                <param name="paccel">
                    <type>ACCEL*</type>
                </param>
                <param name="cAccel">
                    <type>int</type>
                </param>
            </function>
            <function name="DestroyAcceleratorTable" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hAccel">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CopyAcceleratorTableA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hAccelSrc">
                    <type>IntPtr</type>
                </param>
                <param name="lpAccelDst">
                    <type>ACCEL*</type>
                </param>
                <param name="cAccelEntries">
                    <type>int</type>
                </param>
            </function>
            <function name="CopyAcceleratorTableW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hAccelSrc">
                    <type>IntPtr</type>
                </param>
                <param name="lpAccelDst">
                    <type>ACCEL*</type>
                </param>
                <param name="cAccelEntries">
                    <type>int</type>
                </param>
            </function>
            <function name="TranslateAcceleratorA" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hAccTable">
                    <type>IntPtr</type>
                </param>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
            </function>
            <function name="TranslateAcceleratorW" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hAccTable">
                    <type>IntPtr</type>
                </param>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
            </function>
            <function name="GetSystemMetrics" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type>int</type>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="GetSystemMetricsForDpi" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type>int</type>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="dpi">
                    <type>uint</type>
                </param>
            </function>
            <function name="LoadMenuA" access="public" lib="user32" static="true">
                <type native="HMENU">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpMenuName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="LoadMenuW" access="public" lib="user32" static="true">
                <type native="HMENU">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpMenuName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="LoadMenuIndirectA" access="public" lib="user32" static="true">
                <type native="HMENU">IntPtr</type>
                <param name="lpMenuTemplate">
                    <type>void*</type>
                </param>
            </function>
            <function name="LoadMenuIndirectW" access="public" lib="user32" static="true">
                <type native="HMENU">IntPtr</type>
                <param name="lpMenuTemplate">
                    <type>void*</type>
                </param>
            </function>
            <function name="GetMenu" access="public" lib="user32" static="true" unsafe="true">
                <type native="HMENU">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetMenu" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="ChangeMenuA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="cmd">
                    <type>uint</type>
                </param>
                <param name="lpszNewItem">
                    <type>sbyte*</type>
                </param>
                <param name="cmdInsert">
                    <type>uint</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="ChangeMenuW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="cmd">
                    <type>uint</type>
                </param>
                <param name="lpszNewItem">
                    <type>ushort*</type>
                </param>
                <param name="cmdInsert">
                    <type>uint</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="HiliteMenuItem" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uIDHiliteItem">
                    <type>uint</type>
                </param>
                <param name="uHilite">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetMenuStringA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uIDItem">
                    <type>uint</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="cchMax">
                    <type>int</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetMenuStringW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uIDItem">
                    <type>uint</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="cchMax">
                    <type>int</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetMenuState" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uId">
                    <type>uint</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="DrawMenuBar" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetSystemMenu" access="public" lib="user32" static="true" unsafe="true">
                <type native="HMENU">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="bRevert">
                    <type>int</type>
                </param>
            </function>
            <function name="CreateMenu" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HMENU">IntPtr</type>
            </function>
            <function name="CreatePopupMenu" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HMENU">IntPtr</type>
            </function>
            <function name="DestroyMenu" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CheckMenuItem" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uIDCheckItem">
                    <type>uint</type>
                </param>
                <param name="uCheck">
                    <type>uint</type>
                </param>
            </function>
            <function name="EnableMenuItem" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uIDEnableItem">
                    <type>uint</type>
                </param>
                <param name="uEnable">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetSubMenu" access="public" lib="user32" static="true" unsafe="true">
                <type native="HMENU">IntPtr</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="nPos">
                    <type>int</type>
                </param>
            </function>
            <function name="GetMenuItemID" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="nPos">
                    <type>int</type>
                </param>
            </function>
            <function name="GetMenuItemCount" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type>int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="InsertMenuA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uPosition">
                    <type>uint</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="uIDNewItem">
                    <type>nuint</type>
                </param>
                <param name="lpNewItem">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="InsertMenuW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uPosition">
                    <type>uint</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="uIDNewItem">
                    <type>nuint</type>
                </param>
                <param name="lpNewItem">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="AppendMenuA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="uIDNewItem">
                    <type>nuint</type>
                </param>
                <param name="lpNewItem">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="AppendMenuW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="uIDNewItem">
                    <type>nuint</type>
                </param>
                <param name="lpNewItem">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="ModifyMenuA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMnu">
                    <type>IntPtr</type>
                </param>
                <param name="uPosition">
                    <type>uint</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="uIDNewItem">
                    <type>nuint</type>
                </param>
                <param name="lpNewItem">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="ModifyMenuW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMnu">
                    <type>IntPtr</type>
                </param>
                <param name="uPosition">
                    <type>uint</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="uIDNewItem">
                    <type>nuint</type>
                </param>
                <param name="lpNewItem">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="RemoveMenu" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uPosition">
                    <type>uint</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="DeleteMenu" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uPosition">
                    <type>uint</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetMenuItemBitmaps" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uPosition">
                    <type>uint</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="hBitmapUnchecked">
                    <type>IntPtr</type>
                </param>
                <param name="hBitmapChecked">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetMenuCheckMarkDimensions" access="public" lib="user32" static="true" unsafe="true">
                <type native="LONG">int</type>
            </function>
            <function name="TrackPopupMenu" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="x">
                    <type>int</type>
                </param>
                <param name="y">
                    <type>int</type>
                </param>
                <param name="nReserved">
                    <type>int</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="prcRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="TrackPopupMenuEx" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
                <param name="x">
                    <type>int</type>
                </param>
                <param name="y">
                    <type>int</type>
                </param>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="lptpm">
                    <type>TPMPARAMS*</type>
                </param>
            </function>
            <function name="CalculatePopupWindowPosition" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="anchorPoint">
                    <type>POINT*</type>
                </param>
                <param name="windowSize">
                    <type>SIZE*</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
                <param name="excludeRect">
                    <type>RECT*</type>
                </param>
                <param name="popupWindowPosition">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="GetMenuInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="param0">
                    <type>IntPtr</type>
                </param>
                <param name="param1">
                    <type>MENUINFO*</type>
                </param>
            </function>
            <function name="SetMenuInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="param0">
                    <type>IntPtr</type>
                </param>
                <param name="param1">
                    <type>MENUINFO*</type>
                </param>
            </function>
            <function name="EndMenu" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="InsertMenuItemA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hmenu">
                    <type>IntPtr</type>
                </param>
                <param name="item">
                    <type>uint</type>
                </param>
                <param name="fByPosition">
                    <type>int</type>
                </param>
                <param name="lpmi">
                    <type>MENUITEMINFOA*</type>
                </param>
            </function>
            <function name="InsertMenuItemW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hmenu">
                    <type>IntPtr</type>
                </param>
                <param name="item">
                    <type>uint</type>
                </param>
                <param name="fByPosition">
                    <type>int</type>
                </param>
                <param name="lpmi">
                    <type>MENUITEMINFOW*</type>
                </param>
            </function>
            <function name="GetMenuItemInfoA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hmenu">
                    <type>IntPtr</type>
                </param>
                <param name="item">
                    <type>uint</type>
                </param>
                <param name="fByPosition">
                    <type>int</type>
                </param>
                <param name="lpmii">
                    <type>MENUITEMINFOA*</type>
                </param>
            </function>
            <function name="GetMenuItemInfoW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hmenu">
                    <type>IntPtr</type>
                </param>
                <param name="item">
                    <type>uint</type>
                </param>
                <param name="fByPosition">
                    <type>int</type>
                </param>
                <param name="lpmii">
                    <type>MENUITEMINFOW*</type>
                </param>
            </function>
            <function name="SetMenuItemInfoA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hmenu">
                    <type>IntPtr</type>
                </param>
                <param name="item">
                    <type>uint</type>
                </param>
                <param name="fByPositon">
                    <type>int</type>
                </param>
                <param name="lpmii">
                    <type>MENUITEMINFOA*</type>
                </param>
            </function>
            <function name="SetMenuItemInfoW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hmenu">
                    <type>IntPtr</type>
                </param>
                <param name="item">
                    <type>uint</type>
                </param>
                <param name="fByPositon">
                    <type>int</type>
                </param>
                <param name="lpmii">
                    <type>MENUITEMINFOW*</type>
                </param>
            </function>
            <function name="GetMenuDefaultItem" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="fByPos">
                    <type>uint</type>
                </param>
                <param name="gmdiFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetMenuDefaultItem" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uItem">
                    <type>uint</type>
                </param>
                <param name="fByPos">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetMenuItemRect" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="uItem">
                    <type>uint</type>
                </param>
                <param name="lprcItem">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="MenuItemFromPoint" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hMenu">
                    <type>IntPtr</type>
                </param>
                <param name="ptScreen">
                    <type>POINT</type>
                </param>
            </function>
            <function name="DragObject" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="hwndFrom">
                    <type>IntPtr</type>
                </param>
                <param name="fmt">
                    <type>uint</type>
                </param>
                <param name="data">
                    <type>nuint</type>
                </param>
                <param name="hcur">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="DragDetect" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pt">
                    <type>POINT</type>
                </param>
            </function>
            <function name="DrawIcon" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="hIcon">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="DrawTextA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="lpchText">
                    <type>sbyte*</type>
                </param>
                <param name="cchText">
                    <type>int</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="format">
                    <type>uint</type>
                </param>
            </function>
            <function name="DrawTextW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="lpchText">
                    <type>ushort*</type>
                </param>
                <param name="cchText">
                    <type>int</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="format">
                    <type>uint</type>
                </param>
            </function>
            <function name="DrawTextExA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="lpchText">
                    <type>sbyte*</type>
                </param>
                <param name="cchText">
                    <type>int</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="format">
                    <type>uint</type>
                </param>
                <param name="lpdtp">
                    <type>DRAWTEXTPARAMS*</type>
                </param>
            </function>
            <function name="DrawTextExW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="lpchText">
                    <type>ushort*</type>
                </param>
                <param name="cchText">
                    <type>int</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="format">
                    <type>uint</type>
                </param>
                <param name="lpdtp">
                    <type>DRAWTEXTPARAMS*</type>
                </param>
            </function>
            <function name="GrayStringA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="hBrush">
                    <type>IntPtr</type>
                </param>
                <param name="lpOutputFunc">
                    <type>delegate* unmanaged&lt;IntPtr, nint, int, int&gt;</type>
                </param>
                <param name="lpData">
                    <type>nint</type>
                </param>
                <param name="nCount">
                    <type>int</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
            </function>
            <function name="GrayStringW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="hBrush">
                    <type>IntPtr</type>
                </param>
                <param name="lpOutputFunc">
                    <type>delegate* unmanaged&lt;IntPtr, nint, int, int&gt;</type>
                </param>
                <param name="lpData">
                    <type>nint</type>
                </param>
                <param name="nCount">
                    <type>int</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
            </function>
            <function name="DrawStateA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="hbrFore">
                    <type>IntPtr</type>
                </param>
                <param name="qfnCallBack">
                    <type>delegate* unmanaged&lt;IntPtr, nint, nuint, int, int, int&gt;</type>
                </param>
                <param name="lData">
                    <type>nint</type>
                </param>
                <param name="wData">
                    <type>nuint</type>
                </param>
                <param name="x">
                    <type>int</type>
                </param>
                <param name="y">
                    <type>int</type>
                </param>
                <param name="cx">
                    <type>int</type>
                </param>
                <param name="cy">
                    <type>int</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="DrawStateW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="hbrFore">
                    <type>IntPtr</type>
                </param>
                <param name="qfnCallBack">
                    <type>delegate* unmanaged&lt;IntPtr, nint, nuint, int, int, int&gt;</type>
                </param>
                <param name="lData">
                    <type>nint</type>
                </param>
                <param name="wData">
                    <type>nuint</type>
                </param>
                <param name="x">
                    <type>int</type>
                </param>
                <param name="y">
                    <type>int</type>
                </param>
                <param name="cx">
                    <type>int</type>
                </param>
                <param name="cy">
                    <type>int</type>
                </param>
                <param name="uFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="TabbedTextOutA" access="public" lib="user32" static="true">
                <type native="LONG">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="x">
                    <type>int</type>
                </param>
                <param name="y">
                    <type>int</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="chCount">
                    <type>int</type>
                </param>
                <param name="nTabPositions">
                    <type>int</type>
                </param>
                <param name="lpnTabStopPositions">
                    <type>int*</type>
                </param>
                <param name="nTabOrigin">
                    <type>int</type>
                </param>
            </function>
            <function name="TabbedTextOutW" access="public" lib="user32" static="true">
                <type native="LONG">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="x">
                    <type>int</type>
                </param>
                <param name="y">
                    <type>int</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="chCount">
                    <type>int</type>
                </param>
                <param name="nTabPositions">
                    <type>int</type>
                </param>
                <param name="lpnTabStopPositions">
                    <type>int*</type>
                </param>
                <param name="nTabOrigin">
                    <type>int</type>
                </param>
            </function>
            <function name="GetTabbedTextExtentA" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="chCount">
                    <type>int</type>
                </param>
                <param name="nTabPositions">
                    <type>int</type>
                </param>
                <param name="lpnTabStopPositions">
                    <type>int*</type>
                </param>
            </function>
            <function name="GetTabbedTextExtentW" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="chCount">
                    <type>int</type>
                </param>
                <param name="nTabPositions">
                    <type>int</type>
                </param>
                <param name="lpnTabStopPositions">
                    <type>int*</type>
                </param>
            </function>
            <function name="UpdateWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetActiveWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetForegroundWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="PaintDesktop" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SwitchToThisWindow" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="fUnknown">
                    <type>int</type>
                </param>
            </function>
            <function name="SetForegroundWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="AllowSetForegroundWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="dwProcessId">
                    <type>uint</type>
                </param>
            </function>
            <function name="LockSetForegroundWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="uLockCode">
                    <type>uint</type>
                </param>
            </function>
            <function name="WindowFromDC" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetDC" access="public" lib="user32" static="true" unsafe="true">
                <type native="HDC">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetDCEx" access="public" lib="user32" static="true" unsafe="true">
                <type native="HDC">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hrgnClip">
                    <type>IntPtr</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetWindowDC" access="public" lib="user32" static="true" unsafe="true">
                <type native="HDC">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="ReleaseDC" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="BeginPaint" access="public" lib="user32" static="true">
                <type native="HDC">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpPaint">
                    <type>PAINTSTRUCT*</type>
                </param>
            </function>
            <function name="EndPaint" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpPaint">
                    <type>PAINTSTRUCT*</type>
                </param>
            </function>
            <function name="GetUpdateRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
                <param name="bErase">
                    <type>int</type>
                </param>
            </function>
            <function name="GetUpdateRgn" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hRgn">
                    <type>IntPtr</type>
                </param>
                <param name="bErase">
                    <type>int</type>
                </param>
            </function>
            <function name="SetWindowRgn" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hRgn">
                    <type>IntPtr</type>
                </param>
                <param name="bRedraw">
                    <type>int</type>
                </param>
            </function>
            <function name="GetWindowRgn" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hRgn">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetWindowRgnBox" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="ExcludeUpdateRgn" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="InvalidateRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
                <param name="bErase">
                    <type>int</type>
                </param>
            </function>
            <function name="ValidateRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="InvalidateRgn" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hRgn">
                    <type>IntPtr</type>
                </param>
                <param name="bErase">
                    <type>int</type>
                </param>
            </function>
            <function name="ValidateRgn" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hRgn">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="RedrawWindow" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lprcUpdate">
                    <type>RECT*</type>
                </param>
                <param name="hrgnUpdate">
                    <type>IntPtr</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="LockWindowUpdate" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWndLock">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="ScrollWindow" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="XAmount">
                    <type>int</type>
                </param>
                <param name="YAmount">
                    <type>int</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
                <param name="lpClipRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="ScrollDC" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="dx">
                    <type>int</type>
                </param>
                <param name="dy">
                    <type>int</type>
                </param>
                <param name="lprcScroll">
                    <type>RECT*</type>
                </param>
                <param name="lprcClip">
                    <type>RECT*</type>
                </param>
                <param name="hrgnUpdate">
                    <type>IntPtr</type>
                </param>
                <param name="lprcUpdate">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="ScrollWindowEx" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="dx">
                    <type>int</type>
                </param>
                <param name="dy">
                    <type>int</type>
                </param>
                <param name="prcScroll">
                    <type>RECT*</type>
                </param>
                <param name="prcClip">
                    <type>RECT*</type>
                </param>
                <param name="hrgnUpdate">
                    <type>IntPtr</type>
                </param>
                <param name="prcUpdate">
                    <type>RECT*</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetScrollPos" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nBar">
                    <type>int</type>
                </param>
                <param name="nPos">
                    <type>int</type>
                </param>
                <param name="bRedraw">
                    <type>int</type>
                </param>
            </function>
            <function name="GetScrollPos" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nBar">
                    <type>int</type>
                </param>
            </function>
            <function name="SetScrollRange" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nBar">
                    <type>int</type>
                </param>
                <param name="nMinPos">
                    <type>int</type>
                </param>
                <param name="nMaxPos">
                    <type>int</type>
                </param>
                <param name="bRedraw">
                    <type>int</type>
                </param>
            </function>
            <function name="GetScrollRange" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nBar">
                    <type>int</type>
                </param>
                <param name="lpMinPos">
                    <type>int*</type>
                </param>
                <param name="lpMaxPos">
                    <type>int*</type>
                </param>
            </function>
            <function name="ShowScrollBar" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="wBar">
                    <type>int</type>
                </param>
                <param name="bShow">
                    <type>int</type>
                </param>
            </function>
            <function name="EnableScrollBar" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="wSBflags">
                    <type>uint</type>
                </param>
                <param name="wArrows">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetPropA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="hData">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetPropW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="hData">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetPropA" access="public" lib="user32" static="true">
                <type native="HANDLE">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="GetPropW" access="public" lib="user32" static="true">
                <type native="HANDLE">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="RemovePropA" access="public" lib="user32" static="true">
                <type native="HANDLE">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="RemovePropW" access="public" lib="user32" static="true">
                <type native="HANDLE">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="EnumPropsExA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;IntPtr, sbyte*, IntPtr, nuint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="EnumPropsExW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;IntPtr, ushort*, IntPtr, nuint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="EnumPropsA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;IntPtr, sbyte*, IntPtr, int&gt;</type>
                </param>
            </function>
            <function name="EnumPropsW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;IntPtr, ushort*, IntPtr, int&gt;</type>
                </param>
            </function>
            <function name="SetWindowTextA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="SetWindowTextW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="GetWindowTextA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="nMaxCount">
                    <type>int</type>
                </param>
            </function>
            <function name="GetWindowTextW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="nMaxCount">
                    <type>int</type>
                </param>
            </function>
            <function name="GetWindowTextLengthA" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetWindowTextLengthW" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetClientRect" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="GetWindowRect" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="AdjustWindowRect" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
                <param name="dwStyle">
                    <type>uint</type>
                </param>
                <param name="bMenu">
                    <type>int</type>
                </param>
            </function>
            <function name="AdjustWindowRectEx" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
                <param name="dwStyle">
                    <type>uint</type>
                </param>
                <param name="bMenu">
                    <type>int</type>
                </param>
                <param name="dwExStyle">
                    <type>uint</type>
                </param>
            </function>
            <function name="AdjustWindowRectExForDpi" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
                <param name="dwStyle">
                    <type>uint</type>
                </param>
                <param name="bMenu">
                    <type>int</type>
                </param>
                <param name="dwExStyle">
                    <type>uint</type>
                </param>
                <param name="dpi">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetWindowContextHelpId" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="param0">
                    <type>IntPtr</type>
                </param>
                <param name="param1">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetWindowContextHelpId" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="param0">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetMenuContextHelpId" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="param0">
                    <type>IntPtr</type>
                </param>
                <param name="param1">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetMenuContextHelpId" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="param0">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="MessageBoxA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpText">
                    <type>sbyte*</type>
                </param>
                <param name="lpCaption">
                    <type>sbyte*</type>
                </param>
                <param name="uType">
                    <type>uint</type>
                </param>
            </function>
            <function name="MessageBoxW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpText">
                    <type>ushort*</type>
                </param>
                <param name="lpCaption">
                    <type>ushort*</type>
                </param>
                <param name="uType">
                    <type>uint</type>
                </param>
            </function>
            <function name="MessageBoxExA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpText">
                    <type>sbyte*</type>
                </param>
                <param name="lpCaption">
                    <type>sbyte*</type>
                </param>
                <param name="uType">
                    <type>uint</type>
                </param>
                <param name="wLanguageId">
                    <type>ushort</type>
                </param>
            </function>
            <function name="MessageBoxExW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpText">
                    <type>ushort*</type>
                </param>
                <param name="lpCaption">
                    <type>ushort*</type>
                </param>
                <param name="uType">
                    <type>uint</type>
                </param>
                <param name="wLanguageId">
                    <type>ushort</type>
                </param>
            </function>
            <function name="MessageBoxIndirectA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="lpmbp">
                    <type>MSGBOXPARAMSA*</type>
                </param>
            </function>
            <function name="MessageBoxIndirectW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="lpmbp">
                    <type>MSGBOXPARAMSW*</type>
                </param>
            </function>
            <function name="MessageBeep" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="uType">
                    <type>uint</type>
                </param>
            </function>
            <function name="ShowCursor" access="public" lib="user32" static="true" unsafe="true">
                <type>int</type>
                <param name="bShow">
                    <type>int</type>
                </param>
            </function>
            <function name="SetCursorPos" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
            </function>
            <function name="SetPhysicalCursorPos" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
            </function>
            <function name="SetCursor" access="public" lib="user32" static="true" unsafe="true">
                <type native="HCURSOR">IntPtr</type>
                <param name="hCursor">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetCursorPos" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="GetPhysicalCursorPos" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="GetClipCursor" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="GetCursor" access="public" lib="user32" static="true" unsafe="true">
                <type native="HCURSOR">IntPtr</type>
            </function>
            <function name="CreateCaret" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hBitmap">
                    <type>IntPtr</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
            </function>
            <function name="GetCaretBlinkTime" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="UINT">uint</type>
            </function>
            <function name="SetCaretBlinkTime" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="uMSeconds">
                    <type>uint</type>
                </param>
            </function>
            <function name="DestroyCaret" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="HideCaret" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="ShowCaret" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetCaretPos" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
            </function>
            <function name="GetCaretPos" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="ClientToScreen" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="ScreenToClient" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="LogicalToPhysicalPoint" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="PhysicalToLogicalPoint" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="LogicalToPhysicalPointForPerMonitorDPI" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="PhysicalToLogicalPointForPerMonitorDPI" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpPoint">
                    <type>POINT*</type>
                </param>
            </function>
            <function name="MapWindowPoints" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWndFrom">
                    <type>IntPtr</type>
                </param>
                <param name="hWndTo">
                    <type>IntPtr</type>
                </param>
                <param name="lpPoints">
                    <type>POINT*</type>
                </param>
                <param name="cPoints">
                    <type>uint</type>
                </param>
            </function>
            <function name="WindowFromPoint" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="Point">
                    <type>POINT</type>
                </param>
            </function>
            <function name="WindowFromPhysicalPoint" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="Point">
                    <type>POINT</type>
                </param>
            </function>
            <function name="ChildWindowFromPoint" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="Point">
                    <type>POINT</type>
                </param>
            </function>
            <function name="ClipCursor" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="ChildWindowFromPointEx" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pt">
                    <type>POINT</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetSysColor" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="GetSysColorBrush" access="public" lib="user32" static="true" unsafe="true">
                <type native="HBRUSH">IntPtr</type>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="SetSysColors" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="cElements">
                    <type>int</type>
                </param>
                <param name="lpaElements">
                    <type>int*</type>
                </param>
                <param name="lpaRgbValues">
                    <type>uint*</type>
                </param>
            </function>
            <function name="DrawFocusRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="FillRect" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="hbr">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="FrameRect" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="hbr">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="InvertRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hDC">
                    <type>IntPtr</type>
                </param>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="SetRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="xLeft">
                    <type>int</type>
                </param>
                <param name="yTop">
                    <type>int</type>
                </param>
                <param name="xRight">
                    <type>int</type>
                </param>
                <param name="yBottom">
                    <type>int</type>
                </param>
            </function>
            <function name="SetRectEmpty" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="CopyRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprcDst">
                    <type>RECT*</type>
                </param>
                <param name="lprcSrc">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="InflateRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="dx">
                    <type>int</type>
                </param>
                <param name="dy">
                    <type>int</type>
                </param>
            </function>
            <function name="IntersectRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprcDst">
                    <type>RECT*</type>
                </param>
                <param name="lprcSrc1">
                    <type>RECT*</type>
                </param>
                <param name="lprcSrc2">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="UnionRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprcDst">
                    <type>RECT*</type>
                </param>
                <param name="lprcSrc1">
                    <type>RECT*</type>
                </param>
                <param name="lprcSrc2">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="SubtractRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprcDst">
                    <type>RECT*</type>
                </param>
                <param name="lprcSrc1">
                    <type>RECT*</type>
                </param>
                <param name="lprcSrc2">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="OffsetRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="dx">
                    <type>int</type>
                </param>
                <param name="dy">
                    <type>int</type>
                </param>
            </function>
            <function name="IsRectEmpty" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="EqualRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprc1">
                    <type>RECT*</type>
                </param>
                <param name="lprc2">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="PtInRect" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="pt">
                    <type>POINT</type>
                </param>
            </function>
            <function name="GetWindowWord" access="public" lib="user32" static="true" unsafe="true">
                <type native="WORD">ushort</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="SetWindowWord" access="public" lib="user32" static="true" unsafe="true">
                <type native="WORD">ushort</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="wNewWord">
                    <type>ushort</type>
                </param>
            </function>
            <function name="GetWindowLongA" access="public" lib="user32" static="true" unsafe="true">
                <type native="LONG">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="GetWindowLongW" access="public" lib="user32" static="true" unsafe="true">
                <type native="LONG">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="SetWindowLongA" access="public" lib="user32" static="true" unsafe="true">
                <type native="LONG">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="dwNewLong">
                    <type>int</type>
                </param>
            </function>
            <function name="SetWindowLongW" access="public" lib="user32" static="true" unsafe="true">
                <type native="LONG">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="dwNewLong">
                    <type>int</type>
                </param>
            </function>
            <function name="GetClassWord" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="WORD">ushort</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="SetClassWord" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="WORD">ushort</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="wNewWord">
                    <type>ushort</type>
                </param>
            </function>
            <function name="GetClassLongA" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="GetClassLongW" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
            </function>
            <function name="SetClassLongA" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="dwNewLong">
                    <type>int</type>
                </param>
            </function>
            <function name="SetClassLongW" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="nIndex">
                    <type>int</type>
                </param>
                <param name="dwNewLong">
                    <type>int</type>
                </param>
            </function>
            <function name="GetProcessDefaultLayout" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pdwDefaultLayout">
                    <type>uint*</type>
                </param>
            </function>
            <function name="SetProcessDefaultLayout" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="dwDefaultLayout">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetDesktopWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="GetParent" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetParent" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWndChild">
                    <type>IntPtr</type>
                </param>
                <param name="hWndNewParent">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="EnumChildWindows" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;IntPtr, nint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="FindWindowA" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="lpClassName">
                    <type>sbyte*</type>
                </param>
                <param name="lpWindowName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="FindWindowW" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="lpClassName">
                    <type>ushort*</type>
                </param>
                <param name="lpWindowName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="FindWindowExA" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="hWndChildAfter">
                    <type>IntPtr</type>
                </param>
                <param name="lpszClass">
                    <type>sbyte*</type>
                </param>
                <param name="lpszWindow">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="FindWindowExW" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="hWndChildAfter">
                    <type>IntPtr</type>
                </param>
                <param name="lpszClass">
                    <type>ushort*</type>
                </param>
                <param name="lpszWindow">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="GetShellWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
            </function>
            <function name="RegisterShellHookWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="DeregisterShellHookWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="EnumWindows" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="lpEnumFunc">
                    <type>delegate* unmanaged&lt;IntPtr, nint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="EnumThreadWindows" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="dwThreadId">
                    <type>uint</type>
                </param>
                <param name="lpfn">
                    <type>delegate* unmanaged&lt;IntPtr, nint, int&gt;</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="GetClassNameA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpClassName">
                    <type>sbyte*</type>
                </param>
                <param name="nMaxCount">
                    <type>int</type>
                </param>
            </function>
            <function name="GetClassNameW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpClassName">
                    <type>ushort*</type>
                </param>
                <param name="nMaxCount">
                    <type>int</type>
                </param>
            </function>
            <function name="GetTopWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetWindowThreadProcessId" access="public" lib="user32" static="true">
                <type native="DWORD">uint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="lpdwProcessId">
                    <type>uint*</type>
                </param>
            </function>
            <function name="IsGUIThread" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="bConvert">
                    <type>int</type>
                </param>
            </function>
            <function name="GetLastActivePopup" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetWindow" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="uCmd">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetWindowsHookA" access="public" lib="user32" static="true">
                <type native="HHOOK">IntPtr</type>
                <param name="nFilterType">
                    <type>int</type>
                </param>
                <param name="pfnFilterProc">
                    <type>delegate* unmanaged&lt;int, nuint, nint, nint&gt;</type>
                </param>
            </function>
            <function name="SetWindowsHookW" access="public" lib="user32" static="true">
                <type native="HHOOK">IntPtr</type>
                <param name="nFilterType">
                    <type>int</type>
                </param>
                <param name="pfnFilterProc">
                    <type>delegate* unmanaged&lt;int, nuint, nint, nint&gt;</type>
                </param>
            </function>
            <function name="UnhookWindowsHook" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="nCode">
                    <type>int</type>
                </param>
                <param name="pfnFilterProc">
                    <type>delegate* unmanaged&lt;int, nuint, nint, nint&gt;</type>
                </param>
            </function>
            <function name="SetWindowsHookExA" access="public" lib="user32" static="true">
                <type native="HHOOK">IntPtr</type>
                <param name="idHook">
                    <type>int</type>
                </param>
                <param name="lpfn">
                    <type>delegate* unmanaged&lt;int, nuint, nint, nint&gt;</type>
                </param>
                <param name="hmod">
                    <type>IntPtr</type>
                </param>
                <param name="dwThreadId">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetWindowsHookExW" access="public" lib="user32" static="true">
                <type native="HHOOK">IntPtr</type>
                <param name="idHook">
                    <type>int</type>
                </param>
                <param name="lpfn">
                    <type>delegate* unmanaged&lt;int, nuint, nint, nint&gt;</type>
                </param>
                <param name="hmod">
                    <type>IntPtr</type>
                </param>
                <param name="dwThreadId">
                    <type>uint</type>
                </param>
            </function>
            <function name="UnhookWindowsHookEx" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hhk">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CallNextHookEx" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hhk">
                    <type>IntPtr</type>
                </param>
                <param name="nCode">
                    <type>int</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="CheckMenuRadioItem" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hmenu">
                    <type>IntPtr</type>
                </param>
                <param name="first">
                    <type>uint</type>
                </param>
                <param name="last">
                    <type>uint</type>
                </param>
                <param name="check">
                    <type>uint</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="LoadBitmapA" access="public" lib="user32" static="true">
                <type native="HBITMAP">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpBitmapName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="LoadBitmapW" access="public" lib="user32" static="true">
                <type native="HBITMAP">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpBitmapName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="LoadCursorA" access="public" lib="user32" static="true">
                <type native="HCURSOR">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpCursorName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="LoadCursorW" access="public" lib="user32" static="true">
                <type native="HCURSOR">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpCursorName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="LoadCursorFromFileA" access="public" lib="user32" static="true">
                <type native="HCURSOR">IntPtr</type>
                <param name="lpFileName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="LoadCursorFromFileW" access="public" lib="user32" static="true">
                <type native="HCURSOR">IntPtr</type>
                <param name="lpFileName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="CreateCursor" access="public" lib="user32" setlasterror="true" static="true">
                <type native="HCURSOR">IntPtr</type>
                <param name="hInst">
                    <type>IntPtr</type>
                </param>
                <param name="xHotSpot">
                    <type>int</type>
                </param>
                <param name="yHotSpot">
                    <type>int</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
                <param name="pvANDPlane">
                    <type>void*</type>
                </param>
                <param name="pvXORPlane">
                    <type>void*</type>
                </param>
            </function>
            <function name="DestroyCursor" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hCursor">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetSystemCursor" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hcur">
                    <type>IntPtr</type>
                </param>
                <param name="id">
                    <type>uint</type>
                </param>
            </function>
            <function name="LoadIconA" access="public" lib="user32" static="true">
                <type native="HICON">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpIconName">
                    <type>sbyte*</type>
                </param>
            </function>
            <function name="LoadIconW" access="public" lib="user32" static="true">
                <type native="HICON">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lpIconName">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="PrivateExtractIconsA" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="szFileName">
                    <type>sbyte*</type>
                </param>
                <param name="nIconIndex">
                    <type>int</type>
                </param>
                <param name="cxIcon">
                    <type>int</type>
                </param>
                <param name="cyIcon">
                    <type>int</type>
                </param>
                <param name="phicon">
                    <type>IntPtr*</type>
                </param>
                <param name="piconid">
                    <type>uint*</type>
                </param>
                <param name="nIcons">
                    <type>uint</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="PrivateExtractIconsW" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="szFileName">
                    <type>ushort*</type>
                </param>
                <param name="nIconIndex">
                    <type>int</type>
                </param>
                <param name="cxIcon">
                    <type>int</type>
                </param>
                <param name="cyIcon">
                    <type>int</type>
                </param>
                <param name="phicon">
                    <type>IntPtr*</type>
                </param>
                <param name="piconid">
                    <type>uint*</type>
                </param>
                <param name="nIcons">
                    <type>uint</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="CreateIcon" access="public" lib="user32" setlasterror="true" static="true">
                <type native="HICON">IntPtr</type>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
                <param name="cPlanes">
                    <type>byte</type>
                </param>
                <param name="cBitsPixel">
                    <type>byte</type>
                </param>
                <param name="lpbANDbits">
                    <type>byte*</type>
                </param>
                <param name="lpbXORbits">
                    <type>byte*</type>
                </param>
            </function>
            <function name="DestroyIcon" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hIcon">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="LookupIconIdFromDirectory" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="presbits">
                    <type>byte*</type>
                </param>
                <param name="fIcon">
                    <type>int</type>
                </param>
            </function>
            <function name="LookupIconIdFromDirectoryEx" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="presbits">
                    <type>byte*</type>
                </param>
                <param name="fIcon">
                    <type>int</type>
                </param>
                <param name="cxDesired">
                    <type>int</type>
                </param>
                <param name="cyDesired">
                    <type>int</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="CreateIconFromResource" access="public" lib="user32" setlasterror="true" static="true">
                <type native="HICON">IntPtr</type>
                <param name="presbits">
                    <type>byte*</type>
                </param>
                <param name="dwResSize">
                    <type>uint</type>
                </param>
                <param name="fIcon">
                    <type>int</type>
                </param>
                <param name="dwVer">
                    <type>uint</type>
                </param>
            </function>
            <function name="CreateIconFromResourceEx" access="public" lib="user32" setlasterror="true" static="true">
                <type native="HICON">IntPtr</type>
                <param name="presbits">
                    <type>byte*</type>
                </param>
                <param name="dwResSize">
                    <type>uint</type>
                </param>
                <param name="fIcon">
                    <type>int</type>
                </param>
                <param name="dwVer">
                    <type>uint</type>
                </param>
                <param name="cxDesired">
                    <type>int</type>
                </param>
                <param name="cyDesired">
                    <type>int</type>
                </param>
                <param name="Flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="LoadImageA" access="public" lib="user32" static="true">
                <type native="HANDLE">IntPtr</type>
                <param name="hInst">
                    <type>IntPtr</type>
                </param>
                <param name="name">
                    <type>sbyte*</type>
                </param>
                <param name="type">
                    <type>uint</type>
                </param>
                <param name="cx">
                    <type>int</type>
                </param>
                <param name="cy">
                    <type>int</type>
                </param>
                <param name="fuLoad">
                    <type>uint</type>
                </param>
            </function>
            <function name="LoadImageW" access="public" lib="user32" static="true">
                <type native="HANDLE">IntPtr</type>
                <param name="hInst">
                    <type>IntPtr</type>
                </param>
                <param name="name">
                    <type>ushort*</type>
                </param>
                <param name="type">
                    <type>uint</type>
                </param>
                <param name="cx">
                    <type>int</type>
                </param>
                <param name="cy">
                    <type>int</type>
                </param>
                <param name="fuLoad">
                    <type>uint</type>
                </param>
            </function>
            <function name="CopyImage" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HANDLE">IntPtr</type>
                <param name="h">
                    <type>IntPtr</type>
                </param>
                <param name="type">
                    <type>uint</type>
                </param>
                <param name="cx">
                    <type>int</type>
                </param>
                <param name="cy">
                    <type>int</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
            </function>
            <function name="DrawIconEx" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="xLeft">
                    <type>int</type>
                </param>
                <param name="yTop">
                    <type>int</type>
                </param>
                <param name="hIcon">
                    <type>IntPtr</type>
                </param>
                <param name="cxWidth">
                    <type>int</type>
                </param>
                <param name="cyWidth">
                    <type>int</type>
                </param>
                <param name="istepIfAniCur">
                    <type>uint</type>
                </param>
                <param name="hbrFlickerFreeDraw">
                    <type>IntPtr</type>
                </param>
                <param name="diFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="CreateIconIndirect" access="public" lib="user32" setlasterror="true" static="true">
                <type native="HICON">IntPtr</type>
                <param name="piconinfo">
                    <type>ICONINFO*</type>
                </param>
            </function>
            <function name="CopyIcon" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="HICON">IntPtr</type>
                <param name="hIcon">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetIconInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hIcon">
                    <type>IntPtr</type>
                </param>
                <param name="piconinfo">
                    <type>ICONINFO*</type>
                </param>
            </function>
            <function name="GetIconInfoExA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hicon">
                    <type>IntPtr</type>
                </param>
                <param name="piconinfo">
                    <type>ICONINFOEXA*</type>
                </param>
            </function>
            <function name="GetIconInfoExW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hicon">
                    <type>IntPtr</type>
                </param>
                <param name="piconinfo">
                    <type>ICONINFOEXW*</type>
                </param>
            </function>
            <function name="IsDialogMessageA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
            </function>
            <function name="IsDialogMessageW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
            </function>
            <function name="MapDialogRect" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="DlgDirListA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpPathSpec">
                    <type>sbyte*</type>
                </param>
                <param name="nIDListBox">
                    <type>int</type>
                </param>
                <param name="nIDStaticPath">
                    <type>int</type>
                </param>
                <param name="uFileType">
                    <type>uint</type>
                </param>
            </function>
            <function name="DlgDirListW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpPathSpec">
                    <type>ushort*</type>
                </param>
                <param name="nIDListBox">
                    <type>int</type>
                </param>
                <param name="nIDStaticPath">
                    <type>int</type>
                </param>
                <param name="uFileType">
                    <type>uint</type>
                </param>
            </function>
            <function name="DlgDirSelectExA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwndDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="chCount">
                    <type>int</type>
                </param>
                <param name="idListBox">
                    <type>int</type>
                </param>
            </function>
            <function name="DlgDirSelectExW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwndDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="chCount">
                    <type>int</type>
                </param>
                <param name="idListBox">
                    <type>int</type>
                </param>
            </function>
            <function name="DlgDirListComboBoxA" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpPathSpec">
                    <type>sbyte*</type>
                </param>
                <param name="nIDComboBox">
                    <type>int</type>
                </param>
                <param name="nIDStaticPath">
                    <type>int</type>
                </param>
                <param name="uFiletype">
                    <type>uint</type>
                </param>
            </function>
            <function name="DlgDirListComboBoxW" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpPathSpec">
                    <type>ushort*</type>
                </param>
                <param name="nIDComboBox">
                    <type>int</type>
                </param>
                <param name="nIDStaticPath">
                    <type>int</type>
                </param>
                <param name="uFiletype">
                    <type>uint</type>
                </param>
            </function>
            <function name="DlgDirSelectComboBoxExA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwndDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>sbyte*</type>
                </param>
                <param name="cchOut">
                    <type>int</type>
                </param>
                <param name="idComboBox">
                    <type>int</type>
                </param>
            </function>
            <function name="DlgDirSelectComboBoxExW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwndDlg">
                    <type>IntPtr</type>
                </param>
                <param name="lpString">
                    <type>ushort*</type>
                </param>
                <param name="cchOut">
                    <type>int</type>
                </param>
                <param name="idComboBox">
                    <type>int</type>
                </param>
            </function>
            <function name="SetScrollInfo" access="public" lib="user32" static="true">
                <type>int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="nBar">
                    <type>int</type>
                </param>
                <param name="lpsi">
                    <type>SCROLLINFO*</type>
                </param>
                <param name="redraw">
                    <type>int</type>
                </param>
            </function>
            <function name="GetScrollInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="nBar">
                    <type>int</type>
                </param>
                <param name="lpsi">
                    <type>SCROLLINFO*</type>
                </param>
            </function>
            <function name="DefFrameProcA" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hWndMDIClient">
                    <type>IntPtr</type>
                </param>
                <param name="uMsg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DefFrameProcW" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="hWndMDIClient">
                    <type>IntPtr</type>
                </param>
                <param name="uMsg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DefMDIChildProcA" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="uMsg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="DefMDIChildProcW" access="public" lib="user32" static="true" unsafe="true">
                <type native="LRESULT">nint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="uMsg">
                    <type>uint</type>
                </param>
                <param name="wParam">
                    <type>nuint</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="TranslateMDISysAccel" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWndClient">
                    <type>IntPtr</type>
                </param>
                <param name="lpMsg">
                    <type>MSG*</type>
                </param>
            </function>
            <function name="ArrangeIconicWindows" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="CreateMDIWindowA" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="lpClassName">
                    <type>sbyte*</type>
                </param>
                <param name="lpWindowName">
                    <type>sbyte*</type>
                </param>
                <param name="dwStyle">
                    <type>uint</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="CreateMDIWindowW" access="public" lib="user32" static="true">
                <type native="HWND">IntPtr</type>
                <param name="lpClassName">
                    <type>ushort*</type>
                </param>
                <param name="lpWindowName">
                    <type>ushort*</type>
                </param>
                <param name="dwStyle">
                    <type>uint</type>
                </param>
                <param name="X">
                    <type>int</type>
                </param>
                <param name="Y">
                    <type>int</type>
                </param>
                <param name="nWidth">
                    <type>int</type>
                </param>
                <param name="nHeight">
                    <type>int</type>
                </param>
                <param name="hWndParent">
                    <type>IntPtr</type>
                </param>
                <param name="hInstance">
                    <type>IntPtr</type>
                </param>
                <param name="lParam">
                    <type>nint</type>
                </param>
            </function>
            <function name="TileWindows" access="public" lib="user32" setlasterror="true" static="true">
                <type native="WORD">ushort</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="wHow">
                    <type>uint</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
                <param name="cKids">
                    <type>uint</type>
                </param>
                <param name="lpKids">
                    <type>IntPtr*</type>
                </param>
            </function>
            <function name="CascadeWindows" access="public" lib="user32" setlasterror="true" static="true">
                <type native="WORD">ushort</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="wHow">
                    <type>uint</type>
                </param>
                <param name="lpRect">
                    <type>RECT*</type>
                </param>
                <param name="cKids">
                    <type>uint</type>
                </param>
                <param name="lpKids">
                    <type>IntPtr*</type>
                </param>
            </function>
            <function name="WinHelpA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWndMain">
                    <type>IntPtr</type>
                </param>
                <param name="lpszHelp">
                    <type>sbyte*</type>
                </param>
                <param name="uCommand">
                    <type>uint</type>
                </param>
                <param name="dwData">
                    <type>nuint</type>
                </param>
            </function>
            <function name="WinHelpW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hWndMain">
                    <type>IntPtr</type>
                </param>
                <param name="lpszHelp">
                    <type>ushort*</type>
                </param>
                <param name="uCommand">
                    <type>uint</type>
                </param>
                <param name="dwData">
                    <type>nuint</type>
                </param>
            </function>
            <function name="GetGuiResources" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hProcess">
                    <type>IntPtr</type>
                </param>
                <param name="uiFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="SoundSentry" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="SetDebugErrorLevel" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
                <param name="dwLevel">
                    <type>uint</type>
                </param>
            </function>
            <function name="SetLastErrorEx" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
                <param name="dwErrCode">
                    <type>uint</type>
                </param>
                <param name="dwType">
                    <type>uint</type>
                </param>
            </function>
            <function name="InternalGetWindowText" access="public" lib="user32" setlasterror="true" static="true">
                <type>int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="pString">
                    <type>ushort*</type>
                </param>
                <param name="cchMaxCount">
                    <type>int</type>
                </param>
            </function>
            <function name="CancelShutdown" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="MonitorFromPoint" access="public" lib="user32" static="true" unsafe="true">
                <type native="HMONITOR">IntPtr</type>
                <param name="pt">
                    <type>POINT</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="MonitorFromRect" access="public" lib="user32" static="true">
                <type native="HMONITOR">IntPtr</type>
                <param name="lprc">
                    <type>RECT*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="MonitorFromWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="HMONITOR">IntPtr</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetMonitorInfoA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMonitor">
                    <type>IntPtr</type>
                </param>
                <param name="lpmi">
                    <type>MONITORINFO*</type>
                </param>
            </function>
            <function name="GetMonitorInfoW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hMonitor">
                    <type>IntPtr</type>
                </param>
                <param name="lpmi">
                    <type>MONITORINFO*</type>
                </param>
            </function>
            <function name="EnumDisplayMonitors" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hdc">
                    <type>IntPtr</type>
                </param>
                <param name="lprcClip">
                    <type>RECT*</type>
                </param>
                <param name="lpfnEnum">
                    <type>delegate* unmanaged&lt;IntPtr, IntPtr, RECT*, nint, int&gt;</type>
                </param>
                <param name="dwData">
                    <type>nint</type>
                </param>
            </function>
            <function name="NotifyWinEvent" access="public" lib="user32" static="true" unsafe="true">
                <type>void</type>
                <param name="@event">
                    <type>uint</type>
                </param>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="idObject">
                    <type>int</type>
                </param>
                <param name="idChild">
                    <type>int</type>
                </param>
            </function>
            <function name="SetWinEventHook" access="public" lib="user32" static="true">
                <type native="HWINEVENTHOOK">IntPtr</type>
                <param name="eventMin">
                    <type>uint</type>
                </param>
                <param name="eventMax">
                    <type>uint</type>
                </param>
                <param name="hmodWinEventProc">
                    <type>IntPtr</type>
                </param>
                <param name="pfnWinEventProc">
                    <type>delegate* unmanaged&lt;IntPtr, uint, IntPtr, int, int, uint, uint, void&gt;</type>
                </param>
                <param name="idProcess">
                    <type>uint</type>
                </param>
                <param name="idThread">
                    <type>uint</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="IsWinEventHookInstalled" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="@event">
                    <type>uint</type>
                </param>
            </function>
            <function name="UnhookWinEvent" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWinEventHook">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetGUIThreadInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="idThread">
                    <type>uint</type>
                </param>
                <param name="pgui">
                    <type>GUITHREADINFO*</type>
                </param>
            </function>
            <function name="BlockInput" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="fBlockIt">
                    <type>int</type>
                </param>
            </function>
            <function name="SetProcessDPIAware" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="IsProcessDPIAware" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="SetThreadDpiAwarenessContext" access="public" lib="user32" static="true" unsafe="true">
                <type native="DPI_AWARENESS_CONTEXT">IntPtr</type>
                <param name="dpiContext">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetThreadDpiAwarenessContext" access="public" lib="user32" static="true" unsafe="true">
                <type native="DPI_AWARENESS_CONTEXT">IntPtr</type>
            </function>
            <function name="GetWindowDpiAwarenessContext" access="public" lib="user32" static="true" unsafe="true">
                <type native="DPI_AWARENESS_CONTEXT">IntPtr</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetAwarenessFromDpiAwarenessContext" access="public" lib="user32" static="true" unsafe="true">
                <type>DPI_AWARENESS</type>
                <param name="value">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetDpiFromDpiAwarenessContext" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="value">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="AreDpiAwarenessContextsEqual" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="dpiContextA">
                    <type>IntPtr</type>
                </param>
                <param name="dpiContextB">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="IsValidDpiAwarenessContext" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="value">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetDpiForWindow" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetDpiForSystem" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
            </function>
            <function name="GetSystemDpiForProcess" access="public" lib="user32" static="true" unsafe="true">
                <type native="UINT">uint</type>
                <param name="hProcess">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="EnableNonClientDpiScaling" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="InheritWindowMonitor" access="public" lib="user32" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="hwndInherit">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetProcessDpiAwarenessContext" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="value">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetDpiAwarenessContextForProcess" access="public" lib="user32" static="true" unsafe="true">
                <type native="DPI_AWARENESS_CONTEXT">IntPtr</type>
                <param name="hProcess">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetThreadDpiHostingBehavior" access="public" lib="user32" static="true" unsafe="true">
                <type>DPI_HOSTING_BEHAVIOR</type>
                <param name="value">
                    <type>DPI_HOSTING_BEHAVIOR</type>
                </param>
            </function>
            <function name="GetThreadDpiHostingBehavior" access="public" lib="user32" static="true" unsafe="true">
                <type>DPI_HOSTING_BEHAVIOR</type>
            </function>
            <function name="GetWindowDpiHostingBehavior" access="public" lib="user32" static="true" unsafe="true">
                <type>DPI_HOSTING_BEHAVIOR</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetWindowModuleFileNameA" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pszFileName">
                    <type>sbyte*</type>
                </param>
                <param name="cchFileNameMax">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetWindowModuleFileNameW" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pszFileName">
                    <type>ushort*</type>
                </param>
                <param name="cchFileNameMax">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetCursorInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pci">
                    <type>CURSORINFO*</type>
                </param>
            </function>
            <function name="GetWindowInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pwi">
                    <type>WINDOWINFO*</type>
                </param>
            </function>
            <function name="GetTitleBarInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="pti">
                    <type>TITLEBARINFO*</type>
                </param>
            </function>
            <function name="GetMenuBarInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="idObject">
                    <type>int</type>
                </param>
                <param name="idItem">
                    <type>int</type>
                </param>
                <param name="pmbi">
                    <type>MENUBARINFO*</type>
                </param>
            </function>
            <function name="GetScrollBarInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="idObject">
                    <type>int</type>
                </param>
                <param name="psbi">
                    <type>SCROLLBARINFO*</type>
                </param>
            </function>
            <function name="GetComboBoxInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwndCombo">
                    <type>IntPtr</type>
                </param>
                <param name="pcbi">
                    <type>COMBOBOXINFO*</type>
                </param>
            </function>
            <function name="GetAncestor" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="gaFlags">
                    <type>uint</type>
                </param>
            </function>
            <function name="RealChildWindowFromPoint" access="public" lib="user32" static="true" unsafe="true">
                <type native="HWND">IntPtr</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="ptParentClientCoords">
                    <type>POINT</type>
                </param>
            </function>
            <function name="RealGetWindowClassA" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="ptszClassName">
                    <type>sbyte*</type>
                </param>
                <param name="cchClassNameMax">
                    <type>uint</type>
                </param>
            </function>
            <function name="RealGetWindowClassW" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="ptszClassName">
                    <type>ushort*</type>
                </param>
                <param name="cchClassNameMax">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetAltTabInfoA" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="iItem">
                    <type>int</type>
                </param>
                <param name="pati">
                    <type>ALTTABINFO*</type>
                </param>
                <param name="pszItemText">
                    <type>sbyte*</type>
                </param>
                <param name="cchItemText">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetAltTabInfoW" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="iItem">
                    <type>int</type>
                </param>
                <param name="pati">
                    <type>ALTTABINFO*</type>
                </param>
                <param name="pszItemText">
                    <type>ushort*</type>
                </param>
                <param name="cchItemText">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetListBoxInfo" access="public" lib="user32" static="true" unsafe="true">
                <type native="DWORD">uint</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="LockWorkStation" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
            </function>
            <function name="UserHandleGrantAccess" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hUserHandle">
                    <type>IntPtr</type>
                </param>
                <param name="hJob">
                    <type>IntPtr</type>
                </param>
                <param name="bGrant">
                    <type>int</type>
                </param>
            </function>
            <function name="GetRawInputData" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hRawInput">
                    <type>IntPtr</type>
                </param>
                <param name="uiCommand">
                    <type>uint</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <param name="pcbSize">
                    <type>uint*</type>
                </param>
                <param name="cbSizeHeader">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetRawInputDeviceInfoA" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hDevice">
                    <type>IntPtr</type>
                </param>
                <param name="uiCommand">
                    <type>uint</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <param name="pcbSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="GetRawInputDeviceInfoW" access="public" lib="user32" static="true">
                <type native="UINT">uint</type>
                <param name="hDevice">
                    <type>IntPtr</type>
                </param>
                <param name="uiCommand">
                    <type>uint</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <param name="pcbSize">
                    <type>uint*</type>
                </param>
            </function>
            <function name="GetRawInputBuffer" access="public" lib="user32" setlasterror="true" static="true">
                <type native="UINT">uint</type>
                <param name="pData">
                    <type>RAWINPUT*</type>
                </param>
                <param name="pcbSize">
                    <type>uint*</type>
                </param>
                <param name="cbSizeHeader">
                    <type>uint</type>
                </param>
            </function>
            <function name="RegisterRawInputDevices" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pRawInputDevices">
                    <type>RAWINPUTDEVICE*</type>
                </param>
                <param name="uiNumDevices">
                    <type>uint</type>
                </param>
                <param name="cbSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetRegisteredRawInputDevices" access="public" lib="user32" setlasterror="true" static="true">
                <type native="UINT">uint</type>
                <param name="pRawInputDevices">
                    <type>RAWINPUTDEVICE*</type>
                </param>
                <param name="puiNumDevices">
                    <type>uint*</type>
                </param>
                <param name="cbSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetRawInputDeviceList" access="public" lib="user32" setlasterror="true" static="true">
                <type native="UINT">uint</type>
                <param name="pRawInputDeviceList">
                    <type>RAWINPUTDEVICELIST*</type>
                </param>
                <param name="puiNumDevices">
                    <type>uint*</type>
                </param>
                <param name="cbSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="DefRawInputProc" access="public" lib="user32" static="true">
                <type native="LRESULT">nint</type>
                <param name="paRawInput">
                    <type>RAWINPUT**</type>
                </param>
                <param name="nInput">
                    <type>int</type>
                </param>
                <param name="cbSizeHeader">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetPointerDevices" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="deviceCount">
                    <type>uint*</type>
                </param>
                <param name="pointerDevices">
                    <type>POINTER_DEVICE_INFO*</type>
                </param>
            </function>
            <function name="GetPointerDevice" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="device">
                    <type>IntPtr</type>
                </param>
                <param name="pointerDevice">
                    <type>POINTER_DEVICE_INFO*</type>
                </param>
            </function>
            <function name="GetPointerDeviceProperties" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="device">
                    <type>IntPtr</type>
                </param>
                <param name="propertyCount">
                    <type>uint*</type>
                </param>
                <param name="pointerProperties">
                    <type>POINTER_DEVICE_PROPERTY*</type>
                </param>
            </function>
            <function name="RegisterPointerDeviceNotifications" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="window">
                    <type>IntPtr</type>
                </param>
                <param name="notifyRange">
                    <type>int</type>
                </param>
            </function>
            <function name="GetPointerDeviceRects" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="device">
                    <type>IntPtr</type>
                </param>
                <param name="pointerDeviceRect">
                    <type>RECT*</type>
                </param>
                <param name="displayRect">
                    <type>RECT*</type>
                </param>
            </function>
            <function name="GetPointerDeviceCursors" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="device">
                    <type>IntPtr</type>
                </param>
                <param name="cursorCount">
                    <type>uint*</type>
                </param>
                <param name="deviceCursors">
                    <type>POINTER_DEVICE_CURSOR_INFO*</type>
                </param>
            </function>
            <function name="GetRawPointerDeviceData" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="pointerId">
                    <type>uint</type>
                </param>
                <param name="historyCount">
                    <type>uint</type>
                </param>
                <param name="propertiesCount">
                    <type>uint</type>
                </param>
                <param name="pProperties">
                    <type>POINTER_DEVICE_PROPERTY*</type>
                </param>
                <param name="pValues">
                    <type>int*</type>
                </param>
            </function>
            <function name="ChangeWindowMessageFilter" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="message">
                    <type>uint</type>
                </param>
                <param name="dwFlag">
                    <type>uint</type>
                </param>
            </function>
            <function name="ChangeWindowMessageFilterEx" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="message">
                    <type>uint</type>
                </param>
                <param name="action">
                    <type>uint</type>
                </param>
                <param name="pChangeFilterStruct">
                    <type>CHANGEFILTERSTRUCT*</type>
                </param>
            </function>
            <function name="GetGestureInfo" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hGestureInfo">
                    <type>IntPtr</type>
                </param>
                <param name="pGestureInfo">
                    <type>GESTUREINFO*</type>
                </param>
            </function>
            <function name="GetGestureExtraArgs" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hGestureInfo">
                    <type>IntPtr</type>
                </param>
                <param name="cbExtraArgs">
                    <type>uint</type>
                </param>
                <param name="pExtraArgs">
                    <type>byte*</type>
                </param>
            </function>
            <function name="CloseGestureInfoHandle" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hGestureInfo">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetGestureConfig" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="dwReserved">
                    <type>uint</type>
                </param>
                <param name="cIDs">
                    <type>uint</type>
                </param>
                <param name="pGestureConfig">
                    <type>GESTURECONFIG*</type>
                </param>
                <param name="cbSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="GetGestureConfig" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hwnd">
                    <type>IntPtr</type>
                </param>
                <param name="dwReserved">
                    <type>uint</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="pcIDs">
                    <type>uint*</type>
                </param>
                <param name="pGestureConfig">
                    <type>GESTURECONFIG*</type>
                </param>
                <param name="cbSize">
                    <type>uint</type>
                </param>
            </function>
            <function name="ShutdownBlockReasonCreate" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="pwszReason">
                    <type>ushort*</type>
                </param>
            </function>
            <function name="ShutdownBlockReasonQuery" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
                <param name="pwszBuff">
                    <type>ushort*</type>
                </param>
                <param name="pcchBuff">
                    <type>uint*</type>
                </param>
            </function>
            <function name="ShutdownBlockReasonDestroy" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hWnd">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="GetCurrentInputMessageSource" access="public" lib="user32" setlasterror="true" static="true">
                <type native="BOOL">int</type>
                <param name="inputMessageSource">
                    <type>INPUT_MESSAGE_SOURCE*</type>
                </param>
            </function>
            <function name="GetCIMSSM" access="public" lib="user32" static="true">
                <type native="BOOL">int</type>
                <param name="inputMessageSource">
                    <type>INPUT_MESSAGE_SOURCE*</type>
                </param>
            </function>
            <function name="GetAutoRotationState" access="public" lib="kernel" static="true">
                <type native="BOOL">int</type>
                <param name="pState">
                    <type>AR_STATE*</type>
                </param>
            </function>
            <function name="GetDisplayAutoRotationPreferences" access="public" lib="kernel" static="true">
                <type native="BOOL">int</type>
                <param name="pOrientation">
                    <type>ORIENTATION_PREFERENCE*</type>
                </param>
            </function>
            <function name="GetDisplayAutoRotationPreferencesByProcessId" access="public" lib="kernel" static="true">
                <type native="BOOL">int</type>
                <param name="dwProcessId">
                    <type>uint</type>
                </param>
                <param name="pOrientation">
                    <type>ORIENTATION_PREFERENCE*</type>
                </param>
                <param name="fRotateScreen">
                    <type>int*</type>
                </param>
            </function>
            <function name="SetDisplayAutoRotationPreferences" access="public" lib="kernel" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="orientation">
                    <type>ORIENTATION_PREFERENCE</type>
                </param>
            </function>
            <function name="IsImmersiveProcess" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="hProcess">
                    <type>IntPtr</type>
                </param>
            </function>
            <function name="SetProcessRestrictionExemption" access="public" lib="user32" setlasterror="true" static="true" unsafe="true">
                <type native="BOOL">int</type>
                <param name="fEnableExemption">
                    <type>int</type>
                </param>
            </function>
            <constant name="RT_CURSOR" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(1))))
            </code>
                </value>
            </constant>
            <constant name="RT_BITMAP" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(2))))
            </code>
                </value>
            </constant>
            <constant name="RT_ICON" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(3))))
            </code>
                </value>
            </constant>
            <constant name="RT_MENU" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(4))))
            </code>
                </value>
            </constant>
            <constant name="RT_DIALOG" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(5))))
            </code>
                </value>
            </constant>
            <constant name="RT_STRING" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(6))))
            </code>
                </value>
            </constant>
            <constant name="RT_FONTDIR" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(7))))
            </code>
                </value>
            </constant>
            <constant name="RT_FONT" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(8))))
            </code>
                </value>
            </constant>
            <constant name="RT_ACCELERATOR" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(9))))
            </code>
                </value>
            </constant>
            <constant name="RT_RCDATA" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(10))))
            </code>
                </value>
            </constant>
            <constant name="RT_MESSAGETABLE" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(11))))
            </code>
                </value>
            </constant>
            <constant name="DIFFERENCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="RT_GROUP_CURSOR" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)((nuint)(((ushort*)((nuint)((ushort)(1))))) + 11))))
            </code>
                </value>
            </constant>
            <constant name="RT_GROUP_ICON" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)((nuint)(((ushort*)((nuint)((ushort)(3))))) + 11))))
            </code>
                </value>
            </constant>
            <constant name="RT_VERSION" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(16))))
            </code>
                </value>
            </constant>
            <constant name="RT_DLGINCLUDE" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(17))))
            </code>
                </value>
            </constant>
            <constant name="RT_PLUGPLAY" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(19))))
            </code>
                </value>
            </constant>
            <constant name="RT_VXD" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(20))))
            </code>
                </value>
            </constant>
            <constant name="RT_ANICURSOR" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(21))))
            </code>
                </value>
            </constant>
            <constant name="RT_ANIICON" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(22))))
            </code>
                </value>
            </constant>
            <constant name="RT_HTML" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(23))))
            </code>
                </value>
            </constant>
            <constant name="RT_MANIFEST" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(24))))
            </code>
                </value>
            </constant>
            <constant name="CREATEPROCESS_MANIFEST_RESOURCE_ID" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(1))))
            </code>
                </value>
            </constant>
            <constant name="ISOLATIONAWARE_MANIFEST_RESOURCE_ID" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(2))))
            </code>
                </value>
            </constant>
            <constant name="ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(3))))
            </code>
                </value>
            </constant>
            <constant name="ISOLATIONPOLICY_MANIFEST_RESOURCE_ID" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(4))))
            </code>
                </value>
            </constant>
            <constant name="ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(5))))
            </code>
                </value>
            </constant>
            <constant name="MINIMUM_RESERVED_MANIFEST_RESOURCE_ID" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(1))))
            </code>
                </value>
            </constant>
            <constant name="MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(16))))
            </code>
                </value>
            </constant>
            <constant name="wvsprintf" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, sbyte*, int&gt;</type>
                <value>
                    <deref>
                        <code>wvsprintfW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="wsprintf" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>wsprintfW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SETWALLPAPER_DEFAULT" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((ushort*)-1)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="SB_HORZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SB_VERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SB_CTL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SB_BOTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SB_LINEUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SB_LINELEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SB_LINEDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SB_LINERIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SB_PAGEUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SB_PAGELEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SB_PAGEDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SB_PAGERIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SB_THUMBPOSITION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SB_THUMBTRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="SB_TOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="SB_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="SB_BOTTOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="SB_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="SB_ENDSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="SW_HIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SW_SHOWNORMAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SW_NORMAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SW_SHOWMINIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SW_SHOWMAXIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SW_MAXIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SW_SHOWNOACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SW_SHOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="SW_MINIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="SW_SHOWMINNOACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="SW_SHOWNA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="SW_RESTORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="SW_SHOWDEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="SW_FORCEMINIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="SW_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="HIDE_WINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SHOW_OPENWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SHOW_ICONWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SHOW_FULLSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SHOW_OPENNOACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SW_PARENTCLOSING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SW_OTHERZOOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SW_PARENTOPENING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SW_OTHERUNZOOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="AW_HOR_POSITIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="AW_HOR_NEGATIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="AW_VER_POSITIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="AW_VER_NEGATIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="AW_CENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="AW_HIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="AW_ACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="AW_SLIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="AW_BLEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="KF_EXTENDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="KF_DLGMODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="KF_MENUMODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="KF_ALTDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="KF_REPEAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="KF_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="VK_LBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01
            </code>
                </value>
            </constant>
            <constant name="VK_RBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02
            </code>
                </value>
            </constant>
            <constant name="VK_CANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x03
            </code>
                </value>
            </constant>
            <constant name="VK_MBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04
            </code>
                </value>
            </constant>
            <constant name="VK_XBUTTON1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x05
            </code>
                </value>
            </constant>
            <constant name="VK_XBUTTON2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x06
            </code>
                </value>
            </constant>
            <constant name="VK_BACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08
            </code>
                </value>
            </constant>
            <constant name="VK_TAB" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x09
            </code>
                </value>
            </constant>
            <constant name="VK_CLEAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0C
            </code>
                </value>
            </constant>
            <constant name="VK_RETURN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0D
            </code>
                </value>
            </constant>
            <constant name="VK_SHIFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10
            </code>
                </value>
            </constant>
            <constant name="VK_CONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x11
            </code>
                </value>
            </constant>
            <constant name="VK_MENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x12
            </code>
                </value>
            </constant>
            <constant name="VK_PAUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x13
            </code>
                </value>
            </constant>
            <constant name="VK_CAPITAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x14
            </code>
                </value>
            </constant>
            <constant name="VK_KANA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x15
            </code>
                </value>
            </constant>
            <constant name="VK_HANGEUL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x15
            </code>
                </value>
            </constant>
            <constant name="VK_HANGUL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x15
            </code>
                </value>
            </constant>
            <constant name="VK_IME_ON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x16
            </code>
                </value>
            </constant>
            <constant name="VK_JUNJA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x17
            </code>
                </value>
            </constant>
            <constant name="VK_FINAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x18
            </code>
                </value>
            </constant>
            <constant name="VK_HANJA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x19
            </code>
                </value>
            </constant>
            <constant name="VK_KANJI" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x19
            </code>
                </value>
            </constant>
            <constant name="VK_IME_OFF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1A
            </code>
                </value>
            </constant>
            <constant name="VK_ESCAPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1B
            </code>
                </value>
            </constant>
            <constant name="VK_CONVERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1C
            </code>
                </value>
            </constant>
            <constant name="VK_NONCONVERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1D
            </code>
                </value>
            </constant>
            <constant name="VK_ACCEPT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1E
            </code>
                </value>
            </constant>
            <constant name="VK_MODECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1F
            </code>
                </value>
            </constant>
            <constant name="VK_SPACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20
            </code>
                </value>
            </constant>
            <constant name="VK_PRIOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x21
            </code>
                </value>
            </constant>
            <constant name="VK_NEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x22
            </code>
                </value>
            </constant>
            <constant name="VK_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x23
            </code>
                </value>
            </constant>
            <constant name="VK_HOME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x24
            </code>
                </value>
            </constant>
            <constant name="VK_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x25
            </code>
                </value>
            </constant>
            <constant name="VK_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x26
            </code>
                </value>
            </constant>
            <constant name="VK_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x27
            </code>
                </value>
            </constant>
            <constant name="VK_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x28
            </code>
                </value>
            </constant>
            <constant name="VK_SELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x29
            </code>
                </value>
            </constant>
            <constant name="VK_PRINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2A
            </code>
                </value>
            </constant>
            <constant name="VK_EXECUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2B
            </code>
                </value>
            </constant>
            <constant name="VK_SNAPSHOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2C
            </code>
                </value>
            </constant>
            <constant name="VK_INSERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2D
            </code>
                </value>
            </constant>
            <constant name="VK_DELETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2E
            </code>
                </value>
            </constant>
            <constant name="VK_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2F
            </code>
                </value>
            </constant>
            <constant name="VK_LWIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x5B
            </code>
                </value>
            </constant>
            <constant name="VK_RWIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x5C
            </code>
                </value>
            </constant>
            <constant name="VK_APPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x5D
            </code>
                </value>
            </constant>
            <constant name="VK_SLEEP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x5F
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD0" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x60
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x61
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x62
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD3" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x63
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD4" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x64
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD5" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x65
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD6" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x66
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD7" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x67
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD8" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x68
            </code>
                </value>
            </constant>
            <constant name="VK_NUMPAD9" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x69
            </code>
                </value>
            </constant>
            <constant name="VK_MULTIPLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x6A
            </code>
                </value>
            </constant>
            <constant name="VK_ADD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x6B
            </code>
                </value>
            </constant>
            <constant name="VK_SEPARATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x6C
            </code>
                </value>
            </constant>
            <constant name="VK_SUBTRACT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x6D
            </code>
                </value>
            </constant>
            <constant name="VK_DECIMAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x6E
            </code>
                </value>
            </constant>
            <constant name="VK_DIVIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x6F
            </code>
                </value>
            </constant>
            <constant name="VK_F1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x70
            </code>
                </value>
            </constant>
            <constant name="VK_F2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x71
            </code>
                </value>
            </constant>
            <constant name="VK_F3" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x72
            </code>
                </value>
            </constant>
            <constant name="VK_F4" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x73
            </code>
                </value>
            </constant>
            <constant name="VK_F5" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x74
            </code>
                </value>
            </constant>
            <constant name="VK_F6" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x75
            </code>
                </value>
            </constant>
            <constant name="VK_F7" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x76
            </code>
                </value>
            </constant>
            <constant name="VK_F8" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x77
            </code>
                </value>
            </constant>
            <constant name="VK_F9" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x78
            </code>
                </value>
            </constant>
            <constant name="VK_F10" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x79
            </code>
                </value>
            </constant>
            <constant name="VK_F11" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7A
            </code>
                </value>
            </constant>
            <constant name="VK_F12" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7B
            </code>
                </value>
            </constant>
            <constant name="VK_F13" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7C
            </code>
                </value>
            </constant>
            <constant name="VK_F14" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7D
            </code>
                </value>
            </constant>
            <constant name="VK_F15" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7E
            </code>
                </value>
            </constant>
            <constant name="VK_F16" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7F
            </code>
                </value>
            </constant>
            <constant name="VK_F17" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x80
            </code>
                </value>
            </constant>
            <constant name="VK_F18" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x81
            </code>
                </value>
            </constant>
            <constant name="VK_F19" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x82
            </code>
                </value>
            </constant>
            <constant name="VK_F20" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x83
            </code>
                </value>
            </constant>
            <constant name="VK_F21" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x84
            </code>
                </value>
            </constant>
            <constant name="VK_F22" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x85
            </code>
                </value>
            </constant>
            <constant name="VK_F23" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x86
            </code>
                </value>
            </constant>
            <constant name="VK_F24" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x87
            </code>
                </value>
            </constant>
            <constant name="VK_NAVIGATION_VIEW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x88
            </code>
                </value>
            </constant>
            <constant name="VK_NAVIGATION_MENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x89
            </code>
                </value>
            </constant>
            <constant name="VK_NAVIGATION_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8A
            </code>
                </value>
            </constant>
            <constant name="VK_NAVIGATION_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8B
            </code>
                </value>
            </constant>
            <constant name="VK_NAVIGATION_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8C
            </code>
                </value>
            </constant>
            <constant name="VK_NAVIGATION_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8D
            </code>
                </value>
            </constant>
            <constant name="VK_NAVIGATION_ACCEPT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8E
            </code>
                </value>
            </constant>
            <constant name="VK_NAVIGATION_CANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8F
            </code>
                </value>
            </constant>
            <constant name="VK_NUMLOCK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x90
            </code>
                </value>
            </constant>
            <constant name="VK_SCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x91
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_NEC_EQUAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x92
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_FJ_JISHO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x92
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_FJ_MASSHOU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x93
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_FJ_TOUROKU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x94
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_FJ_LOYA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x95
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_FJ_ROYA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x96
            </code>
                </value>
            </constant>
            <constant name="VK_LSHIFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA0
            </code>
                </value>
            </constant>
            <constant name="VK_RSHIFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA1
            </code>
                </value>
            </constant>
            <constant name="VK_LCONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA2
            </code>
                </value>
            </constant>
            <constant name="VK_RCONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA3
            </code>
                </value>
            </constant>
            <constant name="VK_LMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA4
            </code>
                </value>
            </constant>
            <constant name="VK_RMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA5
            </code>
                </value>
            </constant>
            <constant name="VK_BROWSER_BACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA6
            </code>
                </value>
            </constant>
            <constant name="VK_BROWSER_FORWARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA7
            </code>
                </value>
            </constant>
            <constant name="VK_BROWSER_REFRESH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA8
            </code>
                </value>
            </constant>
            <constant name="VK_BROWSER_STOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA9
            </code>
                </value>
            </constant>
            <constant name="VK_BROWSER_SEARCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xAA
            </code>
                </value>
            </constant>
            <constant name="VK_BROWSER_FAVORITES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xAB
            </code>
                </value>
            </constant>
            <constant name="VK_BROWSER_HOME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xAC
            </code>
                </value>
            </constant>
            <constant name="VK_VOLUME_MUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xAD
            </code>
                </value>
            </constant>
            <constant name="VK_VOLUME_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xAE
            </code>
                </value>
            </constant>
            <constant name="VK_VOLUME_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xAF
            </code>
                </value>
            </constant>
            <constant name="VK_MEDIA_NEXT_TRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xB0
            </code>
                </value>
            </constant>
            <constant name="VK_MEDIA_PREV_TRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xB1
            </code>
                </value>
            </constant>
            <constant name="VK_MEDIA_STOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xB2
            </code>
                </value>
            </constant>
            <constant name="VK_MEDIA_PLAY_PAUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xB3
            </code>
                </value>
            </constant>
            <constant name="VK_LAUNCH_MAIL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xB4
            </code>
                </value>
            </constant>
            <constant name="VK_LAUNCH_MEDIA_SELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xB5
            </code>
                </value>
            </constant>
            <constant name="VK_LAUNCH_APP1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xB6
            </code>
                </value>
            </constant>
            <constant name="VK_LAUNCH_APP2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xB7
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xBA
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_PLUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xBB
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_COMMA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xBC
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_MINUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xBD
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_PERIOD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xBE
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xBF
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_3" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xC0
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_A" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xC3
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_B" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xC4
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_X" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xC5
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_Y" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xC6
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_RIGHT_SHOULDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xC7
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_LEFT_SHOULDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xC8
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_LEFT_TRIGGER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xC9
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_RIGHT_TRIGGER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xCA
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_DPAD_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xCB
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_DPAD_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xCC
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_DPAD_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xCD
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_DPAD_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xCE
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_MENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xCF
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_VIEW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD0
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD1
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD2
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_LEFT_THUMBSTICK_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD3
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_LEFT_THUMBSTICK_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD4
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD5
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_LEFT_THUMBSTICK_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD6
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_RIGHT_THUMBSTICK_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD7
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD8
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xD9
            </code>
                </value>
            </constant>
            <constant name="VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xDA
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_4" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xDB
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_5" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xDC
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_6" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xDD
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_7" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xDE
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_8" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xDF
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_AX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xE1
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_102" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xE2
            </code>
                </value>
            </constant>
            <constant name="VK_ICO_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xE3
            </code>
                </value>
            </constant>
            <constant name="VK_ICO_00" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xE4
            </code>
                </value>
            </constant>
            <constant name="VK_PROCESSKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xE5
            </code>
                </value>
            </constant>
            <constant name="VK_ICO_CLEAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xE6
            </code>
                </value>
            </constant>
            <constant name="VK_PACKET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xE7
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_RESET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xE9
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_JUMP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xEA
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_PA1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xEB
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_PA2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xEC
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_PA3" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xED
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_WSCTRL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xEE
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_CUSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xEF
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_ATTN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF0
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_FINISH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF1
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_COPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF2
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_AUTO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF3
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_ENLW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF4
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_BACKTAB" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF5
            </code>
                </value>
            </constant>
            <constant name="VK_ATTN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF6
            </code>
                </value>
            </constant>
            <constant name="VK_CRSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF7
            </code>
                </value>
            </constant>
            <constant name="VK_EXSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF8
            </code>
                </value>
            </constant>
            <constant name="VK_EREOF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF9
            </code>
                </value>
            </constant>
            <constant name="VK_PLAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xFA
            </code>
                </value>
            </constant>
            <constant name="VK_ZOOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xFB
            </code>
                </value>
            </constant>
            <constant name="VK_NONAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xFC
            </code>
                </value>
            </constant>
            <constant name="VK_PA1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xFD
            </code>
                </value>
            </constant>
            <constant name="VK_OEM_CLEAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xFE
            </code>
                </value>
            </constant>
            <constant name="WH_MIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="WH_MSGFILTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="WH_JOURNALRECORD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="WH_JOURNALPLAYBACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="WH_KEYBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="WH_GETMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="WH_CALLWNDPROC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="WH_CBT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="WH_SYSMSGFILTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="WH_MOUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="WH_DEBUG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="WH_SHELL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="WH_FOREGROUNDIDLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="WH_CALLWNDPROCRET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="WH_KEYBOARD_LL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="WH_MOUSE_LL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="WH_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="WH_MINHOOK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="WH_MAXHOOK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="HC_ACTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="HC_GETNEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="HC_SKIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="HC_NOREMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="HC_NOREM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="HC_SYSMODALON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="HC_SYSMODALOFF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="HCBT_MOVESIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="HCBT_MINMAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="HCBT_QS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="HCBT_CREATEWND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="HCBT_DESTROYWND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="HCBT_ACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="HCBT_CLICKSKIPPED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="HCBT_KEYSKIPPED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="HCBT_SYSCOMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="HCBT_SETFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="WTS_CONSOLE_CONNECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1
            </code>
                </value>
            </constant>
            <constant name="WTS_CONSOLE_DISCONNECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2
            </code>
                </value>
            </constant>
            <constant name="WTS_REMOTE_CONNECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x3
            </code>
                </value>
            </constant>
            <constant name="WTS_REMOTE_DISCONNECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4
            </code>
                </value>
            </constant>
            <constant name="WTS_SESSION_LOGON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x5
            </code>
                </value>
            </constant>
            <constant name="WTS_SESSION_LOGOFF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x6
            </code>
                </value>
            </constant>
            <constant name="WTS_SESSION_LOCK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7
            </code>
                </value>
            </constant>
            <constant name="WTS_SESSION_UNLOCK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8
            </code>
                </value>
            </constant>
            <constant name="WTS_SESSION_REMOTE_CONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x9
            </code>
                </value>
            </constant>
            <constant name="WTS_SESSION_CREATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xa
            </code>
                </value>
            </constant>
            <constant name="WTS_SESSION_TERMINATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xb
            </code>
                </value>
            </constant>
            <constant name="MSGF_DIALOGBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="MSGF_MESSAGEBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="MSGF_MENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="MSGF_SCROLLBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="MSGF_NEXTWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="MSGF_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="MSGF_USER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4096
            </code>
                </value>
            </constant>
            <constant name="HSHELL_WINDOWCREATED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="HSHELL_WINDOWDESTROYED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="HSHELL_ACTIVATESHELLWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="HSHELL_WINDOWACTIVATED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="HSHELL_GETMINRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="HSHELL_REDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="HSHELL_TASKMAN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="HSHELL_LANGUAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="HSHELL_SYSMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="HSHELL_ENDTASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="HSHELL_ACCESSIBILITYSTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="HSHELL_APPCOMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="HSHELL_WINDOWREPLACED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="HSHELL_WINDOWREPLACING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="HSHELL_MONITORCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="HSHELL_HIGHBIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="HSHELL_FLASH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(6 | 0x8000)
            </code>
                </value>
            </constant>
            <constant name="HSHELL_RUDEAPPACTIVATED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(4 | 0x8000)
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BROWSER_BACKWARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BROWSER_FORWARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BROWSER_REFRESH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BROWSER_STOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BROWSER_SEARCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BROWSER_FAVORITES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BROWSER_HOME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_VOLUME_MUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_VOLUME_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_VOLUME_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_NEXTTRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_PREVIOUSTRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_STOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_PLAY_PAUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_LAUNCH_MAIL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>15
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_LAUNCH_MEDIA_SELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_LAUNCH_APP1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>17
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_LAUNCH_APP2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>18
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BASS_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>19
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BASS_BOOST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_BASS_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>21
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_TREBLE_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>22
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_TREBLE_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>23
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MICROPHONE_VOLUME_MUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>24
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MICROPHONE_VOLUME_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>25
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MICROPHONE_VOLUME_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>26
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>27
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_FIND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_NEW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>29
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_OPEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>30
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_CLOSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>31
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_SAVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>32
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_PRINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>33
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_UNDO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>34
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_REDO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>35
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_COPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>36
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_CUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>37
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_PASTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>38
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_REPLY_TO_MAIL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>39
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_FORWARD_MAIL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>40
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_SEND_MAIL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>41
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_SPELL_CHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>42
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>43
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MIC_ON_OFF_TOGGLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>44
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_CORRECTION_LIST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>45
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_PLAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>46
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_PAUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>47
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_RECORD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>48
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_FAST_FORWARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>49
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_REWIND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>50
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_CHANNEL_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>51
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_MEDIA_CHANNEL_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>52
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_DELETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>53
            </code>
                </value>
            </constant>
            <constant name="APPCOMMAND_DWM_FLIP3D" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>54
            </code>
                </value>
            </constant>
            <constant name="FAPPCOMMAND_MOUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="FAPPCOMMAND_KEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="FAPPCOMMAND_OEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="FAPPCOMMAND_MASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF000
            </code>
                </value>
            </constant>
            <constant name="LLKHF_EXTENDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0100 &gt;&gt; 8)
            </code>
                </value>
            </constant>
            <constant name="LLKHF_INJECTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="LLKHF_ALTDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x2000 &gt;&gt; 8)
            </code>
                </value>
            </constant>
            <constant name="LLKHF_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x8000 &gt;&gt; 8)
            </code>
                </value>
            </constant>
            <constant name="LLKHF_LOWER_IL_INJECTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="LLMHF_INJECTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="LLMHF_LOWER_IL_INJECTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="HKL_PREV" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="HKL_NEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="KLF_ACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="KLF_SUBSTITUTE_OK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="KLF_REORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="KLF_REPLACELANG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="KLF_NOTELLSHELL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="KLF_SETFORPROCESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="KLF_SHIFTLOCK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="KLF_RESET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="INPUTLANGCHANGE_SYSCHARSET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="INPUTLANGCHANGE_FORWARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="INPUTLANGCHANGE_BACKWARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="KL_NAMELENGTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="LoadKeyboardLayout" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadKeyboardLayoutW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetKeyboardLayoutName" access="public">
                <type primitive="False">delegate*&lt;ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>GetKeyboardLayoutNameW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GMMP_USE_DISPLAY_POINTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="GMMP_USE_HIGH_RESOLUTION_POINTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_READOBJECTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_CREATEWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_CREATEMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_HOOKCONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_JOURNALRECORD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_JOURNALPLAYBACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_ENUMERATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_WRITEOBJECTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="DESKTOP_SWITCHDESKTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="DF_ALLOWOTHERACCOUNTHOOK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="CreateDesktop" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, DEVMODEW*, uint, uint, SECURITY_ATTRIBUTES*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>CreateDesktopW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CreateDesktopEx" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, DEVMODEW*, uint, uint, SECURITY_ATTRIBUTES*, uint, void*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>CreateDesktopExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="OpenDesktop" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, int, uint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>OpenDesktopW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="EnumDesktops" access="public">
                <type primitive="False">delegate*&lt;IntPtr, delegate* unmanaged&lt;ushort*, nint, int&gt;, nint, int&gt;</type>
                <value>
                    <deref>
                        <code>EnumDesktopsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="WINSTA_ENUMDESKTOPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="WINSTA_READATTRIBUTES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="WINSTA_ACCESSCLIPBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="WINSTA_CREATEDESKTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="WINSTA_WRITEATTRIBUTES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="WINSTA_ACCESSGLOBALATOMS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="WINSTA_EXITWINDOWS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="WINSTA_ENUMERATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="WINSTA_READSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="WINSTA_ALL_ACCESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0100 | 0x0200)
            </code>
                </value>
            </constant>
            <constant name="CWF_CREATE_ONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="WSF_VISIBLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="CreateWindowStation" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, uint, SECURITY_ATTRIBUTES*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>CreateWindowStationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="OpenWindowStation" access="public">
                <type primitive="False">delegate*&lt;ushort*, int, uint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>OpenWindowStationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="EnumWindowStations" access="public">
                <type primitive="False">delegate*&lt;delegate* unmanaged&lt;ushort*, nint, int&gt;, nint, int&gt;</type>
                <value>
                    <deref>
                        <code>EnumWindowStationsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="UOI_FLAGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="UOI_NAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="UOI_TYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="UOI_USER_SID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="UOI_HEAPSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="UOI_IO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="UOI_TIMERPROC_EXCEPTION_SUPPRESSION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="GetUserObjectInformation" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, void*, uint, uint*, int&gt;</type>
                <value>
                    <deref>
                        <code>GetUserObjectInformationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetUserObjectInformation" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, void*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>SetUserObjectInformationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GWL_WNDPROC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-4)
            </code>
                </value>
            </constant>
            <constant name="GWL_HINSTANCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-6)
            </code>
                </value>
            </constant>
            <constant name="GWL_HWNDPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-8)
            </code>
                </value>
            </constant>
            <constant name="GWL_STYLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-16)
            </code>
                </value>
            </constant>
            <constant name="GWL_EXSTYLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-20)
            </code>
                </value>
            </constant>
            <constant name="GWL_USERDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-21)
            </code>
                </value>
            </constant>
            <constant name="GWL_ID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-12)
            </code>
                </value>
            </constant>
            <constant name="GWLP_WNDPROC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-4)
            </code>
                </value>
            </constant>
            <constant name="GWLP_HINSTANCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-6)
            </code>
                </value>
            </constant>
            <constant name="GWLP_HWNDPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-8)
            </code>
                </value>
            </constant>
            <constant name="GWLP_USERDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-21)
            </code>
                </value>
            </constant>
            <constant name="GWLP_ID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-12)
            </code>
                </value>
            </constant>
            <constant name="GCL_MENUNAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-8)
            </code>
                </value>
            </constant>
            <constant name="GCL_HBRBACKGROUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-10)
            </code>
                </value>
            </constant>
            <constant name="GCL_HCURSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-12)
            </code>
                </value>
            </constant>
            <constant name="GCL_HICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-14)
            </code>
                </value>
            </constant>
            <constant name="GCL_HMODULE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-16)
            </code>
                </value>
            </constant>
            <constant name="GCL_CBWNDEXTRA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-18)
            </code>
                </value>
            </constant>
            <constant name="GCL_CBCLSEXTRA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-20)
            </code>
                </value>
            </constant>
            <constant name="GCL_WNDPROC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-24)
            </code>
                </value>
            </constant>
            <constant name="GCL_STYLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-26)
            </code>
                </value>
            </constant>
            <constant name="GCW_ATOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-32)
            </code>
                </value>
            </constant>
            <constant name="GCL_HICONSM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-34)
            </code>
                </value>
            </constant>
            <constant name="GCLP_MENUNAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-8)
            </code>
                </value>
            </constant>
            <constant name="GCLP_HBRBACKGROUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-10)
            </code>
                </value>
            </constant>
            <constant name="GCLP_HCURSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-12)
            </code>
                </value>
            </constant>
            <constant name="GCLP_HICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-14)
            </code>
                </value>
            </constant>
            <constant name="GCLP_HMODULE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-16)
            </code>
                </value>
            </constant>
            <constant name="GCLP_WNDPROC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-24)
            </code>
                </value>
            </constant>
            <constant name="GCLP_HICONSM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-34)
            </code>
                </value>
            </constant>
            <constant name="WM_NULL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="WM_CREATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="WM_DESTROY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="WM_MOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="WM_SIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0005
            </code>
                </value>
            </constant>
            <constant name="WM_ACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0006
            </code>
                </value>
            </constant>
            <constant name="WA_INACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="WA_ACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="WA_CLICKACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="WM_SETFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0007
            </code>
                </value>
            </constant>
            <constant name="WM_KILLFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="WM_ENABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000A
            </code>
                </value>
            </constant>
            <constant name="WM_SETREDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000B
            </code>
                </value>
            </constant>
            <constant name="WM_SETTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000C
            </code>
                </value>
            </constant>
            <constant name="WM_GETTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000D
            </code>
                </value>
            </constant>
            <constant name="WM_GETTEXTLENGTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000E
            </code>
                </value>
            </constant>
            <constant name="WM_PAINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000F
            </code>
                </value>
            </constant>
            <constant name="WM_CLOSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="WM_QUERYENDSESSION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0011
            </code>
                </value>
            </constant>
            <constant name="WM_QUERYOPEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0013
            </code>
                </value>
            </constant>
            <constant name="WM_ENDSESSION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0016
            </code>
                </value>
            </constant>
            <constant name="WM_QUIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0012
            </code>
                </value>
            </constant>
            <constant name="WM_ERASEBKGND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0014
            </code>
                </value>
            </constant>
            <constant name="WM_SYSCOLORCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0015
            </code>
                </value>
            </constant>
            <constant name="WM_SHOWWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0018
            </code>
                </value>
            </constant>
            <constant name="WM_WININICHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x001A
            </code>
                </value>
            </constant>
            <constant name="WM_SETTINGCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x001A
            </code>
                </value>
            </constant>
            <constant name="WM_DEVMODECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x001B
            </code>
                </value>
            </constant>
            <constant name="WM_ACTIVATEAPP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x001C
            </code>
                </value>
            </constant>
            <constant name="WM_FONTCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x001D
            </code>
                </value>
            </constant>
            <constant name="WM_TIMECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x001E
            </code>
                </value>
            </constant>
            <constant name="WM_CANCELMODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x001F
            </code>
                </value>
            </constant>
            <constant name="WM_SETCURSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="WM_MOUSEACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0021
            </code>
                </value>
            </constant>
            <constant name="WM_CHILDACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0022
            </code>
                </value>
            </constant>
            <constant name="WM_QUEUESYNC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0023
            </code>
                </value>
            </constant>
            <constant name="WM_GETMINMAXINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0024
            </code>
                </value>
            </constant>
            <constant name="WM_PAINTICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0026
            </code>
                </value>
            </constant>
            <constant name="WM_ICONERASEBKGND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0027
            </code>
                </value>
            </constant>
            <constant name="WM_NEXTDLGCTL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0028
            </code>
                </value>
            </constant>
            <constant name="WM_SPOOLERSTATUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x002A
            </code>
                </value>
            </constant>
            <constant name="WM_DRAWITEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x002B
            </code>
                </value>
            </constant>
            <constant name="WM_MEASUREITEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x002C
            </code>
                </value>
            </constant>
            <constant name="WM_DELETEITEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x002D
            </code>
                </value>
            </constant>
            <constant name="WM_VKEYTOITEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x002E
            </code>
                </value>
            </constant>
            <constant name="WM_CHARTOITEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x002F
            </code>
                </value>
            </constant>
            <constant name="WM_SETFONT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0030
            </code>
                </value>
            </constant>
            <constant name="WM_GETFONT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0031
            </code>
                </value>
            </constant>
            <constant name="WM_SETHOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0032
            </code>
                </value>
            </constant>
            <constant name="WM_GETHOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0033
            </code>
                </value>
            </constant>
            <constant name="WM_QUERYDRAGICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0037
            </code>
                </value>
            </constant>
            <constant name="WM_COMPAREITEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0039
            </code>
                </value>
            </constant>
            <constant name="WM_GETOBJECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x003D
            </code>
                </value>
            </constant>
            <constant name="WM_COMPACTING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0041
            </code>
                </value>
            </constant>
            <constant name="WM_COMMNOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0044
            </code>
                </value>
            </constant>
            <constant name="WM_WINDOWPOSCHANGING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0046
            </code>
                </value>
            </constant>
            <constant name="WM_WINDOWPOSCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0047
            </code>
                </value>
            </constant>
            <constant name="WM_POWER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0048
            </code>
                </value>
            </constant>
            <constant name="PWR_OK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="PWR_FAIL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="PWR_SUSPENDREQUEST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="PWR_SUSPENDRESUME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="PWR_CRITICALRESUME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="WM_COPYDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x004A
            </code>
                </value>
            </constant>
            <constant name="WM_CANCELJOURNAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x004B
            </code>
                </value>
            </constant>
            <constant name="WM_NOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x004E
            </code>
                </value>
            </constant>
            <constant name="WM_INPUTLANGCHANGEREQUEST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0050
            </code>
                </value>
            </constant>
            <constant name="WM_INPUTLANGCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0051
            </code>
                </value>
            </constant>
            <constant name="WM_TCARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0052
            </code>
                </value>
            </constant>
            <constant name="WM_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0053
            </code>
                </value>
            </constant>
            <constant name="WM_USERCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0054
            </code>
                </value>
            </constant>
            <constant name="WM_NOTIFYFORMAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0055
            </code>
                </value>
            </constant>
            <constant name="NFR_ANSI" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="NFR_UNICODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="NF_QUERY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="NF_REQUERY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="WM_CONTEXTMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x007B
            </code>
                </value>
            </constant>
            <constant name="WM_STYLECHANGING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x007C
            </code>
                </value>
            </constant>
            <constant name="WM_STYLECHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x007D
            </code>
                </value>
            </constant>
            <constant name="WM_DISPLAYCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x007E
            </code>
                </value>
            </constant>
            <constant name="WM_GETICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x007F
            </code>
                </value>
            </constant>
            <constant name="WM_SETICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="WM_NCCREATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0081
            </code>
                </value>
            </constant>
            <constant name="WM_NCDESTROY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0082
            </code>
                </value>
            </constant>
            <constant name="WM_NCCALCSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0083
            </code>
                </value>
            </constant>
            <constant name="WM_NCHITTEST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0084
            </code>
                </value>
            </constant>
            <constant name="WM_NCPAINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0085
            </code>
                </value>
            </constant>
            <constant name="WM_NCACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0086
            </code>
                </value>
            </constant>
            <constant name="WM_GETDLGCODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0087
            </code>
                </value>
            </constant>
            <constant name="WM_SYNCPAINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0088
            </code>
                </value>
            </constant>
            <constant name="WM_NCMOUSEMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A0
            </code>
                </value>
            </constant>
            <constant name="WM_NCLBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A1
            </code>
                </value>
            </constant>
            <constant name="WM_NCLBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A2
            </code>
                </value>
            </constant>
            <constant name="WM_NCLBUTTONDBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A3
            </code>
                </value>
            </constant>
            <constant name="WM_NCRBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A4
            </code>
                </value>
            </constant>
            <constant name="WM_NCRBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A5
            </code>
                </value>
            </constant>
            <constant name="WM_NCRBUTTONDBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A6
            </code>
                </value>
            </constant>
            <constant name="WM_NCMBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A7
            </code>
                </value>
            </constant>
            <constant name="WM_NCMBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A8
            </code>
                </value>
            </constant>
            <constant name="WM_NCMBUTTONDBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00A9
            </code>
                </value>
            </constant>
            <constant name="WM_NCXBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00AB
            </code>
                </value>
            </constant>
            <constant name="WM_NCXBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00AC
            </code>
                </value>
            </constant>
            <constant name="WM_NCXBUTTONDBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00AD
            </code>
                </value>
            </constant>
            <constant name="WM_INPUT_DEVICE_CHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00FE
            </code>
                </value>
            </constant>
            <constant name="WM_INPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00FF
            </code>
                </value>
            </constant>
            <constant name="WM_KEYFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="WM_KEYDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="WM_KEYUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0101
            </code>
                </value>
            </constant>
            <constant name="WM_CHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0102
            </code>
                </value>
            </constant>
            <constant name="WM_DEADCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0103
            </code>
                </value>
            </constant>
            <constant name="WM_SYSKEYDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0104
            </code>
                </value>
            </constant>
            <constant name="WM_SYSKEYUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0105
            </code>
                </value>
            </constant>
            <constant name="WM_SYSCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0106
            </code>
                </value>
            </constant>
            <constant name="WM_SYSDEADCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0107
            </code>
                </value>
            </constant>
            <constant name="WM_UNICHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0109
            </code>
                </value>
            </constant>
            <constant name="WM_KEYLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0109
            </code>
                </value>
            </constant>
            <constant name="UNICODE_NOCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xFFFF
            </code>
                </value>
            </constant>
            <constant name="WM_IME_STARTCOMPOSITION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x010D
            </code>
                </value>
            </constant>
            <constant name="WM_IME_ENDCOMPOSITION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x010E
            </code>
                </value>
            </constant>
            <constant name="WM_IME_COMPOSITION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x010F
            </code>
                </value>
            </constant>
            <constant name="WM_IME_KEYLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x010F
            </code>
                </value>
            </constant>
            <constant name="WM_INITDIALOG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0110
            </code>
                </value>
            </constant>
            <constant name="WM_COMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0111
            </code>
                </value>
            </constant>
            <constant name="WM_SYSCOMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0112
            </code>
                </value>
            </constant>
            <constant name="WM_TIMER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0113
            </code>
                </value>
            </constant>
            <constant name="WM_HSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0114
            </code>
                </value>
            </constant>
            <constant name="WM_VSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0115
            </code>
                </value>
            </constant>
            <constant name="WM_INITMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0116
            </code>
                </value>
            </constant>
            <constant name="WM_INITMENUPOPUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0117
            </code>
                </value>
            </constant>
            <constant name="WM_GESTURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0119
            </code>
                </value>
            </constant>
            <constant name="WM_GESTURENOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x011A
            </code>
                </value>
            </constant>
            <constant name="WM_MENUSELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x011F
            </code>
                </value>
            </constant>
            <constant name="WM_MENUCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0120
            </code>
                </value>
            </constant>
            <constant name="WM_ENTERIDLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0121
            </code>
                </value>
            </constant>
            <constant name="WM_MENURBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0122
            </code>
                </value>
            </constant>
            <constant name="WM_MENUDRAG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0123
            </code>
                </value>
            </constant>
            <constant name="WM_MENUGETOBJECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0124
            </code>
                </value>
            </constant>
            <constant name="WM_UNINITMENUPOPUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0125
            </code>
                </value>
            </constant>
            <constant name="WM_MENUCOMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0126
            </code>
                </value>
            </constant>
            <constant name="WM_CHANGEUISTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0127
            </code>
                </value>
            </constant>
            <constant name="WM_UPDATEUISTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0128
            </code>
                </value>
            </constant>
            <constant name="WM_QUERYUISTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0129
            </code>
                </value>
            </constant>
            <constant name="UIS_SET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="UIS_CLEAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="UIS_INITIALIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="UISF_HIDEFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1
            </code>
                </value>
            </constant>
            <constant name="UISF_HIDEACCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2
            </code>
                </value>
            </constant>
            <constant name="UISF_ACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4
            </code>
                </value>
            </constant>
            <constant name="WM_CTLCOLORMSGBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0132
            </code>
                </value>
            </constant>
            <constant name="WM_CTLCOLOREDIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0133
            </code>
                </value>
            </constant>
            <constant name="WM_CTLCOLORLISTBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0134
            </code>
                </value>
            </constant>
            <constant name="WM_CTLCOLORBTN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0135
            </code>
                </value>
            </constant>
            <constant name="WM_CTLCOLORDLG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0136
            </code>
                </value>
            </constant>
            <constant name="WM_CTLCOLORSCROLLBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0137
            </code>
                </value>
            </constant>
            <constant name="WM_CTLCOLORSTATIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0138
            </code>
                </value>
            </constant>
            <constant name="MN_GETHMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01E1
            </code>
                </value>
            </constant>
            <constant name="WM_MOUSEFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="WM_MOUSEMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="WM_LBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0201
            </code>
                </value>
            </constant>
            <constant name="WM_LBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0202
            </code>
                </value>
            </constant>
            <constant name="WM_LBUTTONDBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0203
            </code>
                </value>
            </constant>
            <constant name="WM_RBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0204
            </code>
                </value>
            </constant>
            <constant name="WM_RBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0205
            </code>
                </value>
            </constant>
            <constant name="WM_RBUTTONDBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0206
            </code>
                </value>
            </constant>
            <constant name="WM_MBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0207
            </code>
                </value>
            </constant>
            <constant name="WM_MBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0208
            </code>
                </value>
            </constant>
            <constant name="WM_MBUTTONDBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0209
            </code>
                </value>
            </constant>
            <constant name="WM_MOUSEWHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x020A
            </code>
                </value>
            </constant>
            <constant name="WM_XBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x020B
            </code>
                </value>
            </constant>
            <constant name="WM_XBUTTONUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x020C
            </code>
                </value>
            </constant>
            <constant name="WM_XBUTTONDBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x020D
            </code>
                </value>
            </constant>
            <constant name="WM_MOUSEHWHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x020E
            </code>
                </value>
            </constant>
            <constant name="WM_MOUSELAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x020E
            </code>
                </value>
            </constant>
            <constant name="WHEEL_DELTA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>120
            </code>
                </value>
            </constant>
            <constant name="WHEEL_PAGESCROLL" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0xffffffff)
            </code>
                </value>
            </constant>
            <constant name="XBUTTON1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="XBUTTON2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="WM_PARENTNOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0210
            </code>
                </value>
            </constant>
            <constant name="WM_ENTERMENULOOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0211
            </code>
                </value>
            </constant>
            <constant name="WM_EXITMENULOOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0212
            </code>
                </value>
            </constant>
            <constant name="WM_NEXTMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0213
            </code>
                </value>
            </constant>
            <constant name="WM_SIZING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0214
            </code>
                </value>
            </constant>
            <constant name="WM_CAPTURECHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0215
            </code>
                </value>
            </constant>
            <constant name="WM_MOVING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0216
            </code>
                </value>
            </constant>
            <constant name="WM_POWERBROADCAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0218
            </code>
                </value>
            </constant>
            <constant name="PBT_APMQUERYSUSPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="PBT_APMQUERYSTANDBY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="PBT_APMQUERYSUSPENDFAILED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="PBT_APMQUERYSTANDBYFAILED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="PBT_APMSUSPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="PBT_APMSTANDBY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0005
            </code>
                </value>
            </constant>
            <constant name="PBT_APMRESUMECRITICAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0006
            </code>
                </value>
            </constant>
            <constant name="PBT_APMRESUMESUSPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0007
            </code>
                </value>
            </constant>
            <constant name="PBT_APMRESUMESTANDBY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="PBTF_APMRESUMEFROMFAILURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="PBT_APMBATTERYLOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0009
            </code>
                </value>
            </constant>
            <constant name="PBT_APMPOWERSTATUSCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000A
            </code>
                </value>
            </constant>
            <constant name="PBT_APMOEMEVENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000B
            </code>
                </value>
            </constant>
            <constant name="PBT_APMRESUMEAUTOMATIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0012
            </code>
                </value>
            </constant>
            <constant name="PBT_POWERSETTINGCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8013
            </code>
                </value>
            </constant>
            <constant name="WM_DEVICECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0219
            </code>
                </value>
            </constant>
            <constant name="WM_MDICREATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0220
            </code>
                </value>
            </constant>
            <constant name="WM_MDIDESTROY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0221
            </code>
                </value>
            </constant>
            <constant name="WM_MDIACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0222
            </code>
                </value>
            </constant>
            <constant name="WM_MDIRESTORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0223
            </code>
                </value>
            </constant>
            <constant name="WM_MDINEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0224
            </code>
                </value>
            </constant>
            <constant name="WM_MDIMAXIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0225
            </code>
                </value>
            </constant>
            <constant name="WM_MDITILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0226
            </code>
                </value>
            </constant>
            <constant name="WM_MDICASCADE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0227
            </code>
                </value>
            </constant>
            <constant name="WM_MDIICONARRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0228
            </code>
                </value>
            </constant>
            <constant name="WM_MDIGETACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0229
            </code>
                </value>
            </constant>
            <constant name="WM_MDISETMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0230
            </code>
                </value>
            </constant>
            <constant name="WM_ENTERSIZEMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0231
            </code>
                </value>
            </constant>
            <constant name="WM_EXITSIZEMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0232
            </code>
                </value>
            </constant>
            <constant name="WM_DROPFILES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0233
            </code>
                </value>
            </constant>
            <constant name="WM_MDIREFRESHMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0234
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERDEVICECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x238
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERDEVICEINRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x239
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERDEVICEOUTOFRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x23A
            </code>
                </value>
            </constant>
            <constant name="WM_TOUCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0240
            </code>
                </value>
            </constant>
            <constant name="WM_NCPOINTERUPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0241
            </code>
                </value>
            </constant>
            <constant name="WM_NCPOINTERDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0242
            </code>
                </value>
            </constant>
            <constant name="WM_NCPOINTERUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0243
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERUPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0245
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0246
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0247
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0249
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERLEAVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x024A
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x024B
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERCAPTURECHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x024C
            </code>
                </value>
            </constant>
            <constant name="WM_TOUCHHITTESTING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x024D
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERWHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x024E
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERHWHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x024F
            </code>
                </value>
            </constant>
            <constant name="DM_POINTERHITTEST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0250
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERROUTEDTO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0251
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERROUTEDAWAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0252
            </code>
                </value>
            </constant>
            <constant name="WM_POINTERROUTEDRELEASED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0253
            </code>
                </value>
            </constant>
            <constant name="WM_IME_SETCONTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0281
            </code>
                </value>
            </constant>
            <constant name="WM_IME_NOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0282
            </code>
                </value>
            </constant>
            <constant name="WM_IME_CONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0283
            </code>
                </value>
            </constant>
            <constant name="WM_IME_COMPOSITIONFULL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0284
            </code>
                </value>
            </constant>
            <constant name="WM_IME_SELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0285
            </code>
                </value>
            </constant>
            <constant name="WM_IME_CHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0286
            </code>
                </value>
            </constant>
            <constant name="WM_IME_REQUEST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0288
            </code>
                </value>
            </constant>
            <constant name="WM_IME_KEYDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0290
            </code>
                </value>
            </constant>
            <constant name="WM_IME_KEYUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0291
            </code>
                </value>
            </constant>
            <constant name="WM_MOUSEHOVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02A1
            </code>
                </value>
            </constant>
            <constant name="WM_MOUSELEAVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02A3
            </code>
                </value>
            </constant>
            <constant name="WM_NCMOUSEHOVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02A0
            </code>
                </value>
            </constant>
            <constant name="WM_NCMOUSELEAVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02A2
            </code>
                </value>
            </constant>
            <constant name="WM_WTSSESSION_CHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02B1
            </code>
                </value>
            </constant>
            <constant name="WM_TABLET_FIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02c0
            </code>
                </value>
            </constant>
            <constant name="WM_TABLET_LAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02df
            </code>
                </value>
            </constant>
            <constant name="WM_DPICHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02E0
            </code>
                </value>
            </constant>
            <constant name="WM_DPICHANGED_BEFOREPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02E2
            </code>
                </value>
            </constant>
            <constant name="WM_DPICHANGED_AFTERPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02E3
            </code>
                </value>
            </constant>
            <constant name="WM_GETDPISCALEDSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02E4
            </code>
                </value>
            </constant>
            <constant name="WM_CUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0300
            </code>
                </value>
            </constant>
            <constant name="WM_COPY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0301
            </code>
                </value>
            </constant>
            <constant name="WM_PASTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0302
            </code>
                </value>
            </constant>
            <constant name="WM_CLEAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0303
            </code>
                </value>
            </constant>
            <constant name="WM_UNDO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0304
            </code>
                </value>
            </constant>
            <constant name="WM_RENDERFORMAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0305
            </code>
                </value>
            </constant>
            <constant name="WM_RENDERALLFORMATS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0306
            </code>
                </value>
            </constant>
            <constant name="WM_DESTROYCLIPBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0307
            </code>
                </value>
            </constant>
            <constant name="WM_DRAWCLIPBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0308
            </code>
                </value>
            </constant>
            <constant name="WM_PAINTCLIPBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0309
            </code>
                </value>
            </constant>
            <constant name="WM_VSCROLLCLIPBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x030A
            </code>
                </value>
            </constant>
            <constant name="WM_SIZECLIPBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x030B
            </code>
                </value>
            </constant>
            <constant name="WM_ASKCBFORMATNAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x030C
            </code>
                </value>
            </constant>
            <constant name="WM_CHANGECBCHAIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x030D
            </code>
                </value>
            </constant>
            <constant name="WM_HSCROLLCLIPBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x030E
            </code>
                </value>
            </constant>
            <constant name="WM_QUERYNEWPALETTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x030F
            </code>
                </value>
            </constant>
            <constant name="WM_PALETTEISCHANGING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0310
            </code>
                </value>
            </constant>
            <constant name="WM_PALETTECHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0311
            </code>
                </value>
            </constant>
            <constant name="WM_HOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0312
            </code>
                </value>
            </constant>
            <constant name="WM_PRINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0317
            </code>
                </value>
            </constant>
            <constant name="WM_PRINTCLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0318
            </code>
                </value>
            </constant>
            <constant name="WM_APPCOMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0319
            </code>
                </value>
            </constant>
            <constant name="WM_THEMECHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x031A
            </code>
                </value>
            </constant>
            <constant name="WM_CLIPBOARDUPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x031D
            </code>
                </value>
            </constant>
            <constant name="WM_DWMCOMPOSITIONCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x031E
            </code>
                </value>
            </constant>
            <constant name="WM_DWMNCRENDERINGCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x031F
            </code>
                </value>
            </constant>
            <constant name="WM_DWMCOLORIZATIONCOLORCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0320
            </code>
                </value>
            </constant>
            <constant name="WM_DWMWINDOWMAXIMIZEDCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0321
            </code>
                </value>
            </constant>
            <constant name="WM_DWMSENDICONICTHUMBNAIL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0323
            </code>
                </value>
            </constant>
            <constant name="WM_DWMSENDICONICLIVEPREVIEWBITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0326
            </code>
                </value>
            </constant>
            <constant name="WM_GETTITLEBARINFOEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x033F
            </code>
                </value>
            </constant>
            <constant name="WM_HANDHELDFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0358
            </code>
                </value>
            </constant>
            <constant name="WM_HANDHELDLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x035F
            </code>
                </value>
            </constant>
            <constant name="WM_AFXFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0360
            </code>
                </value>
            </constant>
            <constant name="WM_AFXLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x037F
            </code>
                </value>
            </constant>
            <constant name="WM_PENWINFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0380
            </code>
                </value>
            </constant>
            <constant name="WM_PENWINLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x038F
            </code>
                </value>
            </constant>
            <constant name="WM_APP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="WM_USER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="WMSZ_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="WMSZ_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="WMSZ_TOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="WMSZ_TOPLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="WMSZ_TOPRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="WMSZ_BOTTOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="WMSZ_BOTTOMLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="WMSZ_BOTTOMRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="HTERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-2)
            </code>
                </value>
            </constant>
            <constant name="HTTRANSPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="HTNOWHERE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="HTCLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="HTCAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="HTSYSMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="HTGROWBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="HTSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="HTMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="HTHSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="HTVSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="HTMINBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="HTMAXBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="HTLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="HTRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="HTTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="HTTOPLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="HTTOPRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="HTBOTTOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>15
            </code>
                </value>
            </constant>
            <constant name="HTBOTTOMLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="HTBOTTOMRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>17
            </code>
                </value>
            </constant>
            <constant name="HTBORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>18
            </code>
                </value>
            </constant>
            <constant name="HTREDUCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="HTZOOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="HTSIZEFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="HTSIZELAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>17
            </code>
                </value>
            </constant>
            <constant name="HTOBJECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>19
            </code>
                </value>
            </constant>
            <constant name="HTCLOSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="HTHELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>21
            </code>
                </value>
            </constant>
            <constant name="SMTO_NORMAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="SMTO_BLOCK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="SMTO_ABORTIFHUNG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="SMTO_NOTIMEOUTIFNOTHUNG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="SMTO_ERRORONEXIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="MA_ACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="MA_ACTIVATEANDEAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="MA_NOACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="MA_NOACTIVATEANDEAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="ICON_SMALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="ICON_BIG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="ICON_SMALL2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="RegisterWindowMessage" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint&gt;</type>
                <value>
                    <deref>
                        <code>RegisterWindowMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SIZE_RESTORED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SIZE_MINIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SIZE_MAXIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SIZE_MAXSHOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SIZE_MAXHIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SIZENORMAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SIZEICONIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SIZEFULLSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SIZEZOOMSHOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SIZEZOOMHIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="WVR_ALIGNTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="WVR_ALIGNLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="WVR_ALIGNBOTTOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="WVR_ALIGNRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="WVR_HREDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="WVR_VREDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="WVR_REDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0100 | 0x0200)
            </code>
                </value>
            </constant>
            <constant name="WVR_VALIDRECTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="MK_LBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="MK_RBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="MK_SHIFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="MK_CONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="MK_MBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="MK_XBUTTON1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="MK_XBUTTON2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="TME_HOVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="TME_LEAVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="TME_NONCLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="TME_QUERY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="TME_CANCEL" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="HOVER_DEFAULT" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0xFFFFFFFF
            </code>
                </value>
            </constant>
            <constant name="WS_OVERLAPPED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="WS_POPUP" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="WS_CHILD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="WS_MINIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="WS_VISIBLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="WS_DISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08000000
            </code>
                </value>
            </constant>
            <constant name="WS_CLIPSIBLINGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04000000
            </code>
                </value>
            </constant>
            <constant name="WS_CLIPCHILDREN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02000000
            </code>
                </value>
            </constant>
            <constant name="WS_MAXIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000000
            </code>
                </value>
            </constant>
            <constant name="WS_CAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C00000
            </code>
                </value>
            </constant>
            <constant name="WS_BORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00800000
            </code>
                </value>
            </constant>
            <constant name="WS_DLGFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00400000
            </code>
                </value>
            </constant>
            <constant name="WS_VSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="WS_HSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="WS_SYSMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="WS_THICKFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="WS_GROUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="WS_TABSTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="WS_MINIMIZEBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="WS_MAXIMIZEBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="WS_TILED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="WS_ICONIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="WS_SIZEBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="WS_TILEDWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000 | 0x00C00000 | 0x00080000 | 0x00040000 | 0x00020000 | 0x00010000)
            </code>
                </value>
            </constant>
            <constant name="WS_OVERLAPPEDWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000000 | 0x00C00000 | 0x00080000 | 0x00040000 | 0x00020000 | 0x00010000)
            </code>
                </value>
            </constant>
            <constant name="WS_POPUPWINDOW" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0x80000000 | 0x00800000 | 0x00080000)
            </code>
                </value>
            </constant>
            <constant name="WS_CHILDWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x40000000)
            </code>
                </value>
            </constant>
            <constant name="WS_EX_DLGMODALFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="WS_EX_NOPARENTNOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="WS_EX_TOPMOST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="WS_EX_ACCEPTFILES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="WS_EX_TRANSPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="WS_EX_MDICHILD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="WS_EX_TOOLWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="WS_EX_WINDOWEDGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="WS_EX_CLIENTEDGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="WS_EX_CONTEXTHELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="WS_EX_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_RTLREADING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_LTRREADING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_LEFTSCROLLBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_RIGHTSCROLLBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_CONTROLPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_STATICEDGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_APPWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_OVERLAPPEDWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000100 | 0x00000200)
            </code>
                </value>
            </constant>
            <constant name="WS_EX_PALETTEWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000100 | 0x00000080 | 0x00000008)
            </code>
                </value>
            </constant>
            <constant name="WS_EX_LAYERED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_NOINHERITLAYOUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_NOREDIRECTIONBITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_LAYOUTRTL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00400000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_COMPOSITED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02000000
            </code>
                </value>
            </constant>
            <constant name="WS_EX_NOACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08000000
            </code>
                </value>
            </constant>
            <constant name="CS_VREDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="CS_HREDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="CS_DBLCLKS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="CS_OWNDC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="CS_CLASSDC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="CS_PARENTDC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="CS_NOCLOSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="CS_SAVEBITS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="CS_BYTEALIGNCLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="CS_BYTEALIGNWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="CS_GLOBALCLASS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="CS_IME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="CS_DROPSHADOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="PRF_CHECKVISIBLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="PRF_NONCLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="PRF_CLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="PRF_ERASEBKGND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="PRF_CHILDREN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="PRF_OWNED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="BDR_RAISEDOUTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="BDR_SUNKENOUTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="BDR_RAISEDINNER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="BDR_SUNKENINNER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="BDR_OUTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001 | 0x0002)
            </code>
                </value>
            </constant>
            <constant name="BDR_INNER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0004 | 0x0008)
            </code>
                </value>
            </constant>
            <constant name="BDR_RAISED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001 | 0x0004)
            </code>
                </value>
            </constant>
            <constant name="BDR_SUNKEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0002 | 0x0008)
            </code>
                </value>
            </constant>
            <constant name="EDGE_RAISED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001 | 0x0004)
            </code>
                </value>
            </constant>
            <constant name="EDGE_SUNKEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0002 | 0x0008)
            </code>
                </value>
            </constant>
            <constant name="EDGE_ETCHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0002 | 0x0004)
            </code>
                </value>
            </constant>
            <constant name="EDGE_BUMP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001 | 0x0008)
            </code>
                </value>
            </constant>
            <constant name="BF_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="BF_TOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="BF_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="BF_BOTTOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="BF_TOPLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0002 | 0x0001)
            </code>
                </value>
            </constant>
            <constant name="BF_TOPRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0002 | 0x0004)
            </code>
                </value>
            </constant>
            <constant name="BF_BOTTOMLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0008 | 0x0001)
            </code>
                </value>
            </constant>
            <constant name="BF_BOTTOMRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0008 | 0x0004)
            </code>
                </value>
            </constant>
            <constant name="BF_RECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001 | 0x0002 | 0x0004 | 0x0008)
            </code>
                </value>
            </constant>
            <constant name="BF_DIAGONAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="BF_DIAGONAL_ENDTOPRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0010 | 0x0002 | 0x0004)
            </code>
                </value>
            </constant>
            <constant name="BF_DIAGONAL_ENDTOPLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0010 | 0x0002 | 0x0001)
            </code>
                </value>
            </constant>
            <constant name="BF_DIAGONAL_ENDBOTTOMLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0010 | 0x0008 | 0x0001)
            </code>
                </value>
            </constant>
            <constant name="BF_DIAGONAL_ENDBOTTOMRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0010 | 0x0008 | 0x0004)
            </code>
                </value>
            </constant>
            <constant name="BF_MIDDLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="BF_SOFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="BF_ADJUST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="BF_FLAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="BF_MONO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="DFC_CAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="DFC_MENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="DFC_SCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="DFC_BUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="DFC_POPUPMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="DFCS_CAPTIONCLOSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="DFCS_CAPTIONMIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DFCS_CAPTIONMAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DFCS_CAPTIONRESTORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="DFCS_CAPTIONHELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DFCS_MENUARROW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="DFCS_MENUCHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DFCS_MENUBULLET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DFCS_MENUARROWRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DFCS_SCROLLUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="DFCS_SCROLLDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DFCS_SCROLLLEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DFCS_SCROLLRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="DFCS_SCROLLCOMBOBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0005
            </code>
                </value>
            </constant>
            <constant name="DFCS_SCROLLSIZEGRIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="DFCS_SCROLLSIZEGRIPRIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="DFCS_BUTTONCHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="DFCS_BUTTONRADIOIMAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DFCS_BUTTONRADIOMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DFCS_BUTTONRADIO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DFCS_BUTTON3STATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="DFCS_BUTTONPUSH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="DFCS_INACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="DFCS_PUSHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="DFCS_CHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="DFCS_TRANSPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="DFCS_HOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="DFCS_ADJUSTRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="DFCS_FLAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="DFCS_MONO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="DC_ACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DC_SMALLCAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DC_ICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DC_TEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="DC_INBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="DC_GRADIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="DC_BUTTONS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="IDANI_OPEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="IDANI_CAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="CF_TEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="CF_BITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="CF_METAFILEPICT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="CF_SYLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="CF_DIF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="CF_TIFF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="CF_OEMTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="CF_DIB" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="CF_PALETTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="CF_PENDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="CF_RIFF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="CF_WAVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="CF_UNICODETEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="CF_ENHMETAFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="CF_HDROP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>15
            </code>
                </value>
            </constant>
            <constant name="CF_LOCALE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="CF_DIBV5" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>17
            </code>
                </value>
            </constant>
            <constant name="CF_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>18
            </code>
                </value>
            </constant>
            <constant name="CF_OWNERDISPLAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="CF_DSPTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0081
            </code>
                </value>
            </constant>
            <constant name="CF_DSPBITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0082
            </code>
                </value>
            </constant>
            <constant name="CF_DSPMETAFILEPICT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0083
            </code>
                </value>
            </constant>
            <constant name="CF_DSPENHMETAFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x008E
            </code>
                </value>
            </constant>
            <constant name="CF_PRIVATEFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="CF_PRIVATELAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02FF
            </code>
                </value>
            </constant>
            <constant name="CF_GDIOBJFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0300
            </code>
                </value>
            </constant>
            <constant name="CF_GDIOBJLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x03FF
            </code>
                </value>
            </constant>
            <constant name="FVIRTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="FNOINVERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02
            </code>
                </value>
            </constant>
            <constant name="FSHIFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04
            </code>
                </value>
            </constant>
            <constant name="FCONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08
            </code>
                </value>
            </constant>
            <constant name="FALT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10
            </code>
                </value>
            </constant>
            <constant name="WPF_SETMINPOSITION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="WPF_RESTORETOMAXIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="WPF_ASYNCWINDOWPLACEMENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="ODT_MENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="ODT_LISTBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="ODT_COMBOBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="ODT_BUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="ODT_STATIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="ODA_DRAWENTIRE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="ODA_SELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="ODA_FOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="ODS_SELECTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="ODS_GRAYED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="ODS_DISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="ODS_CHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="ODS_FOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="ODS_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="ODS_COMBOBOXEDIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="ODS_HOTLIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="ODS_INACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="ODS_NOACCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="ODS_NOFOCUSRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="GetMessage" access="public">
                <type primitive="False">delegate*&lt;MSG*, IntPtr, uint, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>GetMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DispatchMessage" access="public">
                <type primitive="False">delegate*&lt;MSG*, nint&gt;</type>
                <value>
                    <deref>
                        <code>DispatchMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="PeekMessage" access="public">
                <type primitive="False">delegate*&lt;MSG*, IntPtr, uint, uint, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>PeekMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="PM_NOREMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="PM_REMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="PM_NOYIELD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="PM_QS_INPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(((0x0002 | 0x0004) | 0x0001 | 0x0400 | 0x0800 | 0x1000) &lt;&lt; 16)
            </code>
                </value>
            </constant>
            <constant name="PM_QS_POSTMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>((0x0008 | 0x0080 | 0x0010) &lt;&lt; 16)
            </code>
                </value>
            </constant>
            <constant name="PM_QS_PAINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0020 &lt;&lt; 16)
            </code>
                </value>
            </constant>
            <constant name="PM_QS_SENDMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0040 &lt;&lt; 16)
            </code>
                </value>
            </constant>
            <constant name="MOD_ALT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="MOD_CONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="MOD_SHIFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="MOD_WIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="MOD_NOREPEAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="IDHOT_SNAPWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="IDHOT_SNAPDESKTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-2)
            </code>
                </value>
            </constant>
            <constant name="ENDSESSION_CLOSEAPP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="ENDSESSION_CRITICAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="ENDSESSION_LOGOFF" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="EWX_LOGOFF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="EWX_SHUTDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="EWX_REBOOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="EWX_FORCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="EWX_POWEROFF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="EWX_FORCEIFHUNG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="EWX_QUICKRESOLVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="EWX_RESTARTAPPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="EWX_HYBRID_SHUTDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00400000
            </code>
                </value>
            </constant>
            <constant name="EWX_BOOTOPTIONS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000000
            </code>
                </value>
            </constant>
            <constant name="EWX_ARSO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04000000
            </code>
                </value>
            </constant>
            <constant name="SendMessage" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>SendMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SendMessageTimeout" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, nint, uint, uint, nuint*, nint&gt;</type>
                <value>
                    <deref>
                        <code>SendMessageTimeoutW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SendNotifyMessage" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, nint, int&gt;</type>
                <value>
                    <deref>
                        <code>SendNotifyMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SendMessageCallback" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, nint, delegate* unmanaged&lt;IntPtr, uint, nuint, nint, void&gt;, nuint, int&gt;</type>
                <value>
                    <deref>
                        <code>SendMessageCallbackW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="BroadcastSystemMessageEx" access="public">
                <type primitive="False">delegate*&lt;uint, uint*, uint, nuint, nint, BSMINFO*, int&gt;</type>
                <value>
                    <deref>
                        <code>BroadcastSystemMessageExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="BroadcastSystemMessage" access="public">
                <type primitive="False">delegate*&lt;uint, uint*, uint, nuint, nint, int&gt;</type>
                <value>
                    <deref>
                        <code>BroadcastSystemMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="BSM_ALLCOMPONENTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="BSM_VXDS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="BSM_NETDRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="BSM_INSTALLABLEDRIVERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="BSM_APPLICATIONS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="BSM_ALLDESKTOPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="BSF_QUERY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="BSF_IGNORECURRENTTASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="BSF_FLUSHDISK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="BSF_NOHANG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="BSF_POSTMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="BSF_FORCEIFHUNG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="BSF_NOTIMEOUTIFNOTHUNG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="BSF_ALLOWSFW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="BSF_SENDNOTIFYMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="BSF_RETURNHDESK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="BSF_LUID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="BROADCAST_QUERY_DENY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x424D5144
            </code>
                </value>
            </constant>
            <constant name="DEVICE_NOTIFY_WINDOW_HANDLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="DEVICE_NOTIFY_SERVICE_HANDLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DEVICE_NOTIFY_ALL_INTERFACE_CLASSES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="RegisterDeviceNotification" access="public">
                <type primitive="False">delegate*&lt;IntPtr, void*, uint, void*&gt;</type>
                <value>
                    <deref>
                        <code>RegisterDeviceNotificationW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="PostMessage" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, nint, int&gt;</type>
                <value>
                    <deref>
                        <code>PostMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="PostThreadMessage" access="public">
                <type primitive="False">delegate*&lt;uint, uint, nuint, nint, int&gt;</type>
                <value>
                    <deref>
                        <code>PostThreadMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="HWND_BROADCAST" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)0xffff)
            </code>
                </value>
            </constant>
            <constant name="HWND_MESSAGE" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)-3)
            </code>
                </value>
            </constant>
            <constant name="DefWindowProc" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>DefWindowProcW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CallWindowProc" access="public">
                <type primitive="False">delegate*&lt;delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;, IntPtr, uint, nuint, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>CallWindowProcW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="ISMEX_NOSEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="ISMEX_SEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="ISMEX_NOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="ISMEX_CALLBACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="ISMEX_REPLIED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="RegisterClass" access="public">
                <type primitive="False">delegate*&lt;WNDCLASSW*, ushort&gt;</type>
                <value>
                    <deref>
                        <code>RegisterClassW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="UnregisterClass" access="public">
                <type primitive="False">delegate*&lt;ushort*, IntPtr, int&gt;</type>
                <value>
                    <deref>
                        <code>UnregisterClassW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetClassInfo" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, WNDCLASSW*, int&gt;</type>
                <value>
                    <deref>
                        <code>GetClassInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="RegisterClassEx" access="public">
                <type primitive="False">delegate*&lt;WNDCLASSEXW*, ushort&gt;</type>
                <value>
                    <deref>
                        <code>RegisterClassExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetClassInfoEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, WNDCLASSEXW*, int&gt;</type>
                <value>
                    <deref>
                        <code>GetClassInfoExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CW_USEDEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0x80000000)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="HWND_DESKTOP" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)0)
            </code>
                </value>
            </constant>
            <constant name="CreateWindowEx" access="public">
                <type primitive="False">delegate*&lt;uint, ushort*, ushort*, uint, int, int, int, int, IntPtr, IntPtr, IntPtr, void*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>CreateWindowExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="PW_CLIENTONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="PW_RENDERFULLCONTENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="LWA_COLORKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="LWA_ALPHA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="ULW_COLORKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="ULW_ALPHA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="ULW_OPAQUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="ULW_EX_NORESIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="FLASHW_STOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="FLASHW_CAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="FLASHW_TRAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="FLASHW_ALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001 | 0x00000002)
            </code>
                </value>
            </constant>
            <constant name="FLASHW_TIMER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="FLASHW_TIMERNOFG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000C
            </code>
                </value>
            </constant>
            <constant name="WDA_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="WDA_MONITOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="WDA_EXCLUDEFROMCAPTURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000011
            </code>
                </value>
            </constant>
            <constant name="SWP_NOSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="SWP_NOMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="SWP_NOZORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="SWP_NOREDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="SWP_NOACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="SWP_FRAMECHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="SWP_SHOWWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="SWP_HIDEWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="SWP_NOCOPYBITS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="SWP_NOOWNERZORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="SWP_NOSENDCHANGING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="SWP_DRAWFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="SWP_NOREPOSITION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="SWP_DEFERERASE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="SWP_ASYNCWINDOWPOS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="HWND_TOP" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)0)
            </code>
                </value>
            </constant>
            <constant name="HWND_BOTTOM" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)1)
            </code>
                </value>
            </constant>
            <constant name="HWND_TOPMOST" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)-1)
            </code>
                </value>
            </constant>
            <constant name="HWND_NOTOPMOST" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)-2)
            </code>
                </value>
            </constant>
            <constant name="CreateDialogParam" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr, delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;, nint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>CreateDialogParamW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CreateDialogIndirectParam" access="public">
                <type primitive="False">delegate*&lt;IntPtr, DLGTEMPLATE*, IntPtr, delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;, nint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>CreateDialogIndirectParamW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DialogBoxParam" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr, delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>DialogBoxParamW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DialogBoxIndirectParam" access="public">
                <type primitive="False">delegate*&lt;IntPtr, DLGTEMPLATE*, IntPtr, delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>DialogBoxIndirectParamW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetDlgItemText" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetDlgItemTextW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetDlgItemText" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, ushort*, int, uint&gt;</type>
                <value>
                    <deref>
                        <code>GetDlgItemTextW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SendDlgItemMessage" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, uint, nuint, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>SendDlgItemMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DefDlgProc" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>DefDlgProcW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DLGWINDOWEXTRA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>30
            </code>
                </value>
            </constant>
            <constant name="CallMsgFilter" access="public">
                <type primitive="False">delegate*&lt;MSG*, int, int&gt;</type>
                <value>
                    <deref>
                        <code>CallMsgFilterW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="RegisterClipboardFormat" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint&gt;</type>
                <value>
                    <deref>
                        <code>RegisterClipboardFormatW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetClipboardFormatName" access="public">
                <type primitive="False">delegate*&lt;uint, ushort*, int, int&gt;</type>
                <value>
                    <deref>
                        <code>GetClipboardFormatNameW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CharToOem" access="public">
                <type primitive="False">delegate*&lt;ushort*, sbyte*, int&gt;</type>
                <value>
                    <deref>
                        <code>CharToOemW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="OemToChar" access="public">
                <type primitive="False">delegate*&lt;sbyte*, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>OemToCharW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CharToOemBuff" access="public">
                <type primitive="False">delegate*&lt;ushort*, sbyte*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>CharToOemBuffW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="OemToCharBuff" access="public">
                <type primitive="False">delegate*&lt;sbyte*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>OemToCharBuffW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CharUpper" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*&gt;</type>
                <value>
                    <deref>
                        <code>CharUpperW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CharUpperBuff" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>CharUpperBuffW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CharLower" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*&gt;</type>
                <value>
                    <deref>
                        <code>CharLowerW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CharLowerBuff" access="public">
                <type primitive="False">delegate*&lt;ushort*, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>CharLowerBuffW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CharNext" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*&gt;</type>
                <value>
                    <deref>
                        <code>CharNextW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CharPrev" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, ushort*&gt;</type>
                <value>
                    <deref>
                        <code>CharPrevW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AnsiToOem" access="public">
                <type primitive="False">delegate*&lt;sbyte*, sbyte*, int&gt;</type>
                <value>
                    <deref>
                        <code>CharToOemA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="OemToAnsi" access="public">
                <type primitive="False">delegate*&lt;sbyte*, sbyte*, int&gt;</type>
                <value>
                    <deref>
                        <code>OemToCharA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AnsiToOemBuff" access="public">
                <type primitive="False">delegate*&lt;sbyte*, sbyte*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>CharToOemBuffA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="OemToAnsiBuff" access="public">
                <type primitive="False">delegate*&lt;sbyte*, sbyte*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>OemToCharBuffA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AnsiUpper" access="public">
                <type primitive="False">delegate*&lt;sbyte*, sbyte*&gt;</type>
                <value>
                    <deref>
                        <code>CharUpperA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AnsiUpperBuff" access="public">
                <type primitive="False">delegate*&lt;sbyte*, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>CharUpperBuffA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AnsiLower" access="public">
                <type primitive="False">delegate*&lt;sbyte*, sbyte*&gt;</type>
                <value>
                    <deref>
                        <code>CharLowerA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AnsiLowerBuff" access="public">
                <type primitive="False">delegate*&lt;sbyte*, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>CharLowerBuffA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AnsiNext" access="public">
                <type primitive="False">delegate*&lt;sbyte*, sbyte*&gt;</type>
                <value>
                    <deref>
                        <code>CharNextA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AnsiPrev" access="public">
                <type primitive="False">delegate*&lt;sbyte*, sbyte*, sbyte*&gt;</type>
                <value>
                    <deref>
                        <code>CharPrevA
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="IsCharAlpha" access="public">
                <type primitive="False">delegate*&lt;ushort, int&gt;</type>
                <value>
                    <deref>
                        <code>IsCharAlphaW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="IsCharAlphaNumeric" access="public">
                <type primitive="False">delegate*&lt;ushort, int&gt;</type>
                <value>
                    <deref>
                        <code>IsCharAlphaNumericW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="IsCharUpper" access="public">
                <type primitive="False">delegate*&lt;ushort, int&gt;</type>
                <value>
                    <deref>
                        <code>IsCharUpperW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="IsCharLower" access="public">
                <type primitive="False">delegate*&lt;ushort, int&gt;</type>
                <value>
                    <deref>
                        <code>IsCharLowerW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetKeyNameText" access="public">
                <type primitive="False">delegate*&lt;int, ushort*, int, int&gt;</type>
                <value>
                    <deref>
                        <code>GetKeyNameTextW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="VkKeyScan" access="public">
                <type primitive="False">delegate*&lt;ushort, short&gt;</type>
                <value>
                    <deref>
                        <code>VkKeyScanW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="VkKeyScanEx" access="public">
                <type primitive="False">delegate*&lt;ushort, IntPtr, short&gt;</type>
                <value>
                    <deref>
                        <code>VkKeyScanExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="KEYEVENTF_EXTENDEDKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="KEYEVENTF_KEYUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="KEYEVENTF_UNICODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="KEYEVENTF_SCANCODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_MOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_LEFTDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_LEFTUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_RIGHTDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_RIGHTUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_MIDDLEDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_MIDDLEUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_XDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_XUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_WHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_HWHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_MOVE_NOCOALESCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_VIRTUALDESK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="MOUSEEVENTF_ABSOLUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="INPUT_MOUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="INPUT_KEYBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="INPUT_HARDWARE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="TOUCHEVENTF_MOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="TOUCHEVENTF_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="TOUCHEVENTF_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="TOUCHEVENTF_INRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="TOUCHEVENTF_PRIMARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="TOUCHEVENTF_NOCOALESCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="TOUCHEVENTF_PEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="TOUCHEVENTF_PALM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="TOUCHINPUTMASKF_TIMEFROMSYSTEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="TOUCHINPUTMASKF_EXTRAINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="TOUCHINPUTMASKF_CONTACTAREA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="TWF_FINETOUCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000001)
            </code>
                </value>
            </constant>
            <constant name="TWF_WANTPALM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x00000002)
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_NEW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_INRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_INCONTACT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_FIRSTBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_SECONDBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_THIRDBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_FOURTHBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_FIFTHBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_PRIMARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_CONFIDENCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_CANCELED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_UPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_WHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_HWHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_CAPTURECHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="POINTER_FLAG_HASTRANSFORM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00400000
            </code>
                </value>
            </constant>
            <constant name="POINTER_MOD_SHIFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0004)
            </code>
                </value>
            </constant>
            <constant name="POINTER_MOD_CTRL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0008)
            </code>
                </value>
            </constant>
            <constant name="TOUCH_FLAG_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="TOUCH_MASK_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="TOUCH_MASK_CONTACTAREA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="TOUCH_MASK_ORIENTATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="TOUCH_MASK_PRESSURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="PEN_FLAG_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="PEN_FLAG_BARREL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="PEN_FLAG_INVERTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="PEN_FLAG_ERASER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="PEN_MASK_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="PEN_MASK_PRESSURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="PEN_MASK_ROTATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="PEN_MASK_TILT_X" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="PEN_MASK_TILT_Y" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_NEW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_INRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_INCONTACT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_FIRSTBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_SECONDBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_THIRDBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_FOURTHBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_FIFTHBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_PRIMARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_CONFIDENCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="POINTER_MESSAGE_FLAG_CANCELED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="PA_ACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="PA_NOACTIVATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="MAX_TOUCH_COUNT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>256
            </code>
                </value>
            </constant>
            <constant name="TOUCH_FEEDBACK_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1
            </code>
                </value>
            </constant>
            <constant name="TOUCH_FEEDBACK_INDIRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2
            </code>
                </value>
            </constant>
            <constant name="TOUCH_FEEDBACK_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x3
            </code>
                </value>
            </constant>
            <constant name="TOUCH_HIT_TESTING_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0
            </code>
                </value>
            </constant>
            <constant name="TOUCH_HIT_TESTING_CLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1
            </code>
                </value>
            </constant>
            <constant name="TOUCH_HIT_TESTING_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2
            </code>
                </value>
            </constant>
            <constant name="TOUCH_HIT_TESTING_PROXIMITY_CLOSEST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0
            </code>
                </value>
            </constant>
            <constant name="TOUCH_HIT_TESTING_PROXIMITY_FARTHEST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xFFF
            </code>
                </value>
            </constant>
            <constant name="GWFS_INCLUDE_ANCESTORS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MapVirtualKey" access="public">
                <type primitive="False">delegate*&lt;uint, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>MapVirtualKeyW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="MapVirtualKeyEx" access="public">
                <type primitive="False">delegate*&lt;uint, uint, IntPtr, uint&gt;</type>
                <value>
                    <deref>
                        <code>MapVirtualKeyExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="MAPVK_VK_TO_VSC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0)
            </code>
                </value>
            </constant>
            <constant name="MAPVK_VSC_TO_VK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(1)
            </code>
                </value>
            </constant>
            <constant name="MAPVK_VK_TO_CHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(2)
            </code>
                </value>
            </constant>
            <constant name="MAPVK_VSC_TO_VK_EX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(3)
            </code>
                </value>
            </constant>
            <constant name="MAPVK_VK_TO_VSC_EX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(4)
            </code>
                </value>
            </constant>
            <constant name="MWMO_WAITALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="MWMO_ALERTABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="MWMO_INPUTAVAILABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="QS_KEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="QS_MOUSEMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="QS_MOUSEBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="QS_POSTMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="QS_TIMER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="QS_PAINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="QS_SENDMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="QS_HOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="QS_ALLPOSTMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="QS_RAWINPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="QS_TOUCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="QS_POINTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="QS_MOUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0002 | 0x0004)
            </code>
                </value>
            </constant>
            <constant name="QS_INPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>((0x0002 | 0x0004) | 0x0001 | 0x0400 | 0x0800 | 0x1000)
            </code>
                </value>
            </constant>
            <constant name="QS_ALLEVENTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(((0x0002 | 0x0004) | 0x0001 | 0x0400 | 0x0800 | 0x1000) | 0x0008 | 0x0010 | 0x0020 | 0x0080)
            </code>
                </value>
            </constant>
            <constant name="QS_ALLINPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(((0x0002 | 0x0004) | 0x0001 | 0x0400 | 0x0800 | 0x1000) | 0x0008 | 0x0010 | 0x0020 | 0x0080 | 0x0040)
            </code>
                </value>
            </constant>
            <constant name="USER_TIMER_MAXIMUM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7FFFFFFF
            </code>
                </value>
            </constant>
            <constant name="USER_TIMER_MINIMUM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000A
            </code>
                </value>
            </constant>
            <constant name="TIMERV_DEFAULT_COALESCING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0)
            </code>
                </value>
            </constant>
            <constant name="TIMERV_NO_COALESCING" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>(0xFFFFFFFF)
            </code>
                </value>
            </constant>
            <constant name="TIMERV_COALESCING_MIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(1)
            </code>
                </value>
            </constant>
            <constant name="TIMERV_COALESCING_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x7FFFFFF5)
            </code>
                </value>
            </constant>
            <constant name="LoadAccelerators" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadAcceleratorsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CreateAcceleratorTable" access="public">
                <type primitive="False">delegate*&lt;ACCEL*, int, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>CreateAcceleratorTableW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CopyAcceleratorTable" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ACCEL*, int, int&gt;</type>
                <value>
                    <deref>
                        <code>CopyAcceleratorTableW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="TranslateAccelerator" access="public">
                <type primitive="False">delegate*&lt;IntPtr, IntPtr, MSG*, int&gt;</type>
                <value>
                    <deref>
                        <code>TranslateAcceleratorW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SM_CXSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SM_CYSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SM_CXVSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SM_CYHSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SM_CYCAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SM_CXBORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="SM_CYBORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="SM_CXDLGFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="SM_CYDLGFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="SM_CYVTHUMB" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="SM_CXHTHUMB" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="SM_CXICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="SM_CYICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="SM_CXCURSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="SM_CYCURSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="SM_CYMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>15
            </code>
                </value>
            </constant>
            <constant name="SM_CXFULLSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="SM_CYFULLSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>17
            </code>
                </value>
            </constant>
            <constant name="SM_CYKANJIWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>18
            </code>
                </value>
            </constant>
            <constant name="SM_MOUSEPRESENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>19
            </code>
                </value>
            </constant>
            <constant name="SM_CYVSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="SM_CXHSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>21
            </code>
                </value>
            </constant>
            <constant name="SM_DEBUG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>22
            </code>
                </value>
            </constant>
            <constant name="SM_SWAPBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>23
            </code>
                </value>
            </constant>
            <constant name="SM_RESERVED1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>24
            </code>
                </value>
            </constant>
            <constant name="SM_RESERVED2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>25
            </code>
                </value>
            </constant>
            <constant name="SM_RESERVED3" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>26
            </code>
                </value>
            </constant>
            <constant name="SM_RESERVED4" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>27
            </code>
                </value>
            </constant>
            <constant name="SM_CXMIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28
            </code>
                </value>
            </constant>
            <constant name="SM_CYMIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>29
            </code>
                </value>
            </constant>
            <constant name="SM_CXSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>30
            </code>
                </value>
            </constant>
            <constant name="SM_CYSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>31
            </code>
                </value>
            </constant>
            <constant name="SM_CXFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>32
            </code>
                </value>
            </constant>
            <constant name="SM_CYFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>33
            </code>
                </value>
            </constant>
            <constant name="SM_CXMINTRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>34
            </code>
                </value>
            </constant>
            <constant name="SM_CYMINTRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>35
            </code>
                </value>
            </constant>
            <constant name="SM_CXDOUBLECLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>36
            </code>
                </value>
            </constant>
            <constant name="SM_CYDOUBLECLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>37
            </code>
                </value>
            </constant>
            <constant name="SM_CXICONSPACING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>38
            </code>
                </value>
            </constant>
            <constant name="SM_CYICONSPACING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>39
            </code>
                </value>
            </constant>
            <constant name="SM_MENUDROPALIGNMENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>40
            </code>
                </value>
            </constant>
            <constant name="SM_PENWINDOWS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>41
            </code>
                </value>
            </constant>
            <constant name="SM_DBCSENABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>42
            </code>
                </value>
            </constant>
            <constant name="SM_CMOUSEBUTTONS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>43
            </code>
                </value>
            </constant>
            <constant name="SM_CXFIXEDFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="SM_CYFIXEDFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="SM_CXSIZEFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>32
            </code>
                </value>
            </constant>
            <constant name="SM_CYSIZEFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>33
            </code>
                </value>
            </constant>
            <constant name="SM_SECURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>44
            </code>
                </value>
            </constant>
            <constant name="SM_CXEDGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>45
            </code>
                </value>
            </constant>
            <constant name="SM_CYEDGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>46
            </code>
                </value>
            </constant>
            <constant name="SM_CXMINSPACING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>47
            </code>
                </value>
            </constant>
            <constant name="SM_CYMINSPACING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>48
            </code>
                </value>
            </constant>
            <constant name="SM_CXSMICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>49
            </code>
                </value>
            </constant>
            <constant name="SM_CYSMICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>50
            </code>
                </value>
            </constant>
            <constant name="SM_CYSMCAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>51
            </code>
                </value>
            </constant>
            <constant name="SM_CXSMSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>52
            </code>
                </value>
            </constant>
            <constant name="SM_CYSMSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>53
            </code>
                </value>
            </constant>
            <constant name="SM_CXMENUSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>54
            </code>
                </value>
            </constant>
            <constant name="SM_CYMENUSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>55
            </code>
                </value>
            </constant>
            <constant name="SM_ARRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>56
            </code>
                </value>
            </constant>
            <constant name="SM_CXMINIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>57
            </code>
                </value>
            </constant>
            <constant name="SM_CYMINIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>58
            </code>
                </value>
            </constant>
            <constant name="SM_CXMAXTRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>59
            </code>
                </value>
            </constant>
            <constant name="SM_CYMAXTRACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>60
            </code>
                </value>
            </constant>
            <constant name="SM_CXMAXIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>61
            </code>
                </value>
            </constant>
            <constant name="SM_CYMAXIMIZED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>62
            </code>
                </value>
            </constant>
            <constant name="SM_NETWORK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>63
            </code>
                </value>
            </constant>
            <constant name="SM_CLEANBOOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>67
            </code>
                </value>
            </constant>
            <constant name="SM_CXDRAG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>68
            </code>
                </value>
            </constant>
            <constant name="SM_CYDRAG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>69
            </code>
                </value>
            </constant>
            <constant name="SM_SHOWSOUNDS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>70
            </code>
                </value>
            </constant>
            <constant name="SM_CXMENUCHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>71
            </code>
                </value>
            </constant>
            <constant name="SM_CYMENUCHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>72
            </code>
                </value>
            </constant>
            <constant name="SM_SLOWMACHINE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>73
            </code>
                </value>
            </constant>
            <constant name="SM_MIDEASTENABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>74
            </code>
                </value>
            </constant>
            <constant name="SM_MOUSEWHEELPRESENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>75
            </code>
                </value>
            </constant>
            <constant name="SM_XVIRTUALSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>76
            </code>
                </value>
            </constant>
            <constant name="SM_YVIRTUALSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>77
            </code>
                </value>
            </constant>
            <constant name="SM_CXVIRTUALSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>78
            </code>
                </value>
            </constant>
            <constant name="SM_CYVIRTUALSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>79
            </code>
                </value>
            </constant>
            <constant name="SM_CMONITORS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>80
            </code>
                </value>
            </constant>
            <constant name="SM_SAMEDISPLAYFORMAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>81
            </code>
                </value>
            </constant>
            <constant name="SM_IMMENABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>82
            </code>
                </value>
            </constant>
            <constant name="SM_CXFOCUSBORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>83
            </code>
                </value>
            </constant>
            <constant name="SM_CYFOCUSBORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>84
            </code>
                </value>
            </constant>
            <constant name="SM_TABLETPC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>86
            </code>
                </value>
            </constant>
            <constant name="SM_MEDIACENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>87
            </code>
                </value>
            </constant>
            <constant name="SM_STARTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>88
            </code>
                </value>
            </constant>
            <constant name="SM_SERVERR2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>89
            </code>
                </value>
            </constant>
            <constant name="SM_MOUSEHORIZONTALWHEELPRESENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>91
            </code>
                </value>
            </constant>
            <constant name="SM_CXPADDEDBORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>92
            </code>
                </value>
            </constant>
            <constant name="SM_DIGITIZER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>94
            </code>
                </value>
            </constant>
            <constant name="SM_MAXIMUMTOUCHES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>95
            </code>
                </value>
            </constant>
            <constant name="SM_CMETRICS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>97
            </code>
                </value>
            </constant>
            <constant name="SM_REMOTESESSION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="SM_SHUTTINGDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="SM_REMOTECONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2001
            </code>
                </value>
            </constant>
            <constant name="SM_CARETBLINKINGENABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2002
            </code>
                </value>
            </constant>
            <constant name="SM_CONVERTIBLESLATEMODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2003
            </code>
                </value>
            </constant>
            <constant name="SM_SYSTEMDOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2004
            </code>
                </value>
            </constant>
            <constant name="LoadMenu" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadMenuW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="LoadMenuIndirect" access="public">
                <type primitive="False">delegate*&lt;void*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadMenuIndirectW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="ChangeMenu" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, ushort*, uint, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>ChangeMenuW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetMenuString" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, ushort*, int, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>GetMenuStringW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="PMB_ACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="InsertMenu" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, uint, nuint, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>InsertMenuW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="AppendMenu" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>AppendMenuW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="ModifyMenu" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, uint, nuint, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>ModifyMenuW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="MNC_IGNORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="MNC_CLOSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="MNC_EXECUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="MNC_SELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="MNS_NOCHECK" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="MNS_MODELESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="MNS_DRAGDROP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="MNS_AUTODISMISS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="MNS_NOTIFYBYPOS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08000000
            </code>
                </value>
            </constant>
            <constant name="MNS_CHECKORBMP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04000000
            </code>
                </value>
            </constant>
            <constant name="MIM_MAXHEIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MIM_BACKGROUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="MIM_HELPID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="MIM_MENUDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="MIM_STYLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="MIM_APPLYTOSUBMENUS" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="MND_CONTINUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="MND_ENDMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="MNGOF_TOPGAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MNGOF_BOTTOMGAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="MNGO_NOINTERFACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MNGO_NOERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MIIM_STATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MIIM_ID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="MIIM_SUBMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="MIIM_CHECKMARKS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="MIIM_TYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="MIIM_DATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="MIIM_STRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="MIIM_BITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="MIIM_FTYPE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_CALLBACK" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)-1)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_SYSTEM" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)1)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_MBAR_RESTORE" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)2)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_MBAR_MINIMIZE" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)3)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_MBAR_CLOSE" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)5)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_MBAR_CLOSE_D" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)6)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_MBAR_MINIMIZE_D" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)7)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_POPUP_CLOSE" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)8)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_POPUP_RESTORE" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)9)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_POPUP_MAXIMIZE" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)10)
            </code>
                </value>
            </constant>
            <constant name="HBMMENU_POPUP_MINIMIZE" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)11)
            </code>
                </value>
            </constant>
            <constant name="InsertMenuItem" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, int, MENUITEMINFOW*, int&gt;</type>
                <value>
                    <deref>
                        <code>InsertMenuItemW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetMenuItemInfo" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, int, MENUITEMINFOW*, int&gt;</type>
                <value>
                    <deref>
                        <code>GetMenuItemInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetMenuItemInfo" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, int, MENUITEMINFOW*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetMenuItemInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GMDI_USEDISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="GMDI_GOINTOPOPUPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="TPM_LEFTBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="TPM_RIGHTBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="TPM_LEFTALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="TPM_CENTERALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="TPM_RIGHTALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="TPM_TOPALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="TPM_VCENTERALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="TPM_BOTTOMALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="TPM_HORIZONTAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="TPM_VERTICAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="TPM_NONOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="TPM_RETURNCMD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="TPM_RECURSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="TPM_HORPOSANIMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="TPM_HORNEGANIMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="TPM_VERPOSANIMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="TPM_VERNEGANIMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="TPM_NOANIMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="TPM_LAYOUTRTL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="TPM_WORKAREA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000
            </code>
                </value>
            </constant>
            <constant name="DOF_EXECUTABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8001
            </code>
                </value>
            </constant>
            <constant name="DOF_DOCUMENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8002
            </code>
                </value>
            </constant>
            <constant name="DOF_DIRECTORY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8003
            </code>
                </value>
            </constant>
            <constant name="DOF_MULTIPLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8004
            </code>
                </value>
            </constant>
            <constant name="DOF_PROGMAN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DOF_SHELLDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DO_DROPFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x454C4946
            </code>
                </value>
            </constant>
            <constant name="DO_PRINTFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x544E5250
            </code>
                </value>
            </constant>
            <constant name="DT_TOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="DT_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="DT_CENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DT_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DT_VCENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DT_BOTTOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="DT_WORDBREAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="DT_SINGLELINE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="DT_EXPANDTABS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="DT_TABSTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="DT_NOCLIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="DT_EXTERNALLEADING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="DT_CALCRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="DT_NOPREFIX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="DT_INTERNAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="DT_EDITCONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="DT_PATH_ELLIPSIS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="DT_END_ELLIPSIS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="DT_MODIFYSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="DT_RTLREADING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="DT_WORD_ELLIPSIS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="DT_NOFULLWIDTHCHARBREAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="DT_HIDEPREFIX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="DT_PREFIXONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="DrawText" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, RECT*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>DrawTextW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DrawTextEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, RECT*, uint, DRAWTEXTPARAMS*, int&gt;</type>
                <value>
                    <deref>
                        <code>DrawTextExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GrayString" access="public">
                <type primitive="False">delegate*&lt;IntPtr, IntPtr, delegate* unmanaged&lt;IntPtr, nint, int, int&gt;, nint, int, int, int, int, int, int&gt;</type>
                <value>
                    <deref>
                        <code>GrayStringW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DST_COMPLEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="DST_TEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DST_PREFIXTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DST_ICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="DST_BITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DSS_NORMAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="DSS_UNION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="DSS_DISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="DSS_MONO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="DSS_HIDEPREFIX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="DSS_PREFIXONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="DSS_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="DrawState" access="public">
                <type primitive="False">delegate*&lt;IntPtr, IntPtr, delegate* unmanaged&lt;IntPtr, nint, nuint, int, int, int&gt;, nint, nuint, int, int, int, int, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>DrawStateW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="TabbedTextOut" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, int, ushort*, int, int, int*, int, int&gt;</type>
                <value>
                    <deref>
                        <code>TabbedTextOutW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetTabbedTextExtent" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, int, int*, uint&gt;</type>
                <value>
                    <deref>
                        <code>GetTabbedTextExtentW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="ASFW_ANY" access="public">
                <type primitive="True">uint</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((uint)-1)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="LSFW_LOCK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="LSFW_UNLOCK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="DCX_WINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="DCX_CACHE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="DCX_NORESETATTRS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="DCX_CLIPCHILDREN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="DCX_CLIPSIBLINGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="DCX_PARENTCLIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="DCX_EXCLUDERGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="DCX_INTERSECTRGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="DCX_EXCLUDEUPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="DCX_INTERSECTUPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="DCX_LOCKWINDOWUPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="DCX_VALIDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="RDW_INVALIDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="RDW_INTERNALPAINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="RDW_ERASE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="RDW_VALIDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="RDW_NOINTERNALPAINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="RDW_NOERASE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="RDW_NOCHILDREN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="RDW_ALLCHILDREN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="RDW_UPDATENOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="RDW_ERASENOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="RDW_FRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="RDW_NOFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="SW_SCROLLCHILDREN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="SW_INVALIDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="SW_ERASE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="SW_SMOOTHSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="ESB_ENABLE_BOTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="ESB_DISABLE_BOTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="ESB_DISABLE_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="ESB_DISABLE_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="ESB_DISABLE_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="ESB_DISABLE_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="ESB_DISABLE_LTUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="ESB_DISABLE_RTDN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="SetProp" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr, int&gt;</type>
                <value>
                    <deref>
                        <code>SetPropW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetProp" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>GetPropW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="RemoveProp" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>RemovePropW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="EnumPropsEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, delegate* unmanaged&lt;IntPtr, ushort*, IntPtr, nuint, int&gt;, nint, int&gt;</type>
                <value>
                    <deref>
                        <code>EnumPropsExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="EnumProps" access="public">
                <type primitive="False">delegate*&lt;IntPtr, delegate* unmanaged&lt;IntPtr, ushort*, IntPtr, int&gt;, int&gt;</type>
                <value>
                    <deref>
                        <code>EnumPropsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetWindowText" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int&gt;</type>
                <value>
                    <deref>
                        <code>SetWindowTextW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetWindowText" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, int&gt;</type>
                <value>
                    <deref>
                        <code>GetWindowTextW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetWindowTextLength" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int&gt;</type>
                <value>
                    <deref>
                        <code>GetWindowTextLengthW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="HELPINFO_WINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="HELPINFO_MENUITEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="MB_OK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MB_OKCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MB_ABORTRETRYIGNORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="MB_YESNOCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="MB_YESNO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="MB_RETRYCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000005
            </code>
                </value>
            </constant>
            <constant name="MB_CANCELTRYCONTINUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000006
            </code>
                </value>
            </constant>
            <constant name="MB_ICONHAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="MB_ICONQUESTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="MB_ICONEXCLAMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000030
            </code>
                </value>
            </constant>
            <constant name="MB_ICONASTERISK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="MB_USERICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="MB_ICONWARNING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000030
            </code>
                </value>
            </constant>
            <constant name="MB_ICONERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="MB_ICONINFORMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="MB_ICONSTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="MB_DEFBUTTON1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MB_DEFBUTTON2" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="MB_DEFBUTTON3" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="MB_DEFBUTTON4" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000300
            </code>
                </value>
            </constant>
            <constant name="MB_APPLMODAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MB_SYSTEMMODAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="MB_TASKMODAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="MB_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="MB_NOFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="MB_SETFOREGROUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="MB_DEFAULT_DESKTOP_ONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="MB_TOPMOST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="MB_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="MB_RTLREADING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="MB_SERVICE_NOTIFICATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="MB_SERVICE_NOTIFICATION_NT3X" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="MB_TYPEMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000F
            </code>
                </value>
            </constant>
            <constant name="MB_ICONMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000000F0
            </code>
                </value>
            </constant>
            <constant name="MB_DEFMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000F00
            </code>
                </value>
            </constant>
            <constant name="MB_MODEMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00003000
            </code>
                </value>
            </constant>
            <constant name="MB_MISCMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000C000
            </code>
                </value>
            </constant>
            <constant name="MessageBox" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>MessageBoxW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="MessageBoxEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, ushort*, uint, ushort, int&gt;</type>
                <value>
                    <deref>
                        <code>MessageBoxExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="MessageBoxIndirect" access="public">
                <type primitive="False">delegate*&lt;MSGBOXPARAMSW*, int&gt;</type>
                <value>
                    <deref>
                        <code>MessageBoxIndirectW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CWP_ALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="CWP_SKIPINVISIBLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="CWP_SKIPDISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="CWP_SKIPTRANSPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="CTLCOLOR_MSGBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="CTLCOLOR_EDIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="CTLCOLOR_LISTBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="CTLCOLOR_BTN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="CTLCOLOR_DLG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="CTLCOLOR_SCROLLBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="CTLCOLOR_STATIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="CTLCOLOR_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="COLOR_SCROLLBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="COLOR_BACKGROUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="COLOR_ACTIVECAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="COLOR_INACTIVECAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="COLOR_MENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="COLOR_WINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="COLOR_WINDOWFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="COLOR_MENUTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="COLOR_WINDOWTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="COLOR_CAPTIONTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="COLOR_ACTIVEBORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="COLOR_INACTIVEBORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="COLOR_APPWORKSPACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="COLOR_HIGHLIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="COLOR_HIGHLIGHTTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="COLOR_BTNFACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>15
            </code>
                </value>
            </constant>
            <constant name="COLOR_BTNSHADOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="COLOR_GRAYTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>17
            </code>
                </value>
            </constant>
            <constant name="COLOR_BTNTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>18
            </code>
                </value>
            </constant>
            <constant name="COLOR_INACTIVECAPTIONTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>19
            </code>
                </value>
            </constant>
            <constant name="COLOR_BTNHIGHLIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="COLOR_3DDKSHADOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>21
            </code>
                </value>
            </constant>
            <constant name="COLOR_3DLIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>22
            </code>
                </value>
            </constant>
            <constant name="COLOR_INFOTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>23
            </code>
                </value>
            </constant>
            <constant name="COLOR_INFOBK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>24
            </code>
                </value>
            </constant>
            <constant name="COLOR_HOTLIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>26
            </code>
                </value>
            </constant>
            <constant name="COLOR_GRADIENTACTIVECAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>27
            </code>
                </value>
            </constant>
            <constant name="COLOR_GRADIENTINACTIVECAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28
            </code>
                </value>
            </constant>
            <constant name="COLOR_MENUHILIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>29
            </code>
                </value>
            </constant>
            <constant name="COLOR_MENUBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>30
            </code>
                </value>
            </constant>
            <constant name="COLOR_DESKTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="COLOR_3DFACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>15
            </code>
                </value>
            </constant>
            <constant name="COLOR_3DSHADOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="COLOR_3DHIGHLIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="COLOR_3DHILIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="COLOR_BTNHILIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>20
            </code>
                </value>
            </constant>
            <constant name="GetWindowLong" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, int&gt;</type>
                <value>
                    <deref>
                        <code>GetWindowLongW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetWindowLong" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, int, int&gt;</type>
                <value>
                    <deref>
                        <code>SetWindowLongW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetClassLong" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, uint&gt;</type>
                <value>
                    <deref>
                        <code>GetClassLongW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetClassLong" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, int, uint&gt;</type>
                <value>
                    <deref>
                        <code>SetClassLongW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="FindWindow" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>FindWindowW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="FindWindowEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, IntPtr, ushort*, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>FindWindowExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetClassName" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, int&gt;</type>
                <value>
                    <deref>
                        <code>GetClassNameW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GW_HWNDFIRST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="GW_HWNDLAST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="GW_HWNDNEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="GW_HWNDPREV" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="GW_OWNER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="GW_CHILD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="GW_ENABLEDPOPUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="GW_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="SetWindowsHook" access="public">
                <type primitive="False">delegate*&lt;int, delegate* unmanaged&lt;int, nuint, nint, nint&gt;, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetWindowsHookW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="SetWindowsHookEx" access="public">
                <type primitive="False">delegate*&lt;int, delegate* unmanaged&lt;int, nuint, nint, nint&gt;, IntPtr, uint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>SetWindowsHookExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="MF_INSERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MF_CHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="MF_APPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="MF_DELETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="MF_REMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="MF_BYCOMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MF_BYPOSITION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="MF_SEPARATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="MF_ENABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MF_GRAYED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MF_DISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="MF_UNCHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MF_CHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="MF_USECHECKBITMAPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="MF_STRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MF_BITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="MF_OWNERDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="MF_POPUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="MF_MENUBARBREAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="MF_MENUBREAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="MF_UNHILITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MF_HILITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="MF_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="MF_SYSMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="MF_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="MF_RIGHTJUSTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="MF_MOUSESELECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="MF_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="MFT_STRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MFT_BITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="MFT_MENUBARBREAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="MFT_MENUBREAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="MFT_OWNERDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="MFT_RADIOCHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="MFT_SEPARATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="MFT_RIGHTORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="MFT_RIGHTJUSTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="MFS_GRAYED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="MFS_DISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="MFS_CHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="MFS_HILITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="MFS_ENABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MFS_UNCHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MFS_UNHILITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MFS_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="SC_SIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF000
            </code>
                </value>
            </constant>
            <constant name="SC_MOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF010
            </code>
                </value>
            </constant>
            <constant name="SC_MINIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF020
            </code>
                </value>
            </constant>
            <constant name="SC_MAXIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF030
            </code>
                </value>
            </constant>
            <constant name="SC_NEXTWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF040
            </code>
                </value>
            </constant>
            <constant name="SC_PREVWINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF050
            </code>
                </value>
            </constant>
            <constant name="SC_CLOSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF060
            </code>
                </value>
            </constant>
            <constant name="SC_VSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF070
            </code>
                </value>
            </constant>
            <constant name="SC_HSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF080
            </code>
                </value>
            </constant>
            <constant name="SC_MOUSEMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF090
            </code>
                </value>
            </constant>
            <constant name="SC_KEYMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF100
            </code>
                </value>
            </constant>
            <constant name="SC_ARRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF110
            </code>
                </value>
            </constant>
            <constant name="SC_RESTORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF120
            </code>
                </value>
            </constant>
            <constant name="SC_TASKLIST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF130
            </code>
                </value>
            </constant>
            <constant name="SC_SCREENSAVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF140
            </code>
                </value>
            </constant>
            <constant name="SC_HOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF150
            </code>
                </value>
            </constant>
            <constant name="SC_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF160
            </code>
                </value>
            </constant>
            <constant name="SC_MONITORPOWER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF170
            </code>
                </value>
            </constant>
            <constant name="SC_CONTEXTHELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF180
            </code>
                </value>
            </constant>
            <constant name="SC_SEPARATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF00F
            </code>
                </value>
            </constant>
            <constant name="SCF_ISSECURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SC_ICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF020
            </code>
                </value>
            </constant>
            <constant name="SC_ZOOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xF030
            </code>
                </value>
            </constant>
            <constant name="LoadBitmap" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadBitmapW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="LoadCursor" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadCursorW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="LoadCursorFromFile" access="public">
                <type primitive="False">delegate*&lt;ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadCursorFromFileW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="IDC_ARROW" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32512))))
            </code>
                </value>
            </constant>
            <constant name="IDC_IBEAM" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32513))))
            </code>
                </value>
            </constant>
            <constant name="IDC_WAIT" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32514))))
            </code>
                </value>
            </constant>
            <constant name="IDC_CROSS" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32515))))
            </code>
                </value>
            </constant>
            <constant name="IDC_UPARROW" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32516))))
            </code>
                </value>
            </constant>
            <constant name="IDC_SIZE" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32640))))
            </code>
                </value>
            </constant>
            <constant name="IDC_ICON" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32641))))
            </code>
                </value>
            </constant>
            <constant name="IDC_SIZENWSE" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32642))))
            </code>
                </value>
            </constant>
            <constant name="IDC_SIZENESW" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32643))))
            </code>
                </value>
            </constant>
            <constant name="IDC_SIZEWE" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32644))))
            </code>
                </value>
            </constant>
            <constant name="IDC_SIZENS" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32645))))
            </code>
                </value>
            </constant>
            <constant name="IDC_SIZEALL" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32646))))
            </code>
                </value>
            </constant>
            <constant name="IDC_NO" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32648))))
            </code>
                </value>
            </constant>
            <constant name="IDC_HAND" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32649))))
            </code>
                </value>
            </constant>
            <constant name="IDC_APPSTARTING" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32650))))
            </code>
                </value>
            </constant>
            <constant name="IDC_HELP" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32651))))
            </code>
                </value>
            </constant>
            <constant name="IDC_PIN" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32671))))
            </code>
                </value>
            </constant>
            <constant name="IDC_PERSON" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32672))))
            </code>
                </value>
            </constant>
            <constant name="LoadIcon" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadIconW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="PrivateExtractIcons" access="public">
                <type primitive="False">delegate*&lt;ushort*, int, int, int, IntPtr*, uint*, uint, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>PrivateExtractIconsW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="IMAGE_BITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="IMAGE_ICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="IMAGE_CURSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="IMAGE_ENHMETAFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="LR_DEFAULTCOLOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="LR_MONOCHROME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="LR_COLOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="LR_COPYRETURNORG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="LR_COPYDELETEORG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="LR_LOADFROMFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="LR_LOADTRANSPARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="LR_DEFAULTSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="LR_VGACOLOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="LR_LOADMAP3DCOLORS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="LR_CREATEDIBSECTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="LR_COPYFROMRESOURCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="LR_SHARED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="LoadImage" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, uint, int, int, uint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>LoadImageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DI_MASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DI_IMAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DI_NORMAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="DI_COMPAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DI_DEFAULTSIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="DI_NOMIRROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="GetIconInfoEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ICONINFOEXW*, int&gt;</type>
                <value>
                    <deref>
                        <code>GetIconInfoExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="RES_ICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="RES_CURSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="ORD_LANGDRIVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="IDI_APPLICATION" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32512))))
            </code>
                </value>
            </constant>
            <constant name="IDI_HAND" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32513))))
            </code>
                </value>
            </constant>
            <constant name="IDI_QUESTION" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32514))))
            </code>
                </value>
            </constant>
            <constant name="IDI_EXCLAMATION" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32515))))
            </code>
                </value>
            </constant>
            <constant name="IDI_ASTERISK" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32516))))
            </code>
                </value>
            </constant>
            <constant name="IDI_WINLOGO" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32517))))
            </code>
                </value>
            </constant>
            <constant name="IDI_SHIELD" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32518))))
            </code>
                </value>
            </constant>
            <constant name="IDI_WARNING" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32515))))
            </code>
                </value>
            </constant>
            <constant name="IDI_ERROR" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32513))))
            </code>
                </value>
            </constant>
            <constant name="IDI_INFORMATION" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(32516))))
            </code>
                </value>
            </constant>
            <constant name="IDOK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="IDCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="IDABORT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="IDRETRY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="IDIGNORE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="IDYES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="IDNO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="IDCLOSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="IDHELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="IDTRYAGAIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="IDCONTINUE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="IDTIMEOUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>32000
            </code>
                </value>
            </constant>
            <constant name="ES_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="ES_CENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="ES_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="ES_MULTILINE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="ES_UPPERCASE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="ES_LOWERCASE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="ES_PASSWORD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="ES_AUTOVSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="ES_AUTOHSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="ES_NOHIDESEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="ES_OEMCONVERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="ES_READONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="ES_WANTRETURN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="ES_NUMBER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="EN_SETFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="EN_KILLFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="EN_CHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0300
            </code>
                </value>
            </constant>
            <constant name="EN_UPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="EN_ERRSPACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0500
            </code>
                </value>
            </constant>
            <constant name="EN_MAXTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0501
            </code>
                </value>
            </constant>
            <constant name="EN_HSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0601
            </code>
                </value>
            </constant>
            <constant name="EN_VSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0602
            </code>
                </value>
            </constant>
            <constant name="EN_ALIGN_LTR_EC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0700
            </code>
                </value>
            </constant>
            <constant name="EN_ALIGN_RTL_EC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0701
            </code>
                </value>
            </constant>
            <constant name="EN_BEFORE_PASTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="EN_AFTER_PASTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0801
            </code>
                </value>
            </constant>
            <constant name="EC_LEFTMARGIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="EC_RIGHTMARGIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="EC_USEFONTINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xffff
            </code>
                </value>
            </constant>
            <constant name="EMSIS_COMPOSITIONSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="EIMES_GETCOMPSTRATONCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="EIMES_CANCELCOMPSTRINFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="EIMES_COMPLETECOMPSTRKILLFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="EM_GETSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B0
            </code>
                </value>
            </constant>
            <constant name="EM_SETSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B1
            </code>
                </value>
            </constant>
            <constant name="EM_GETRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B2
            </code>
                </value>
            </constant>
            <constant name="EM_SETRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B3
            </code>
                </value>
            </constant>
            <constant name="EM_SETRECTNP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B4
            </code>
                </value>
            </constant>
            <constant name="EM_SCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B5
            </code>
                </value>
            </constant>
            <constant name="EM_LINESCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B6
            </code>
                </value>
            </constant>
            <constant name="EM_SCROLLCARET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B7
            </code>
                </value>
            </constant>
            <constant name="EM_GETMODIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B8
            </code>
                </value>
            </constant>
            <constant name="EM_SETMODIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00B9
            </code>
                </value>
            </constant>
            <constant name="EM_GETLINECOUNT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00BA
            </code>
                </value>
            </constant>
            <constant name="EM_LINEINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00BB
            </code>
                </value>
            </constant>
            <constant name="EM_SETHANDLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00BC
            </code>
                </value>
            </constant>
            <constant name="EM_GETHANDLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00BD
            </code>
                </value>
            </constant>
            <constant name="EM_GETTHUMB" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00BE
            </code>
                </value>
            </constant>
            <constant name="EM_LINELENGTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C1
            </code>
                </value>
            </constant>
            <constant name="EM_REPLACESEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C2
            </code>
                </value>
            </constant>
            <constant name="EM_GETLINE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C4
            </code>
                </value>
            </constant>
            <constant name="EM_LIMITTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C5
            </code>
                </value>
            </constant>
            <constant name="EM_CANUNDO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C6
            </code>
                </value>
            </constant>
            <constant name="EM_UNDO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C7
            </code>
                </value>
            </constant>
            <constant name="EM_FMTLINES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C8
            </code>
                </value>
            </constant>
            <constant name="EM_LINEFROMCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C9
            </code>
                </value>
            </constant>
            <constant name="EM_SETTABSTOPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00CB
            </code>
                </value>
            </constant>
            <constant name="EM_SETPASSWORDCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00CC
            </code>
                </value>
            </constant>
            <constant name="EM_EMPTYUNDOBUFFER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00CD
            </code>
                </value>
            </constant>
            <constant name="EM_GETFIRSTVISIBLELINE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00CE
            </code>
                </value>
            </constant>
            <constant name="EM_SETREADONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00CF
            </code>
                </value>
            </constant>
            <constant name="EM_SETWORDBREAKPROC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D0
            </code>
                </value>
            </constant>
            <constant name="EM_GETWORDBREAKPROC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D1
            </code>
                </value>
            </constant>
            <constant name="EM_GETPASSWORDCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D2
            </code>
                </value>
            </constant>
            <constant name="EM_SETMARGINS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D3
            </code>
                </value>
            </constant>
            <constant name="EM_GETMARGINS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D4
            </code>
                </value>
            </constant>
            <constant name="EM_SETLIMITTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00C5
            </code>
                </value>
            </constant>
            <constant name="EM_GETLIMITTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D5
            </code>
                </value>
            </constant>
            <constant name="EM_POSFROMCHAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D6
            </code>
                </value>
            </constant>
            <constant name="EM_CHARFROMPOS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D7
            </code>
                </value>
            </constant>
            <constant name="EM_SETIMESTATUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D8
            </code>
                </value>
            </constant>
            <constant name="EM_GETIMESTATUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00D9
            </code>
                </value>
            </constant>
            <constant name="EM_ENABLEFEATURE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00DA
            </code>
                </value>
            </constant>
            <constant name="WB_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="WB_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="WB_ISDELIMITER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="BS_PUSHBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="BS_DEFPUSHBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="BS_CHECKBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="BS_AUTOCHECKBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="BS_RADIOBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="BS_3STATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000005
            </code>
                </value>
            </constant>
            <constant name="BS_AUTO3STATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000006
            </code>
                </value>
            </constant>
            <constant name="BS_GROUPBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000007
            </code>
                </value>
            </constant>
            <constant name="BS_USERBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="BS_AUTORADIOBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000009
            </code>
                </value>
            </constant>
            <constant name="BS_PUSHBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000A
            </code>
                </value>
            </constant>
            <constant name="BS_OWNERDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000B
            </code>
                </value>
            </constant>
            <constant name="BS_TYPEMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000F
            </code>
                </value>
            </constant>
            <constant name="BS_LEFTTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="BS_TEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="BS_ICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="BS_BITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="BS_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="BS_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="BS_CENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000300
            </code>
                </value>
            </constant>
            <constant name="BS_TOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="BS_BOTTOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="BS_VCENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000C00
            </code>
                </value>
            </constant>
            <constant name="BS_PUSHLIKE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="BS_MULTILINE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="BS_NOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="BS_FLAT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="BS_RIGHTBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="BN_CLICKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="BN_PAINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="BN_HILITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="BN_UNHILITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="BN_DISABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="BN_DOUBLECLICKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="BN_PUSHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="BN_UNPUSHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="BN_DBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="BN_SETFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="BN_KILLFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="BM_GETCHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F0
            </code>
                </value>
            </constant>
            <constant name="BM_SETCHECK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F1
            </code>
                </value>
            </constant>
            <constant name="BM_GETSTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F2
            </code>
                </value>
            </constant>
            <constant name="BM_SETSTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F3
            </code>
                </value>
            </constant>
            <constant name="BM_SETSTYLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F4
            </code>
                </value>
            </constant>
            <constant name="BM_CLICK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F5
            </code>
                </value>
            </constant>
            <constant name="BM_GETIMAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F6
            </code>
                </value>
            </constant>
            <constant name="BM_SETIMAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F7
            </code>
                </value>
            </constant>
            <constant name="BM_SETDONTCLICK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00F8
            </code>
                </value>
            </constant>
            <constant name="BST_UNCHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="BST_CHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="BST_INDETERMINATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="BST_PUSHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="BST_FOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="SS_LEFT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="SS_CENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SS_RIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SS_ICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="SS_BLACKRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SS_GRAYRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000005
            </code>
                </value>
            </constant>
            <constant name="SS_WHITERECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000006
            </code>
                </value>
            </constant>
            <constant name="SS_BLACKFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000007
            </code>
                </value>
            </constant>
            <constant name="SS_GRAYFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="SS_WHITEFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000009
            </code>
                </value>
            </constant>
            <constant name="SS_USERITEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000A
            </code>
                </value>
            </constant>
            <constant name="SS_SIMPLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000B
            </code>
                </value>
            </constant>
            <constant name="SS_LEFTNOWORDWRAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000C
            </code>
                </value>
            </constant>
            <constant name="SS_OWNERDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000D
            </code>
                </value>
            </constant>
            <constant name="SS_BITMAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000E
            </code>
                </value>
            </constant>
            <constant name="SS_ENHMETAFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000000F
            </code>
                </value>
            </constant>
            <constant name="SS_ETCHEDHORZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="SS_ETCHEDVERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000011
            </code>
                </value>
            </constant>
            <constant name="SS_ETCHEDFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000012
            </code>
                </value>
            </constant>
            <constant name="SS_TYPEMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000001F
            </code>
                </value>
            </constant>
            <constant name="SS_REALSIZECONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="SS_NOPREFIX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="SS_NOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="SS_CENTERIMAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="SS_RIGHTJUST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="SS_REALSIZEIMAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="SS_SUNKEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="SS_EDITCONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="SS_ENDELLIPSIS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="SS_PATHELLIPSIS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="SS_WORDELLIPSIS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000C000
            </code>
                </value>
            </constant>
            <constant name="SS_ELLIPSISMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000C000
            </code>
                </value>
            </constant>
            <constant name="STM_SETICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0170
            </code>
                </value>
            </constant>
            <constant name="STM_GETICON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0171
            </code>
                </value>
            </constant>
            <constant name="STM_SETIMAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0172
            </code>
                </value>
            </constant>
            <constant name="STM_GETIMAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0173
            </code>
                </value>
            </constant>
            <constant name="STN_CLICKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="STN_DBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="STN_ENABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="STN_DISABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="STM_MSGMAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0174
            </code>
                </value>
            </constant>
            <constant name="WC_DIALOG" access="public">
                <type primitive="False">ushort*</type>
                <value>
                    <code>((ushort*)((nuint)((ushort)(0x8002))))
            </code>
                </value>
            </constant>
            <constant name="DWL_MSGRESULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="DWL_DLGPROC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="DWL_USER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="DWLP_MSGRESULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="DWLP_DLGPROC" access="public">
                <type primitive="False">uint</type>
                <value>
                    <unchecked>
                        <value>
                            <code>0 + (uint)(sizeof(nint))
            </code>
                        </value>
                    </unchecked>
                </value>
            </constant>
            <constant name="DWLP_USER" access="public">
                <type primitive="False">uint</type>
                <value>
                    <unchecked>
                        <value>
                            <code>0 + (uint)(sizeof(nint)) + (uint)(sizeof(delegate* unmanaged&lt;IntPtr, uint, nuint, nint, nint&gt;))
            </code>
                        </value>
                    </unchecked>
                </value>
            </constant>
            <constant name="IsDialogMessage" access="public">
                <type primitive="False">delegate*&lt;IntPtr, MSG*, int&gt;</type>
                <value>
                    <deref>
                        <code>IsDialogMessageW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DlgDirList" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, int, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>DlgDirListW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DDL_READWRITE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="DDL_READONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DDL_HIDDEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DDL_SYSTEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DDL_DIRECTORY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="DDL_ARCHIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="DDL_POSTMSGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="DDL_DRIVES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="DDL_EXCLUSIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="DlgDirSelectEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, int, int&gt;</type>
                <value>
                    <deref>
                        <code>DlgDirSelectExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DlgDirListComboBox" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, int, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>DlgDirListComboBoxW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DlgDirSelectComboBoxEx" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, int, int, int&gt;</type>
                <value>
                    <deref>
                        <code>DlgDirSelectComboBoxExW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DS_ABSALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01
            </code>
                </value>
            </constant>
            <constant name="DS_SYSMODAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02
            </code>
                </value>
            </constant>
            <constant name="DS_LOCALEDIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20
            </code>
                </value>
            </constant>
            <constant name="DS_SETFONT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40
            </code>
                </value>
            </constant>
            <constant name="DS_MODALFRAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x80
            </code>
                </value>
            </constant>
            <constant name="DS_NOIDLEMSG" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x100
            </code>
                </value>
            </constant>
            <constant name="DS_SETFOREGROUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x200
            </code>
                </value>
            </constant>
            <constant name="DS_3DLOOK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DS_FIXEDSYS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="DS_NOFAILCREATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="DS_CONTROL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="DS_CENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="DS_CENTERMOUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="DS_CONTEXTHELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="DS_SHELLFONT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x40 | 0x0008)
            </code>
                </value>
            </constant>
            <constant name="DM_GETDEFID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0400 + 0)
            </code>
                </value>
            </constant>
            <constant name="DM_SETDEFID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0400 + 1)
            </code>
                </value>
            </constant>
            <constant name="DM_REPOSITION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0400 + 2)
            </code>
                </value>
            </constant>
            <constant name="DC_HASDEFID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x534B
            </code>
                </value>
            </constant>
            <constant name="DLGC_WANTARROWS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="DLGC_WANTTAB" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="DLGC_WANTALLKEYS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DLGC_WANTMESSAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DLGC_HASSETSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="DLGC_DEFPUSHBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="DLGC_UNDEFPUSHBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="DLGC_RADIOBUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="DLGC_WANTCHARS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="DLGC_STATIC" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="DLGC_BUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="LB_CTLCODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="LB_OKAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="LB_ERR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="LB_ERRSPACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-2)
            </code>
                </value>
            </constant>
            <constant name="LBN_ERRSPACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-2)
            </code>
                </value>
            </constant>
            <constant name="LBN_SELCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="LBN_DBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="LBN_SELCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="LBN_SETFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="LBN_KILLFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="LB_ADDSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0180
            </code>
                </value>
            </constant>
            <constant name="LB_INSERTSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0181
            </code>
                </value>
            </constant>
            <constant name="LB_DELETESTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0182
            </code>
                </value>
            </constant>
            <constant name="LB_SELITEMRANGEEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0183
            </code>
                </value>
            </constant>
            <constant name="LB_RESETCONTENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0184
            </code>
                </value>
            </constant>
            <constant name="LB_SETSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0185
            </code>
                </value>
            </constant>
            <constant name="LB_SETCURSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0186
            </code>
                </value>
            </constant>
            <constant name="LB_GETSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0187
            </code>
                </value>
            </constant>
            <constant name="LB_GETCURSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0188
            </code>
                </value>
            </constant>
            <constant name="LB_GETTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0189
            </code>
                </value>
            </constant>
            <constant name="LB_GETTEXTLEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x018A
            </code>
                </value>
            </constant>
            <constant name="LB_GETCOUNT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x018B
            </code>
                </value>
            </constant>
            <constant name="LB_SELECTSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x018C
            </code>
                </value>
            </constant>
            <constant name="LB_DIR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x018D
            </code>
                </value>
            </constant>
            <constant name="LB_GETTOPINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x018E
            </code>
                </value>
            </constant>
            <constant name="LB_FINDSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x018F
            </code>
                </value>
            </constant>
            <constant name="LB_GETSELCOUNT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0190
            </code>
                </value>
            </constant>
            <constant name="LB_GETSELITEMS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0191
            </code>
                </value>
            </constant>
            <constant name="LB_SETTABSTOPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0192
            </code>
                </value>
            </constant>
            <constant name="LB_GETHORIZONTALEXTENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0193
            </code>
                </value>
            </constant>
            <constant name="LB_SETHORIZONTALEXTENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0194
            </code>
                </value>
            </constant>
            <constant name="LB_SETCOLUMNWIDTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0195
            </code>
                </value>
            </constant>
            <constant name="LB_ADDFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0196
            </code>
                </value>
            </constant>
            <constant name="LB_SETTOPINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0197
            </code>
                </value>
            </constant>
            <constant name="LB_GETITEMRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0198
            </code>
                </value>
            </constant>
            <constant name="LB_GETITEMDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0199
            </code>
                </value>
            </constant>
            <constant name="LB_SETITEMDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x019A
            </code>
                </value>
            </constant>
            <constant name="LB_SELITEMRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x019B
            </code>
                </value>
            </constant>
            <constant name="LB_SETANCHORINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x019C
            </code>
                </value>
            </constant>
            <constant name="LB_GETANCHORINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x019D
            </code>
                </value>
            </constant>
            <constant name="LB_SETCARETINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x019E
            </code>
                </value>
            </constant>
            <constant name="LB_GETCARETINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x019F
            </code>
                </value>
            </constant>
            <constant name="LB_SETITEMHEIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01A0
            </code>
                </value>
            </constant>
            <constant name="LB_GETITEMHEIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01A1
            </code>
                </value>
            </constant>
            <constant name="LB_FINDSTRINGEXACT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01A2
            </code>
                </value>
            </constant>
            <constant name="LB_SETLOCALE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01A5
            </code>
                </value>
            </constant>
            <constant name="LB_GETLOCALE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01A6
            </code>
                </value>
            </constant>
            <constant name="LB_SETCOUNT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01A7
            </code>
                </value>
            </constant>
            <constant name="LB_INITSTORAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01A8
            </code>
                </value>
            </constant>
            <constant name="LB_ITEMFROMPOINT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01A9
            </code>
                </value>
            </constant>
            <constant name="LB_GETLISTBOXINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01B2
            </code>
                </value>
            </constant>
            <constant name="LB_MSGMAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01B3
            </code>
                </value>
            </constant>
            <constant name="LBS_NOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="LBS_SORT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="LBS_NOREDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="LBS_MULTIPLESEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="LBS_OWNERDRAWFIXED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="LBS_OWNERDRAWVARIABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="LBS_HASSTRINGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="LBS_USETABSTOPS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="LBS_NOINTEGRALHEIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="LBS_MULTICOLUMN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="LBS_WANTKEYBOARDINPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="LBS_EXTENDEDSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="LBS_DISABLENOSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x1000
            </code>
                </value>
            </constant>
            <constant name="LBS_NODATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="LBS_NOSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="LBS_COMBOBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="LBS_STANDARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001 | 0x0002 | 0x00200000 | 0x00800000)
            </code>
                </value>
            </constant>
            <constant name="CB_OKAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="CB_ERR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="CB_ERRSPACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-2)
            </code>
                </value>
            </constant>
            <constant name="CBN_ERRSPACE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(-1)
            </code>
                </value>
            </constant>
            <constant name="CBN_SELCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="CBN_DBLCLK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="CBN_SETFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="CBN_KILLFOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="CBN_EDITCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="CBN_EDITUPDATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="CBN_DROPDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="CBN_CLOSEUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="CBN_SELENDOK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="CBN_SELENDCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="CBS_SIMPLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="CBS_DROPDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="CBS_DROPDOWNLIST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="CBS_OWNERDRAWFIXED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="CBS_OWNERDRAWVARIABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="CBS_AUTOHSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="CBS_OEMCONVERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="CBS_SORT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="CBS_HASSTRINGS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="CBS_NOINTEGRALHEIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="CBS_DISABLENOSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="CBS_UPPERCASE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000
            </code>
                </value>
            </constant>
            <constant name="CBS_LOWERCASE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4000
            </code>
                </value>
            </constant>
            <constant name="CB_GETEDITSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0140
            </code>
                </value>
            </constant>
            <constant name="CB_LIMITTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0141
            </code>
                </value>
            </constant>
            <constant name="CB_SETEDITSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0142
            </code>
                </value>
            </constant>
            <constant name="CB_ADDSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0143
            </code>
                </value>
            </constant>
            <constant name="CB_DELETESTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0144
            </code>
                </value>
            </constant>
            <constant name="CB_DIR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0145
            </code>
                </value>
            </constant>
            <constant name="CB_GETCOUNT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0146
            </code>
                </value>
            </constant>
            <constant name="CB_GETCURSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0147
            </code>
                </value>
            </constant>
            <constant name="CB_GETLBTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0148
            </code>
                </value>
            </constant>
            <constant name="CB_GETLBTEXTLEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0149
            </code>
                </value>
            </constant>
            <constant name="CB_INSERTSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x014A
            </code>
                </value>
            </constant>
            <constant name="CB_RESETCONTENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x014B
            </code>
                </value>
            </constant>
            <constant name="CB_FINDSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x014C
            </code>
                </value>
            </constant>
            <constant name="CB_SELECTSTRING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x014D
            </code>
                </value>
            </constant>
            <constant name="CB_SETCURSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x014E
            </code>
                </value>
            </constant>
            <constant name="CB_SHOWDROPDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x014F
            </code>
                </value>
            </constant>
            <constant name="CB_GETITEMDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0150
            </code>
                </value>
            </constant>
            <constant name="CB_SETITEMDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0151
            </code>
                </value>
            </constant>
            <constant name="CB_GETDROPPEDCONTROLRECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0152
            </code>
                </value>
            </constant>
            <constant name="CB_SETITEMHEIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0153
            </code>
                </value>
            </constant>
            <constant name="CB_GETITEMHEIGHT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0154
            </code>
                </value>
            </constant>
            <constant name="CB_SETEXTENDEDUI" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0155
            </code>
                </value>
            </constant>
            <constant name="CB_GETEXTENDEDUI" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0156
            </code>
                </value>
            </constant>
            <constant name="CB_GETDROPPEDSTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0157
            </code>
                </value>
            </constant>
            <constant name="CB_FINDSTRINGEXACT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0158
            </code>
                </value>
            </constant>
            <constant name="CB_SETLOCALE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0159
            </code>
                </value>
            </constant>
            <constant name="CB_GETLOCALE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x015A
            </code>
                </value>
            </constant>
            <constant name="CB_GETTOPINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x015b
            </code>
                </value>
            </constant>
            <constant name="CB_SETTOPINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x015c
            </code>
                </value>
            </constant>
            <constant name="CB_GETHORIZONTALEXTENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x015d
            </code>
                </value>
            </constant>
            <constant name="CB_SETHORIZONTALEXTENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x015e
            </code>
                </value>
            </constant>
            <constant name="CB_GETDROPPEDWIDTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x015f
            </code>
                </value>
            </constant>
            <constant name="CB_SETDROPPEDWIDTH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0160
            </code>
                </value>
            </constant>
            <constant name="CB_INITSTORAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0161
            </code>
                </value>
            </constant>
            <constant name="CB_GETCOMBOBOXINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0164
            </code>
                </value>
            </constant>
            <constant name="CB_MSGMAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0165
            </code>
                </value>
            </constant>
            <constant name="SBS_HORZ" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="SBS_VERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="SBS_TOPALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="SBS_LEFTALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="SBS_BOTTOMALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="SBS_RIGHTALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="SBS_SIZEBOXTOPLEFTALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="SBS_SIZEBOXBOTTOMRIGHTALIGN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="SBS_SIZEBOX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="SBS_SIZEGRIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="SBM_SETPOS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00E0
            </code>
                </value>
            </constant>
            <constant name="SBM_GETPOS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00E1
            </code>
                </value>
            </constant>
            <constant name="SBM_SETRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00E2
            </code>
                </value>
            </constant>
            <constant name="SBM_SETRANGEREDRAW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00E6
            </code>
                </value>
            </constant>
            <constant name="SBM_GETRANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00E3
            </code>
                </value>
            </constant>
            <constant name="SBM_ENABLE_ARROWS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00E4
            </code>
                </value>
            </constant>
            <constant name="SBM_SETSCROLLINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00E9
            </code>
                </value>
            </constant>
            <constant name="SBM_GETSCROLLINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00EA
            </code>
                </value>
            </constant>
            <constant name="SBM_GETSCROLLBARINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00EB
            </code>
                </value>
            </constant>
            <constant name="SIF_RANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="SIF_PAGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="SIF_POS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="SIF_DISABLENOSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="SIF_TRACKPOS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="SIF_ALL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0x0001 | 0x0002 | 0x0004 | 0x0010)
            </code>
                </value>
            </constant>
            <constant name="MDIS_ALLCHILDSTYLES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="MDITILE_VERTICAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="MDITILE_HORIZONTAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="MDITILE_SKIPDISABLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="MDITILE_ZORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="DefFrameProc" access="public">
                <type primitive="False">delegate*&lt;IntPtr, IntPtr, uint, nuint, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>DefFrameProcW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="DefMDIChildProc" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, nuint, nint, nint&gt;</type>
                <value>
                    <deref>
                        <code>DefMDIChildProcW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="CreateMDIWindow" access="public">
                <type primitive="False">delegate*&lt;ushort*, ushort*, uint, int, int, int, int, IntPtr, IntPtr, nint, IntPtr&gt;</type>
                <value>
                    <deref>
                        <code>CreateMDIWindowW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="HELP_CONTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="HELP_QUIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="HELP_INDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="HELP_CONTENTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="HELP_HELPONHELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="HELP_SETINDEX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0005
            </code>
                </value>
            </constant>
            <constant name="HELP_SETCONTENTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0005
            </code>
                </value>
            </constant>
            <constant name="HELP_CONTEXTPOPUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="HELP_FORCEFILE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0009
            </code>
                </value>
            </constant>
            <constant name="HELP_KEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0101
            </code>
                </value>
            </constant>
            <constant name="HELP_COMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0102
            </code>
                </value>
            </constant>
            <constant name="HELP_PARTIALKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0105
            </code>
                </value>
            </constant>
            <constant name="HELP_MULTIKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0201
            </code>
                </value>
            </constant>
            <constant name="HELP_SETWINPOS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0203
            </code>
                </value>
            </constant>
            <constant name="HELP_CONTEXTMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000a
            </code>
                </value>
            </constant>
            <constant name="HELP_FINDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000b
            </code>
                </value>
            </constant>
            <constant name="HELP_WM_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000c
            </code>
                </value>
            </constant>
            <constant name="HELP_SETPOPUP_POS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000d
            </code>
                </value>
            </constant>
            <constant name="HELP_TCARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="HELP_TCARD_DATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="HELP_TCARD_OTHER_CALLER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0011
            </code>
                </value>
            </constant>
            <constant name="IDH_NO_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28440
            </code>
                </value>
            </constant>
            <constant name="IDH_MISSING_CONTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28441
            </code>
                </value>
            </constant>
            <constant name="IDH_GENERIC_HELP_BUTTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28442
            </code>
                </value>
            </constant>
            <constant name="IDH_OK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28443
            </code>
                </value>
            </constant>
            <constant name="IDH_CANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28444
            </code>
                </value>
            </constant>
            <constant name="IDH_HELP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>28445
            </code>
                </value>
            </constant>
            <constant name="WinHelp" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, uint, nuint, int&gt;</type>
                <value>
                    <deref>
                        <code>WinHelpW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GR_GDIOBJECTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="GR_USEROBJECTS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="GR_GDIOBJECTS_PEAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="GR_USEROBJECTS_PEAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="GR_GLOBAL" access="public">
                <type primitive="False">IntPtr</type>
                <value>
                    <code>
                        <value></value>((IntPtr)-2)
            </code>
                </value>
            </constant>
            <constant name="FKF_FILTERKEYSON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="FKF_AVAILABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="FKF_HOTKEYACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="FKF_CONFIRMHOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="FKF_HOTKEYSOUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="FKF_INDICATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="FKF_CLICKON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="SKF_STICKYKEYSON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SKF_AVAILABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SKF_HOTKEYACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="SKF_CONFIRMHOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="SKF_HOTKEYSOUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="SKF_INDICATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="SKF_AUDIBLEFEEDBACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="SKF_TRISTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="SKF_TWOKEYSOFF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="SKF_LALTLATCHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="SKF_LCTLLATCHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04000000
            </code>
                </value>
            </constant>
            <constant name="SKF_LSHIFTLATCHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000000
            </code>
                </value>
            </constant>
            <constant name="SKF_RALTLATCHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="SKF_RCTLLATCHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08000000
            </code>
                </value>
            </constant>
            <constant name="SKF_RSHIFTLATCHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02000000
            </code>
                </value>
            </constant>
            <constant name="SKF_LWINLATCHED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40000000
            </code>
                </value>
            </constant>
            <constant name="SKF_RWINLATCHED" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="SKF_LALTLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="SKF_LCTLLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="SKF_LSHIFTLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="SKF_RALTLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="SKF_RCTLLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="SKF_RSHIFTLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="SKF_LWINLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00400000
            </code>
                </value>
            </constant>
            <constant name="SKF_RWINLOCKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00800000
            </code>
                </value>
            </constant>
            <constant name="MKF_MOUSEKEYSON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MKF_AVAILABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="MKF_HOTKEYACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="MKF_CONFIRMHOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="MKF_HOTKEYSOUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="MKF_INDICATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="MKF_MODIFIERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="MKF_REPLACENUMBERS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="MKF_LEFTBUTTONSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="MKF_RIGHTBUTTONSEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="MKF_LEFTBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000000
            </code>
                </value>
            </constant>
            <constant name="MKF_RIGHTBUTTONDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02000000
            </code>
                </value>
            </constant>
            <constant name="MKF_MOUSEMODE" access="public">
                <type primitive="True">uint</type>
                <value>
                    <code>0x80000000
            </code>
                </value>
            </constant>
            <constant name="ATF_TIMEOUTON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="ATF_ONOFFFEEDBACK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SSGF_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SSGF_DISPLAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SSTF_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SSTF_CHARS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SSTF_BORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SSTF_DISPLAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SSWF_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="SSWF_TITLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SSWF_WINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SSWF_DISPLAY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SSWF_CUSTOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SSF_SOUNDSENTRYON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SSF_AVAILABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SSF_INDICATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="TKF_TOGGLEKEYSON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="TKF_AVAILABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="TKF_HOTKEYACTIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="TKF_CONFIRMHOTKEY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="TKF_HOTKEYSOUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="TKF_INDICATOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="SLE_ERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="SLE_MINORERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="SLE_WARNING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000003
            </code>
                </value>
            </constant>
            <constant name="MONITOR_DEFAULTTONULL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000000
            </code>
                </value>
            </constant>
            <constant name="MONITOR_DEFAULTTOPRIMARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="MONITOR_DEFAULTTONEAREST" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="MONITORINFOF_PRIMARY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GetMonitorInfo" access="public">
                <type primitive="False">delegate*&lt;IntPtr, MONITORINFO*, int&gt;</type>
                <value>
                    <deref>
                        <code>GetMonitorInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="WINEVENT_OUTOFCONTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0000
            </code>
                </value>
            </constant>
            <constant name="WINEVENT_SKIPOWNTHREAD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="WINEVENT_SKIPOWNPROCESS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="WINEVENT_INCONTEXT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="CHILDID_SELF" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="INDEXID_OBJECT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="INDEXID_CONTAINER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="OBJID_WINDOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>
                        <value></value>((int)0x00000000)
            </code>
                </value>
            </constant>
            <constant name="OBJID_SYSMENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFFF)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_TITLEBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFFE)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_MENU" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFFD)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_CLIENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFFC)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_VSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFFB)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_HSCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFFA)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_SIZEGRIP" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFF9)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_CARET" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFF8)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_CURSOR" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFF7)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_ALERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFF6)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_SOUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFF5)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_QUERYCLASSNAMEIDX" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFF4)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="OBJID_NATIVEOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <unchecked>
                        <code>
                            <value></value>((int)0xFFFFFFF0)
            </code>
                    </unchecked>
                </value>
            </constant>
            <constant name="EVENT_MIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="EVENT_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7FFFFFFF
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SOUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_ALERT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_FOREGROUND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0003
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_MENUSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_MENUEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0005
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_MENUPOPUPSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0006
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_MENUPOPUPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0007
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_CAPTURESTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_CAPTUREEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0009
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_MOVESIZESTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000A
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_MOVESIZEEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000B
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_CONTEXTHELPSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000C
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_CONTEXTHELPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000D
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_DRAGDROPSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000E
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_DRAGDROPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000F
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_DIALOGSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_DIALOGEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0011
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SCROLLINGSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0012
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SCROLLINGEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0013
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SWITCHSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0014
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SWITCHEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0015
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_MINIMIZESTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0016
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_MINIMIZEEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0017
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_DESKTOPSWITCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SWITCHER_APPGRABBED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0024
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SWITCHER_APPOVERTARGET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0025
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SWITCHER_APPDROPPED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0026
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_SWITCHER_CANCELLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0027
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_IME_KEY_NOTIFICATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0029
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00FF
            </code>
                </value>
            </constant>
            <constant name="EVENT_OEM_DEFINED_START" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0101
            </code>
                </value>
            </constant>
            <constant name="EVENT_OEM_DEFINED_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01FF
            </code>
                </value>
            </constant>
            <constant name="EVENT_UIA_EVENTID_START" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4E00
            </code>
                </value>
            </constant>
            <constant name="EVENT_UIA_EVENTID_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4EFF
            </code>
                </value>
            </constant>
            <constant name="EVENT_UIA_PROPID_START" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x7500
            </code>
                </value>
            </constant>
            <constant name="EVENT_UIA_PROPID_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x75FF
            </code>
                </value>
            </constant>
            <constant name="EVENT_CONSOLE_CARET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4001
            </code>
                </value>
            </constant>
            <constant name="EVENT_CONSOLE_UPDATE_REGION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4002
            </code>
                </value>
            </constant>
            <constant name="EVENT_CONSOLE_UPDATE_SIMPLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4003
            </code>
                </value>
            </constant>
            <constant name="EVENT_CONSOLE_UPDATE_SCROLL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4004
            </code>
                </value>
            </constant>
            <constant name="EVENT_CONSOLE_LAYOUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4005
            </code>
                </value>
            </constant>
            <constant name="EVENT_CONSOLE_START_APPLICATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4006
            </code>
                </value>
            </constant>
            <constant name="EVENT_CONSOLE_END_APPLICATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x4007
            </code>
                </value>
            </constant>
            <constant name="CONSOLE_APPLICATION_16BIT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="CONSOLE_CARET_SELECTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="CONSOLE_CARET_VISIBLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="EVENT_CONSOLE_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x40FF
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_CREATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8000
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DESTROY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8001
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_SHOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8002
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_HIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8003
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_REORDER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8004
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_FOCUS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8005
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_SELECTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8006
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_SELECTIONADD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8007
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_SELECTIONREMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8008
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_SELECTIONWITHIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8009
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_STATECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x800A
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_LOCATIONCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x800B
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_NAMECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x800C
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DESCRIPTIONCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x800D
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_VALUECHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x800E
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_PARENTCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x800F
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_HELPCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8010
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DEFACTIONCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8011
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_ACCELERATORCHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8012
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_INVOKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8013
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_TEXTSELECTIONCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8014
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_CONTENTSCROLLED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8015
            </code>
                </value>
            </constant>
            <constant name="EVENT_SYSTEM_ARRANGMENTPREVIEW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8016
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_CLOAKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8017
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_UNCLOAKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8018
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_LIVEREGIONCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8019
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_HOSTEDOBJECTSINVALIDATED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8020
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DRAGSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8021
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DRAGCANCEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8022
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DRAGCOMPLETE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8023
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DRAGENTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8024
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DRAGLEAVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8025
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_DRAGDROPPED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8026
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_IME_SHOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8027
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_IME_HIDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8028
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_IME_CHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8029
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_TEXTEDIT_CONVERSIONTARGETCHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x8030
            </code>
                </value>
            </constant>
            <constant name="EVENT_OBJECT_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x80FF
            </code>
                </value>
            </constant>
            <constant name="EVENT_AIA_START" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xA000
            </code>
                </value>
            </constant>
            <constant name="EVENT_AIA_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xAFFF
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_STARTUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_SHUTDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_BEEP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_ERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_QUESTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_WARNING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_INFORMATION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_MAXIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_MINIMIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>9
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_RESTOREUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>10
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_RESTOREDOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>11
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_APPSTART" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>12
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_FAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>13
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_APPEND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>14
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_MENUCOMMAND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>15
            </code>
                </value>
            </constant>
            <constant name="SOUND_SYSTEM_MENUPOPUP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="CSOUND_SYSTEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>16
            </code>
                </value>
            </constant>
            <constant name="ALERT_SYSTEM_INFORMATIONAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="ALERT_SYSTEM_WARNING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="ALERT_SYSTEM_ERROR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="ALERT_SYSTEM_QUERY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="ALERT_SYSTEM_CRITICAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="CALERT_SYSTEM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="GUI_CARETBLINKING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GUI_INMOVESIZE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="GUI_INMENUMODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="GUI_SYSTEMMENUMODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="GUI_POPUPMENUMODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="GUI_16BITTASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="USER_DEFAULT_SCREEN_DPI" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>96
            </code>
                </value>
            </constant>
            <constant name="GetWindowModuleFileName" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>GetWindowModuleFileNameW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_UNAVAILABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_SELECTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_FOCUSED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_PRESSED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_CHECKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_MIXED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_INDETERMINATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_READONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_HOTTRACKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_EXPANDED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_COLLAPSED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_BUSY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000800
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_FLOATING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_MARQUEED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_ANIMATED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00004000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_INVISIBLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00008000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_OFFSCREEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00010000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_SIZEABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00020000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_MOVEABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00040000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_SELFVOICING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00080000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_FOCUSABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00100000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_SELECTABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00200000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_LINKED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00400000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_TRAVERSED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00800000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_MULTISELECTABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x01000000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_EXTSELECTABLE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02000000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_ALERT_LOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04000000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_ALERT_MEDIUM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08000000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_ALERT_HIGH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_PROTECTED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000000
            </code>
                </value>
            </constant>
            <constant name="STATE_SYSTEM_VALID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x3FFFFFFF
            </code>
                </value>
            </constant>
            <constant name="CCHILDREN_TITLEBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="CCHILDREN_SCROLLBAR" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="CURSOR_SHOWING" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="CURSOR_SUPPRESSED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="WS_ACTIVECAPTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="GA_PARENT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="GA_ROOT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="GA_ROOTOWNER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="RealGetWindowClass" access="public">
                <type primitive="False">delegate*&lt;IntPtr, ushort*, uint, uint&gt;</type>
                <value>
                    <deref>
                        <code>RealGetWindowClassW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="GetAltTabInfo" access="public">
                <type primitive="False">delegate*&lt;IntPtr, int, ALTTABINFO*, ushort*, uint, int&gt;</type>
                <value>
                    <deref>
                        <code>GetAltTabInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="RIM_INPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="RIM_INPUTSINK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="RIM_TYPEMOUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="RIM_TYPEKEYBOARD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="RIM_TYPEHID" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="RIM_TYPEMAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_LEFT_BUTTON_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_LEFT_BUTTON_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_RIGHT_BUTTON_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_RIGHT_BUTTON_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_MIDDLE_BUTTON_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_MIDDLE_BUTTON_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_1_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0001
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_1_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0002
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_2_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0004
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_2_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0008
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_3_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0010
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_3_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0020
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_4_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0040
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_4_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0080
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_5_DOWN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0100
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_BUTTON_5_UP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0200
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_WHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0400
            </code>
                </value>
            </constant>
            <constant name="RI_MOUSE_HWHEEL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x0800
            </code>
                </value>
            </constant>
            <constant name="MOUSE_MOVE_RELATIVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="MOUSE_MOVE_ABSOLUTE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="MOUSE_VIRTUAL_DESKTOP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x02
            </code>
                </value>
            </constant>
            <constant name="MOUSE_ATTRIBUTES_CHANGED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x04
            </code>
                </value>
            </constant>
            <constant name="MOUSE_MOVE_NOCOALESCE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x08
            </code>
                </value>
            </constant>
            <constant name="KEYBOARD_OVERRUN_MAKE_CODE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0xFF
            </code>
                </value>
            </constant>
            <constant name="RI_KEY_MAKE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0
            </code>
                </value>
            </constant>
            <constant name="RI_KEY_BREAK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="RI_KEY_E0" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="RI_KEY_E1" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="RI_KEY_TERMSRV_SET_LED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>8
            </code>
                </value>
            </constant>
            <constant name="RI_KEY_TERMSRV_SHADOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10
            </code>
                </value>
            </constant>
            <constant name="RID_INPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000003
            </code>
                </value>
            </constant>
            <constant name="RID_HEADER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x10000005
            </code>
                </value>
            </constant>
            <constant name="RIDI_PREPARSEDDATA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000005
            </code>
                </value>
            </constant>
            <constant name="RIDI_DEVICENAME" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x20000007
            </code>
                </value>
            </constant>
            <constant name="RIDI_DEVICEINFO" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x2000000b
            </code>
                </value>
            </constant>
            <constant name="GetRawInputDeviceInfo" access="public">
                <type primitive="False">delegate*&lt;IntPtr, uint, void*, uint*, uint&gt;</type>
                <value>
                    <deref>
                        <code>GetRawInputDeviceInfoW
            </code>
                    </deref>
                </value>
            </constant>
            <constant name="RIDEV_REMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="RIDEV_EXCLUDE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="RIDEV_PAGEONLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000020
            </code>
                </value>
            </constant>
            <constant name="RIDEV_NOLEGACY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000030
            </code>
                </value>
            </constant>
            <constant name="RIDEV_INPUTSINK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000100
            </code>
                </value>
            </constant>
            <constant name="RIDEV_CAPTUREMOUSE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="RIDEV_NOHOTKEYS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000200
            </code>
                </value>
            </constant>
            <constant name="RIDEV_APPKEYS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000400
            </code>
                </value>
            </constant>
            <constant name="RIDEV_EXINPUTSINK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00001000
            </code>
                </value>
            </constant>
            <constant name="RIDEV_DEVNOTIFY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00002000
            </code>
                </value>
            </constant>
            <constant name="RIDEV_EXMODEMASK" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x000000F0
            </code>
                </value>
            </constant>
            <constant name="GIDC_ARRIVAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="GIDC_REMOVAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="POINTER_DEVICE_PRODUCT_STRING_MAX" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>520
            </code>
                </value>
            </constant>
            <constant name="PDC_ARRIVAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x001
            </code>
                </value>
            </constant>
            <constant name="PDC_REMOVAL" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x002
            </code>
                </value>
            </constant>
            <constant name="PDC_ORIENTATION_0" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x004
            </code>
                </value>
            </constant>
            <constant name="PDC_ORIENTATION_90" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x008
            </code>
                </value>
            </constant>
            <constant name="PDC_ORIENTATION_180" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x010
            </code>
                </value>
            </constant>
            <constant name="PDC_ORIENTATION_270" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x020
            </code>
                </value>
            </constant>
            <constant name="PDC_MODE_DEFAULT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x040
            </code>
                </value>
            </constant>
            <constant name="PDC_MODE_CENTERED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x080
            </code>
                </value>
            </constant>
            <constant name="PDC_MAPPING_CHANGE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x100
            </code>
                </value>
            </constant>
            <constant name="PDC_RESOLUTION" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x200
            </code>
                </value>
            </constant>
            <constant name="PDC_ORIGIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x400
            </code>
                </value>
            </constant>
            <constant name="PDC_MODE_ASPECTRATIOPRESERVED" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x800
            </code>
                </value>
            </constant>
            <constant name="MSGFLT_ADD" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="MSGFLT_REMOVE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="MSGFLTINFO_NONE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0)
            </code>
                </value>
            </constant>
            <constant name="MSGFLTINFO_ALREADYALLOWED_FORWND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(1)
            </code>
                </value>
            </constant>
            <constant name="MSGFLTINFO_ALREADYDISALLOWED_FORWND" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(2)
            </code>
                </value>
            </constant>
            <constant name="MSGFLTINFO_ALLOWED_HIGHER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(3)
            </code>
                </value>
            </constant>
            <constant name="MSGFLT_RESET" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(0)
            </code>
                </value>
            </constant>
            <constant name="MSGFLT_ALLOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(1)
            </code>
                </value>
            </constant>
            <constant name="MSGFLT_DISALLOW" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>(2)
            </code>
                </value>
            </constant>
            <constant name="GF_BEGIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GF_INERTIA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="GF_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="GID_BEGIN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>1
            </code>
                </value>
            </constant>
            <constant name="GID_END" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>2
            </code>
                </value>
            </constant>
            <constant name="GID_ZOOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>3
            </code>
                </value>
            </constant>
            <constant name="GID_PAN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>4
            </code>
                </value>
            </constant>
            <constant name="GID_ROTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>5
            </code>
                </value>
            </constant>
            <constant name="GID_TWOFINGERTAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>6
            </code>
                </value>
            </constant>
            <constant name="GID_PRESSANDTAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="GID_ROLLOVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>7
            </code>
                </value>
            </constant>
            <constant name="GC_ALLGESTURES" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GC_ZOOM" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GC_PAN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GC_PAN_WITH_SINGLE_FINGER_VERTICALLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="GC_PAN_WITH_GUTTER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="GC_PAN_WITH_INERTIA" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000010
            </code>
                </value>
            </constant>
            <constant name="GC_ROTATE" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GC_TWOFINGERTAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GC_PRESSANDTAP" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GC_ROLLOVER" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="GESTURECONFIGMAXCOUNT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>256
            </code>
                </value>
            </constant>
            <constant name="GCF_INCLUDE_ANCESTORS" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="NID_INTEGRATED_TOUCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000001
            </code>
                </value>
            </constant>
            <constant name="NID_EXTERNAL_TOUCH" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000002
            </code>
                </value>
            </constant>
            <constant name="NID_INTEGRATED_PEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000004
            </code>
                </value>
            </constant>
            <constant name="NID_EXTERNAL_PEN" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000008
            </code>
                </value>
            </constant>
            <constant name="NID_MULTI_INPUT" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000040
            </code>
                </value>
            </constant>
            <constant name="NID_READY" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>0x00000080
            </code>
                </value>
            </constant>
            <constant name="MAX_STR_BLOCKREASON" access="public">
                <type primitive="True">int</type>
                <value>
                    <code>256
            </code>
                </value>
            </constant>
        </class>
    </namespace>
</bindings>
