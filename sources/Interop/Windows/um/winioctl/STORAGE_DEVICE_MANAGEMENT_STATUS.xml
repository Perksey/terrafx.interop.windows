<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/winioctl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="STORAGE_DEVICE_MANAGEMENT_STATUS" access="public">
            <field name="Version" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="Size" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="Health" access="public">
                <type native="">STORAGE_DISK_HEALTH_STATUS</type>
            </field>
            <field name="NumberOfOperationalStatus" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="NumberOfAdditionalReasons" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="OperationalStatus" access="public">
                <type native="STORAGE_DISK_OPERATIONAL_STATUS [16]" count="16" fixed="_OperationalStatus_e__FixedBuffer">STORAGE_DISK_OPERATIONAL_STATUS</type>
            </field>
            <field name="AdditionalReasons" access="public">
                <type native="STORAGE_OPERATIONAL_REASON [1]" count="1" fixed="_AdditionalReasons_e__FixedBuffer">STORAGE_OPERATIONAL_REASON</type>
            </field>
            <struct name="_OperationalStatus_e__FixedBuffer" access="public">
                <field name="e0" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e1" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e2" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e3" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e4" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e5" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e6" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e7" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e8" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e9" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e10" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e11" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e12" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e13" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e14" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <field name="e15" access="public">
                    <type native="">STORAGE_DISK_OPERATIONAL_STATUS</type>
                </field>
                <indexer access="public">
                    <type>ref STORAGE_DISK_OPERATIONAL_STATUS</type>
                    <param name="index">
                        <type>int</type>
                    </param>
                    <get inlining="aggressive">
                        <code>return ref AsSpan()[index];
        </code>
                    </get>
                </indexer>
                <function name="AsSpan" access="public" unsafe="true">
                    <type>Span&lt;STORAGE_DISK_OPERATIONAL_STATUS&gt;</type>
                    <code>MemoryMarshal.CreateSpan(ref e0, 16);
        </code>
                </function>
            </struct>
            <struct name="_AdditionalReasons_e__FixedBuffer" access="public">
                <field name="e0" access="public">
                    <type native="">STORAGE_OPERATIONAL_REASON</type>
                </field>
                <indexer access="public">
                    <type>ref STORAGE_OPERATIONAL_REASON</type>
                    <param name="index">
                        <type>int</type>
                    </param>
                    <get inlining="aggressive">
                        <code>return ref AsSpan(int.MaxValue)[index];
        </code>
                    </get>
                </indexer>
                <function name="AsSpan" access="public" unsafe="true">
                    <type>Span&lt;STORAGE_OPERATIONAL_REASON&gt;</type>
                    <param name="length">
                        <type>int</type>
                    </param>
                    <code>MemoryMarshal.CreateSpan(ref e0, length);
        </code>
                </function>
            </struct>
        </struct>
    </namespace>
</bindings>
