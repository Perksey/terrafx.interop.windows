<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/winioctl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="SCM_PHYSICAL_DEVICES" access="public">
            <field name="Version" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="Size" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="DeviceCount" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="Devices" access="public">
                <type native="SCM_PHYSICAL_DEVICE_INSTANCE [1]" count="1" fixed="_Devices_e__FixedBuffer">SCM_PHYSICAL_DEVICE_INSTANCE</type>
            </field>
            <struct name="_Devices_e__FixedBuffer" access="public">
                <field name="e0" access="public">
                    <type native="">SCM_PHYSICAL_DEVICE_INSTANCE</type>
                </field>
                <indexer access="public">
                    <type>ref SCM_PHYSICAL_DEVICE_INSTANCE</type>
                    <param name="index">
                        <type>int</type>
                    </param>
                    <get inlining="aggressive">
                        <code>return ref AsSpan(int.MaxValue)[index];
        </code>
                    </get>
                </indexer>
                <function name="AsSpan" access="public" unsafe="true">
                    <type>Span&lt;SCM_PHYSICAL_DEVICE_INSTANCE&gt;</type>
                    <param name="length">
                        <type>int</type>
                    </param>
                    <code>MemoryMarshal.CreateSpan(ref e0, length);
        </code>
                </function>
            </struct>
        </struct>
    </namespace>
</bindings>
