<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d2d1.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ID2D1SimplifiedGeometrySink" access="public" native="struct ID2D1SimplifiedGeometrySink : IUnknown" uuid="2cd9069e-12e2-11dc-9fed-001143a055f9" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetFillMode" access="public" unsafe="true">
                <type>void</type>
                <param name="fillMode">
                    <type>D2D1_FILL_MODE</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, D2D1_FILL_MODE, void&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>, <param name="fillMode">fillMode</param>);
        </code>
                </body>
            </function>
            <function name="SetSegmentFlags" access="public" unsafe="true">
                <type>void</type>
                <param name="vertexFlags">
                    <type>D2D1_PATH_SEGMENT</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, D2D1_PATH_SEGMENT, void&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>, <param name="vertexFlags">vertexFlags</param>);
        </code>
                </body>
            </function>
            <function name="BeginFigure" access="public" unsafe="true">
                <type>void</type>
                <param name="startPoint">
                    <type>D2D_POINT_2F</type>
                </param>
                <param name="figureBegin">
                    <type>D2D1_FIGURE_BEGIN</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, D2D_POINT_2F, D2D1_FIGURE_BEGIN, void&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>, <param name="startPoint">startPoint</param>, <param name="figureBegin">figureBegin</param>);
        </code>
                </body>
            </function>
            <function name="AddLines" access="public" unsafe="true">
                <type>void</type>
                <param name="points">
                    <type>D2D_POINT_2F*</type>
                </param>
                <param name="pointsCount">
                    <type>uint</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, D2D_POINT_2F*, uint, void&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>, <param name="points">points</param>, <param name="pointsCount">pointsCount</param>);
        </code>
                </body>
            </function>
            <function name="AddBeziers" access="public" unsafe="true">
                <type>void</type>
                <param name="beziers">
                    <type>D2D1_BEZIER_SEGMENT*</type>
                </param>
                <param name="beziersCount">
                    <type>uint</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, D2D1_BEZIER_SEGMENT*, uint, void&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>, <param name="beziers">beziers</param>, <param name="beziersCount">beziersCount</param>);
        </code>
                </body>
            </function>
            <function name="EndFigure" access="public" unsafe="true">
                <type>void</type>
                <param name="figureEnd">
                    <type>D2D1_FIGURE_END</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, D2D1_FIGURE_END, void&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>, <param name="figureEnd">figureEnd</param>);
        </code>
                </body>
            </function>
            <function name="Close" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID2D1SimplifiedGeometrySink*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ID2D1SimplifiedGeometrySink*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
