<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/msctf.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ITfCandidateListUIElement" access="public" native="struct ITfCandidateListUIElement : ITfUIElement" uuid="ea1ea138-19df-11d7-a6d2-00065b84435c" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetDescription" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pbstrDescription">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="pbstrDescription">pbstrDescription</param>);
        </code>
                </body>
            </function>
            <function name="GetGUID" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguid">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="pguid">pguid</param>);
        </code>
                </body>
            </function>
            <function name="Show" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bShow">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, int, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="bShow">bShow</param>);
        </code>
                </body>
            </function>
            <function name="IsShown" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pbShow">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="pbShow">pbShow</param>);
        </code>
                </body>
            </function>
            <function name="GetUpdatedFlags" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwFlags">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="pdwFlags">pdwFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetDocumentMgr" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppdim">
                    <type>ITfDocumentMgr**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, ITfDocumentMgr**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="ppdim">ppdim</param>);
        </code>
                </body>
            </function>
            <function name="GetCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="puCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="puCount">puCount</param>);
        </code>
                </body>
            </function>
            <function name="GetSelection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="puIndex">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="puIndex">puIndex</param>);
        </code>
                </body>
            </function>
            <function name="GetString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="uIndex">
                    <type>uint</type>
                </param>
                <param name="pstr">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="uIndex">uIndex</param>, <param name="pstr">pstr</param>);
        </code>
                </body>
            </function>
            <function name="GetPageIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIndex">
                    <type>uint*</type>
                </param>
                <param name="uSize">
                    <type>uint</type>
                </param>
                <param name="puPageCnt">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="pIndex">pIndex</param>, <param name="uSize">uSize</param>, <param name="puPageCnt">puPageCnt</param>);
        </code>
                </body>
            </function>
            <function name="SetPageIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIndex">
                    <type>uint*</type>
                </param>
                <param name="uPageCnt">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="pIndex">pIndex</param>, <param name="uPageCnt">uPageCnt</param>);
        </code>
                </body>
            </function>
            <function name="GetCurrentPage" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="puPage">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfCandidateListUIElement*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ITfCandidateListUIElement*)Unsafe.AsPointer(ref this)</param>, <param name="puPage">puPage</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
