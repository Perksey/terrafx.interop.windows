<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/msctf.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ITfPropertyStore" access="public" native="struct ITfPropertyStore : IUnknown" uuid="6834b120-88cb-11d2-bf45-00105a2799b5" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguid">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="pguid">pguid</param>);
        </code>
                </body>
            </function>
            <function name="GetDataType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwReserved">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="pdwReserved">pdwReserved</param>);
        </code>
                </body>
            </function>
            <function name="GetData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pvarValue">
                    <type>VARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="pvarValue">pvarValue</param>);
        </code>
                </body>
            </function>
            <function name="OnTextUpdated" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="pRangeNew">
                    <type>ITfRange*</type>
                </param>
                <param name="pfAccept">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, uint, ITfRange*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="dwFlags">dwFlags</param>, <param name="pRangeNew">pRangeNew</param>, <param name="pfAccept">pfAccept</param>);
        </code>
                </body>
            </function>
            <function name="Shrink" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRangeNew">
                    <type>ITfRange*</type>
                </param>
                <param name="pfFree">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, ITfRange*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="pRangeNew">pRangeNew</param>, <param name="pfFree">pfFree</param>);
        </code>
                </body>
            </function>
            <function name="Divide" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRangeThis">
                    <type>ITfRange*</type>
                </param>
                <param name="pRangeNew">
                    <type>ITfRange*</type>
                </param>
                <param name="ppPropStore">
                    <type>ITfPropertyStore**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, ITfRange*, ITfRange*, ITfPropertyStore**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="pRangeThis">pRangeThis</param>, <param name="pRangeNew">pRangeNew</param>, <param name="ppPropStore">ppPropStore</param>);
        </code>
                </body>
            </function>
            <function name="Clone" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pPropStore">
                    <type>ITfPropertyStore**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, ITfPropertyStore**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="pPropStore">pPropStore</param>);
        </code>
                </body>
            </function>
            <function name="GetPropertyRangeCreator" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pclsid">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="pclsid">pclsid</param>);
        </code>
                </body>
            </function>
            <function name="Serialize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pStream">
                    <type>IStream*</type>
                </param>
                <param name="pcb">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfPropertyStore*, IStream*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ITfPropertyStore*)Unsafe.AsPointer(ref this)</param>, <param name="pStream">pStream</param>, <param name="pcb">pcb</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
