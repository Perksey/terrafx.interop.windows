<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/msctf.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ITfInputProcessorProfileActivationSink" access="public" native="struct ITfInputProcessorProfileActivationSink : IUnknown" uuid="71c6e74e-0f28-11d8-a82a-00065b84435c" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfInputProcessorProfileActivationSink*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ITfInputProcessorProfileActivationSink*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfInputProcessorProfileActivationSink*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ITfInputProcessorProfileActivationSink*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfInputProcessorProfileActivationSink*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ITfInputProcessorProfileActivationSink*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="OnActivated" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwProfileType">
                    <type>uint</type>
                </param>
                <param name="langid">
                    <type>ushort</type>
                </param>
                <param name="clsid">
                    <type>Guid*</type>
                </param>
                <param name="catid">
                    <type>Guid*</type>
                </param>
                <param name="guidProfile">
                    <type>Guid*</type>
                </param>
                <param name="hkl">
                    <type>IntPtr</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfInputProcessorProfileActivationSink*, uint, ushort, Guid*, Guid*, Guid*, IntPtr, uint, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ITfInputProcessorProfileActivationSink*)Unsafe.AsPointer(ref this)</param>, <param name="dwProfileType">dwProfileType</param>, <param name="langid">langid</param>, <param name="clsid">clsid</param>, <param name="catid">catid</param>, <param name="guidProfile">guidProfile</param>, <param name="hkl">hkl</param>, <param name="dwFlags">dwFlags</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
