<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/msctf.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ITfContextView" access="public" native="struct ITfContextView : IUnknown" uuid="2433bf8e-0f9b-435c-ba2c-180611978c30" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfContextView*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ITfContextView*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfContextView*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ITfContextView*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfContextView*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ITfContextView*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetRangeFromPoint" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ec">
                    <type>uint</type>
                </param>
                <param name="ppt">
                    <type>POINT*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="ppRange">
                    <type>ITfRange**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfContextView*, uint, POINT*, uint, ITfRange**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ITfContextView*)Unsafe.AsPointer(ref this)</param>, <param name="ec">ec</param>, <param name="ppt">ppt</param>, <param name="dwFlags">dwFlags</param>, <param name="ppRange">ppRange</param>);
        </code>
                </body>
            </function>
            <function name="GetTextExt" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ec">
                    <type>uint</type>
                </param>
                <param name="pRange">
                    <type>ITfRange*</type>
                </param>
                <param name="prc">
                    <type>RECT*</type>
                </param>
                <param name="pfClipped">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfContextView*, uint, ITfRange*, RECT*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ITfContextView*)Unsafe.AsPointer(ref this)</param>, <param name="ec">ec</param>, <param name="pRange">pRange</param>, <param name="prc">prc</param>, <param name="pfClipped">pfClipped</param>);
        </code>
                </body>
            </function>
            <function name="GetScreenExt" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="prc">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfContextView*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ITfContextView*)Unsafe.AsPointer(ref this)</param>, <param name="prc">prc</param>);
        </code>
                </body>
            </function>
            <function name="GetWnd" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="phwnd">
                    <type>IntPtr*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ITfContextView*, IntPtr*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ITfContextView*)Unsafe.AsPointer(ref this)</param>, <param name="phwnd">phwnd</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
