<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/ddraw.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDirectDrawSurface" access="public" native="struct IDirectDrawSurface : IUnknown" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="AddAttachedSurface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IDirectDrawSurface*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IDirectDrawSurface*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="AddOverlayDirtyRect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="Blt" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>RECT*</type>
                </param>
                <param name="param1">
                    <type>IDirectDrawSurface*</type>
                </param>
                <param name="param2">
                    <type>RECT*</type>
                </param>
                <param name="param3">
                    <type>uint</type>
                </param>
                <param name="param4">
                    <type>DDBLTFX*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, RECT*, IDirectDrawSurface*, RECT*, uint, DDBLTFX*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>, <param name="param2">param2</param>, <param name="param3">param3</param>, <param name="param4">param4</param>);
        </code>
                </body>
            </function>
            <function name="BltBatch" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>DDBLTBATCH*</type>
                </param>
                <param name="param1">
                    <type>uint</type>
                </param>
                <param name="param2">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, DDBLTBATCH*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>, <param name="param2">param2</param>);
        </code>
                </body>
            </function>
            <function name="BltFast" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <param name="param1">
                    <type>uint</type>
                </param>
                <param name="param2">
                    <type>IDirectDrawSurface*</type>
                </param>
                <param name="param3">
                    <type>RECT*</type>
                </param>
                <param name="param4">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, uint, IDirectDrawSurface*, RECT*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>, <param name="param2">param2</param>, <param name="param3">param3</param>, <param name="param4">param4</param>);
        </code>
                </body>
            </function>
            <function name="DeleteAttachedSurface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <param name="param1">
                    <type>IDirectDrawSurface*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, IDirectDrawSurface*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="EnumAttachedSurfaces" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>void*</type>
                </param>
                <param name="param1">
                    <type>delegate* unmanaged&lt;IDirectDrawSurface*, DDSURFACEDESC*, void*, int&gt;</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, void*, delegate* unmanaged&lt;IDirectDrawSurface*, DDSURFACEDESC*, void*, int&gt;, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="EnumOverlayZOrders" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <param name="param1">
                    <type>void*</type>
                </param>
                <param name="param2">
                    <type>delegate* unmanaged&lt;IDirectDrawSurface*, DDSURFACEDESC*, void*, int&gt;</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, void*, delegate* unmanaged&lt;IDirectDrawSurface*, DDSURFACEDESC*, void*, int&gt;, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>, <param name="param2">param2</param>);
        </code>
                </body>
            </function>
            <function name="Flip" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IDirectDrawSurface*</type>
                </param>
                <param name="param1">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IDirectDrawSurface*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="GetAttachedSurface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>DDSCAPS*</type>
                </param>
                <param name="param1">
                    <type>IDirectDrawSurface**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, DDSCAPS*, IDirectDrawSurface**, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="GetBltStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="GetCaps" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>DDSCAPS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, DDSCAPS*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="GetClipper" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IDirectDrawClipper**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IDirectDrawClipper**, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="GetColorKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <param name="param1">
                    <type>DDCOLORKEY*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, DDCOLORKEY*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="GetDC" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IntPtr*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IntPtr*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="GetFlipStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="GetOverlayPosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>int*</type>
                </param>
                <param name="param1">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, int*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="GetPalette" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IDirectDrawPalette**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IDirectDrawPalette**, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="GetPixelFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>DDPIXELFORMAT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, DDPIXELFORMAT*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="GetSurfaceDesc" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>DDSURFACEDESC*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, DDSURFACEDESC*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="Initialize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IDirectDraw*</type>
                </param>
                <param name="param1">
                    <type>DDSURFACEDESC*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IDirectDraw*, DDSURFACEDESC*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="IsLost" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Lock" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>RECT*</type>
                </param>
                <param name="param1">
                    <type>DDSURFACEDESC*</type>
                </param>
                <param name="param2">
                    <type>uint</type>
                </param>
                <param name="param3">
                    <type>IntPtr</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, RECT*, DDSURFACEDESC*, uint, IntPtr, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>, <param name="param2">param2</param>, <param name="param3">param3</param>);
        </code>
                </body>
            </function>
            <function name="ReleaseDC" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IntPtr</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IntPtr, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="Restore" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetClipper" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IDirectDrawClipper*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IDirectDrawClipper*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="SetColorKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <param name="param1">
                    <type>DDCOLORKEY*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, DDCOLORKEY*, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="SetOverlayPosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>int</type>
                </param>
                <param name="param1">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, int, int, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
            <function name="SetPalette" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>IDirectDrawPalette*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, IDirectDrawPalette*, int&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="Unlock" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>void*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, void*, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="UpdateOverlay" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>RECT*</type>
                </param>
                <param name="param1">
                    <type>IDirectDrawSurface*</type>
                </param>
                <param name="param2">
                    <type>RECT*</type>
                </param>
                <param name="param3">
                    <type>uint</type>
                </param>
                <param name="param4">
                    <type>DDOVERLAYFX*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, RECT*, IDirectDrawSurface*, RECT*, uint, DDOVERLAYFX*, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>, <param name="param2">param2</param>, <param name="param3">param3</param>, <param name="param4">param4</param>);
        </code>
                </body>
            </function>
            <function name="UpdateOverlayDisplay" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">34</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>);
        </code>
                </body>
            </function>
            <function name="UpdateOverlayZOrder" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="param0">
                    <type>uint</type>
                </param>
                <param name="param1">
                    <type>IDirectDrawSurface*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDirectDrawSurface*, uint, IDirectDrawSurface*, int&gt;)(lpVtbl[<vtbl explicit="False">35</vtbl>]))(<param special="thisPtr">(IDirectDrawSurface*)Unsafe.AsPointer(ref this)</param>, <param name="param0">param0</param>, <param name="param1">param1</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
