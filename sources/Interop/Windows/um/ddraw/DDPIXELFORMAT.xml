<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/ddraw.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="DDPIXELFORMAT" access="public">
            <field name="dwSize" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="dwFlags" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="dwFourCC" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="Anonymous1" access="public">
                <type native="_DDPIXELFORMAT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/ddraw.h:712:5)">_Anonymous1_e__Union</type>
            </field>
            <field name="dwRGBBitCount" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.dwRGBBitCount, 1));
        </code>
                </get>
            </field>
            <field name="dwYUVBitCount" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.dwYUVBitCount, 1));
        </code>
                </get>
            </field>
            <field name="dwZBufferBitDepth" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.dwZBufferBitDepth, 1));
        </code>
                </get>
            </field>
            <field name="dwAlphaBitDepth" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.dwAlphaBitDepth, 1));
        </code>
                </get>
            </field>
            <field name="dwLuminanceBitCount" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.dwLuminanceBitCount, 1));
        </code>
                </get>
            </field>
            <field name="dwBumpBitCount" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.dwBumpBitCount, 1));
        </code>
                </get>
            </field>
            <field name="dwPrivateFormatBitCount" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.dwPrivateFormatBitCount, 1));
        </code>
                </get>
            </field>
            <field name="Anonymous2" access="public">
                <type native="_DDPIXELFORMAT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/ddraw.h:723:5)">_Anonymous2_e__Union</type>
            </field>
            <field name="dwRBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous2.dwRBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwYBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous2.dwYBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwStencilBitDepth" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous2.dwStencilBitDepth, 1));
        </code>
                </get>
            </field>
            <field name="dwLuminanceBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous2.dwLuminanceBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwBumpDuBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous2.dwBumpDuBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwOperations" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous2.dwOperations, 1));
        </code>
                </get>
            </field>
            <field name="Anonymous3" access="public">
                <type native="_DDPIXELFORMAT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/ddraw.h:732:5)">_Anonymous3_e__Union</type>
            </field>
            <field name="dwGBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous3.dwGBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwUBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous3.dwUBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwZBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous3.dwZBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwBumpDvBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous3.dwBumpDvBitMask, 1));
        </code>
                </get>
            </field>
            <field name="MultiSampleCaps" access="public">
                <type native="">ref _Anonymous3_e__Union._MultiSampleCaps_e__Struct</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous3.MultiSampleCaps, 1));
        </code>
                </get>
            </field>
            <field name="Anonymous4" access="public">
                <type native="_DDPIXELFORMAT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/ddraw.h:745:5)">_Anonymous4_e__Union</type>
            </field>
            <field name="dwBBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous4.dwBBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwVBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous4.dwVBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwStencilBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous4.dwStencilBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwBumpLuminanceBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous4.dwBumpLuminanceBitMask, 1));
        </code>
                </get>
            </field>
            <field name="Anonymous5" access="public">
                <type native="_DDPIXELFORMAT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/ddraw.h:752:5)">_Anonymous5_e__Union</type>
            </field>
            <field name="dwRGBAlphaBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous5.dwRGBAlphaBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwYUVAlphaBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous5.dwYUVAlphaBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwLuminanceAlphaBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous5.dwLuminanceAlphaBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwRGBZBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous5.dwRGBZBitMask, 1));
        </code>
                </get>
            </field>
            <field name="dwYUVZBitMask" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous5.dwYUVZBitMask, 1));
        </code>
                </get>
            </field>
            <struct name="_Anonymous1_e__Union" access="public" layout="Explicit">
                <field name="dwRGBBitCount" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwYUVBitCount" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwZBufferBitDepth" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwAlphaBitDepth" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwLuminanceBitCount" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwBumpBitCount" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwPrivateFormatBitCount" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
            </struct>
            <struct name="_Anonymous2_e__Union" access="public" layout="Explicit">
                <field name="dwRBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwYBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwStencilBitDepth" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwLuminanceBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwBumpDuBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwOperations" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
            </struct>
            <struct name="_Anonymous3_e__Union" access="public" layout="Explicit">
                <field name="dwGBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwUBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwZBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwBumpDvBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="MultiSampleCaps" access="public" offset="0">
                    <type native="struct (anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/ddraw.h:738:9)">_MultiSampleCaps_e__Struct</type>
                </field>
                <struct name="_MultiSampleCaps_e__Struct" access="public">
                    <field name="wFlipMSTypes" access="public">
                        <type native="WORD">ushort</type>
                    </field>
                    <field name="wBltMSTypes" access="public">
                        <type native="WORD">ushort</type>
                    </field>
                </struct>
            </struct>
            <struct name="_Anonymous4_e__Union" access="public" layout="Explicit">
                <field name="dwBBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwVBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwStencilBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwBumpLuminanceBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
            </struct>
            <struct name="_Anonymous5_e__Union" access="public" layout="Explicit">
                <field name="dwRGBAlphaBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwYUVAlphaBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwLuminanceAlphaBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwRGBZBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="dwYUVZBitMask" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
            </struct>
        </struct>
    </namespace>
</bindings>
