<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfobjects.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFDXGIDeviceManager" access="public" native="struct IMFDXGIDeviceManager : IUnknown" uuid="eb533d5d-2db6-40f8-97a9-494692014f07" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="CloseDeviceHandle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hDevice">
                    <type>IntPtr</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, IntPtr, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>, <param name="hDevice">hDevice</param>);
        </code>
                </body>
            </function>
            <function name="GetVideoService" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hDevice">
                    <type>IntPtr</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppService">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, IntPtr, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>, <param name="hDevice">hDevice</param>, <param name="riid">riid</param>, <param name="ppService">ppService</param>);
        </code>
                </body>
            </function>
            <function name="LockDevice" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hDevice">
                    <type>IntPtr</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppUnkDevice">
                    <type>void**</type>
                </param>
                <param name="fBlock">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, IntPtr, Guid*, void**, int, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>, <param name="hDevice">hDevice</param>, <param name="riid">riid</param>, <param name="ppUnkDevice">ppUnkDevice</param>, <param name="fBlock">fBlock</param>);
        </code>
                </body>
            </function>
            <function name="OpenDeviceHandle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="phDevice">
                    <type>IntPtr*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, IntPtr*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>, <param name="phDevice">phDevice</param>);
        </code>
                </body>
            </function>
            <function name="ResetDevice" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pUnkDevice">
                    <type>IUnknown*</type>
                </param>
                <param name="resetToken">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, IUnknown*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>, <param name="pUnkDevice">pUnkDevice</param>, <param name="resetToken">resetToken</param>);
        </code>
                </body>
            </function>
            <function name="TestDevice" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hDevice">
                    <type>IntPtr</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, IntPtr, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>, <param name="hDevice">hDevice</param>);
        </code>
                </body>
            </function>
            <function name="UnlockDevice" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hDevice">
                    <type>IntPtr</type>
                </param>
                <param name="fSaveState">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFDXGIDeviceManager*, IntPtr, int, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFDXGIDeviceManager*)Unsafe.AsPointer(ref this)</param>, <param name="hDevice">hDevice</param>, <param name="fSaveState">fSaveState</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
