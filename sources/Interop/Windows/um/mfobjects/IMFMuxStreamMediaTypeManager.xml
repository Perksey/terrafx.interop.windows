<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfobjects.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFMuxStreamMediaTypeManager" access="public" native="struct IMFMuxStreamMediaTypeManager : IUnknown" uuid="505a2c72-42f7-4690-aeab-8f513d0ffdb8" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetStreamCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwMuxStreamCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>, <param name="pdwMuxStreamCount">pdwMuxStreamCount</param>);
        </code>
                </body>
            </function>
            <function name="GetMediaType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwMuxStreamIndex">
                    <type>uint</type>
                </param>
                <param name="ppMediaType">
                    <type>IMFMediaType**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, uint, IMFMediaType**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>, <param name="dwMuxStreamIndex">dwMuxStreamIndex</param>, <param name="ppMediaType">ppMediaType</param>);
        </code>
                </body>
            </function>
            <function name="GetStreamConfigurationCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>, <param name="pdwCount">pdwCount</param>);
        </code>
                </body>
            </function>
            <function name="AddStreamConfiguration" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ullStreamMask">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>, <param name="ullStreamMask">ullStreamMask</param>);
        </code>
                </body>
            </function>
            <function name="RemoveStreamConfiguration" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ullStreamMask">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>, <param name="ullStreamMask">ullStreamMask</param>);
        </code>
                </body>
            </function>
            <function name="GetStreamConfiguration" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulIndex">
                    <type>uint</type>
                </param>
                <param name="pullStreamMask">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMuxStreamMediaTypeManager*, uint, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFMuxStreamMediaTypeManager*)Unsafe.AsPointer(ref this)</param>, <param name="ulIndex">ulIndex</param>, <param name="pullStreamMask">pullStreamMask</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
