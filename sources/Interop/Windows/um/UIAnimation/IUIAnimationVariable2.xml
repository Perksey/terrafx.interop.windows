<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/UIAnimation.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IUIAnimationVariable2" access="public" native="struct IUIAnimationVariable2 : IUnknown" uuid="4914b304-96ab-44d9-9e77-d5109b7e7466" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetDimension" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dimension">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="dimension">dimension</param>);
        </code>
                </body>
            </function>
            <function name="GetValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="GetVectorValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>double*</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="GetCurve" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
            <function name="GetVectorCurve" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="animation">
                    <type>IDCompositionAnimation**</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, IDCompositionAnimation**, uint, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="animation">animation</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="GetFinalValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="finalValue">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="finalValue">finalValue</param>);
        </code>
                </body>
            </function>
            <function name="GetFinalVectorValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="finalValue">
                    <type>double*</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="finalValue">finalValue</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="GetPreviousValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="previousValue">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="previousValue">previousValue</param>);
        </code>
                </body>
            </function>
            <function name="GetPreviousVectorValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="previousValue">
                    <type>double*</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="previousValue">previousValue</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="GetIntegerValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="GetIntegerVectorValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>int*</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, int*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="GetFinalIntegerValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="finalValue">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="finalValue">finalValue</param>);
        </code>
                </body>
            </function>
            <function name="GetFinalIntegerVectorValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="finalValue">
                    <type>int*</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, int*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="finalValue">finalValue</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="GetPreviousIntegerValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="previousValue">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="previousValue">previousValue</param>);
        </code>
                </body>
            </function>
            <function name="GetPreviousIntegerVectorValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="previousValue">
                    <type>int*</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, int*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="previousValue">previousValue</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="GetCurrentStoryboard" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="storyboard">
                    <type>IUIAnimationStoryboard2**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, IUIAnimationStoryboard2**, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="storyboard">storyboard</param>);
        </code>
                </body>
            </function>
            <function name="SetLowerBound" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bound">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="bound">bound</param>);
        </code>
                </body>
            </function>
            <function name="SetLowerBoundVector" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bound">
                    <type>double*</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="bound">bound</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="SetUpperBound" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bound">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="bound">bound</param>);
        </code>
                </body>
            </function>
            <function name="SetUpperBoundVector" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bound">
                    <type>double*</type>
                </param>
                <param name="cDimension">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, double*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="bound">bound</param>, <param name="cDimension">cDimension</param>);
        </code>
                </body>
            </function>
            <function name="SetRoundingMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="mode">
                    <type>UI_ANIMATION_ROUNDING_MODE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, UI_ANIMATION_ROUNDING_MODE, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="mode">mode</param>);
        </code>
                </body>
            </function>
            <function name="SetTag" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="@object">
                    <type>IUnknown*</type>
                </param>
                <param name="id">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, IUnknown*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="@object">@object</param>, <param name="id">id</param>);
        </code>
                </body>
            </function>
            <function name="GetTag" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="@object">
                    <type>IUnknown**</type>
                </param>
                <param name="id">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, IUnknown**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="@object">@object</param>, <param name="id">id</param>);
        </code>
                </body>
            </function>
            <function name="SetVariableChangeHandler" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="handler">
                    <type>IUIAnimationVariableChangeHandler2*</type>
                </param>
                <param name="fRegisterForNextAnimationEvent">
                    <type>int</type>
                    <init>
                        <code>0
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, IUIAnimationVariableChangeHandler2*, int, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="handler">handler</param>, <param name="fRegisterForNextAnimationEvent">fRegisterForNextAnimationEvent</param>);
        </code>
                </body>
            </function>
            <function name="SetVariableIntegerChangeHandler" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="handler">
                    <type>IUIAnimationVariableIntegerChangeHandler2*</type>
                </param>
                <param name="fRegisterForNextAnimationEvent">
                    <type>int</type>
                    <init>
                        <code>0
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, IUIAnimationVariableIntegerChangeHandler2*, int, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="handler">handler</param>, <param name="fRegisterForNextAnimationEvent">fRegisterForNextAnimationEvent</param>);
        </code>
                </body>
            </function>
            <function name="SetVariableCurveChangeHandler" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="handler">
                    <type>IUIAnimationVariableCurveChangeHandler2*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IUIAnimationVariable2*, IUIAnimationVariableCurveChangeHandler2*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IUIAnimationVariable2*)Unsafe.AsPointer(ref this)</param>, <param name="handler">handler</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
