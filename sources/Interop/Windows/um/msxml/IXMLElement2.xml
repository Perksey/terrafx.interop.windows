<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/msxml.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IXMLElement2" access="public" native="struct IXMLElement2 : IDispatch" uuid="2b8de2ff-8d2d-11d1-b2fc-00c04fd915a9" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfoCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pctinfo">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="pctinfo">pctinfo</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="iTInfo">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="ppTInfo">
                    <type>ITypeInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, uint, uint, ITypeInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="iTInfo">iTInfo</param>, <param name="lcid">lcid</param>, <param name="ppTInfo">ppTInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetIDsOfNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="rgDispId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, Guid*, ushort**, uint, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>, <param name="lcid">lcid</param>, <param name="rgDispId">rgDispId</param>);
        </code>
                </body>
            </function>
            <function name="Invoke" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dispIdMember">
                    <type>int</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="wFlags">
                    <type>ushort</type>
                </param>
                <param name="pDispParams">
                    <type>DISPPARAMS*</type>
                </param>
                <param name="pVarResult">
                    <type>VARIANT*</type>
                </param>
                <param name="pExcepInfo">
                    <type>EXCEPINFO*</type>
                </param>
                <param name="puArgErr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, int, Guid*, uint, ushort, DISPPARAMS*, VARIANT*, EXCEPINFO*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="dispIdMember">dispIdMember</param>, <param name="riid">riid</param>, <param name="lcid">lcid</param>, <param name="wFlags">wFlags</param>, <param name="pDispParams">pDispParams</param>, <param name="pVarResult">pVarResult</param>, <param name="pExcepInfo">pExcepInfo</param>, <param name="puArgErr">puArgErr</param>);
        </code>
                </body>
            </function>
            <function name="get_tagName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="p">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="p">p</param>);
        </code>
                </body>
            </function>
            <function name="put_tagName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="p">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="p">p</param>);
        </code>
                </body>
            </function>
            <function name="get_parent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppParent">
                    <type>IXMLElement2**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, IXMLElement2**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="ppParent">ppParent</param>);
        </code>
                </body>
            </function>
            <function name="setAttribute" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="strPropertyName">
                    <type>ushort*</type>
                </param>
                <param name="PropertyValue">
                    <type>VARIANT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, ushort*, VARIANT, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="strPropertyName">strPropertyName</param>, <param name="PropertyValue">PropertyValue</param>);
        </code>
                </body>
            </function>
            <function name="getAttribute" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="strPropertyName">
                    <type>ushort*</type>
                </param>
                <param name="PropertyValue">
                    <type>VARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, ushort*, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="strPropertyName">strPropertyName</param>, <param name="PropertyValue">PropertyValue</param>);
        </code>
                </body>
            </function>
            <function name="removeAttribute" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="strPropertyName">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="strPropertyName">strPropertyName</param>);
        </code>
                </body>
            </function>
            <function name="get_children" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pp">
                    <type>IXMLElementCollection**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, IXMLElementCollection**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="pp">pp</param>);
        </code>
                </body>
            </function>
            <function name="get_type" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plType">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="plType">plType</param>);
        </code>
                </body>
            </function>
            <function name="get_text" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="p">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="p">p</param>);
        </code>
                </body>
            </function>
            <function name="put_text" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="p">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="p">p</param>);
        </code>
                </body>
            </function>
            <function name="addChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pChildElem">
                    <type>IXMLElement2*</type>
                </param>
                <param name="lIndex">
                    <type>int</type>
                </param>
                <param name="lReserved">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, IXMLElement2*, int, int, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="pChildElem">pChildElem</param>, <param name="lIndex">lIndex</param>, <param name="lReserved">lReserved</param>);
        </code>
                </body>
            </function>
            <function name="removeChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pChildElem">
                    <type>IXMLElement2*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, IXMLElement2*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="pChildElem">pChildElem</param>);
        </code>
                </body>
            </function>
            <function name="get_attributes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pp">
                    <type>IXMLElementCollection**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLElement2*, IXMLElementCollection**, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IXMLElement2*)Unsafe.AsPointer(ref this)</param>, <param name="pp">pp</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
