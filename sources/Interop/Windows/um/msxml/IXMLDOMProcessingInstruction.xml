<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/msxml.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IXMLDOMProcessingInstruction" access="public" native="struct IXMLDOMProcessingInstruction : IXMLDOMNode" uuid="2933bf89-7b36-11d2-b20e-00c04f983e60" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfoCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pctinfo">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="pctinfo">pctinfo</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="iTInfo">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="ppTInfo">
                    <type>ITypeInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, uint, uint, ITypeInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="iTInfo">iTInfo</param>, <param name="lcid">lcid</param>, <param name="ppTInfo">ppTInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetIDsOfNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="rgDispId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, Guid*, ushort**, uint, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>, <param name="lcid">lcid</param>, <param name="rgDispId">rgDispId</param>);
        </code>
                </body>
            </function>
            <function name="Invoke" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dispIdMember">
                    <type>int</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="wFlags">
                    <type>ushort</type>
                </param>
                <param name="pDispParams">
                    <type>DISPPARAMS*</type>
                </param>
                <param name="pVarResult">
                    <type>VARIANT*</type>
                </param>
                <param name="pExcepInfo">
                    <type>EXCEPINFO*</type>
                </param>
                <param name="puArgErr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, int, Guid*, uint, ushort, DISPPARAMS*, VARIANT*, EXCEPINFO*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="dispIdMember">dispIdMember</param>, <param name="riid">riid</param>, <param name="lcid">lcid</param>, <param name="wFlags">wFlags</param>, <param name="pDispParams">pDispParams</param>, <param name="pVarResult">pVarResult</param>, <param name="pExcepInfo">pExcepInfo</param>, <param name="puArgErr">puArgErr</param>);
        </code>
                </body>
            </function>
            <function name="get_nodeName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="name">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="name">name</param>);
        </code>
                </body>
            </function>
            <function name="get_nodeValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>VARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="put_nodeValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>VARIANT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, VARIANT, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="get_nodeType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="type">
                    <type>DOMNodeType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, DOMNodeType*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="type">type</param>);
        </code>
                </body>
            </function>
            <function name="get_parentNode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="parent">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="parent">parent</param>);
        </code>
                </body>
            </function>
            <function name="get_childNodes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="childList">
                    <type>IXMLDOMNodeList**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNodeList**, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="childList">childList</param>);
        </code>
                </body>
            </function>
            <function name="get_firstChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="firstChild">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="firstChild">firstChild</param>);
        </code>
                </body>
            </function>
            <function name="get_lastChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lastChild">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="lastChild">lastChild</param>);
        </code>
                </body>
            </function>
            <function name="get_previousSibling" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="previousSibling">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="previousSibling">previousSibling</param>);
        </code>
                </body>
            </function>
            <function name="get_nextSibling" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nextSibling">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="nextSibling">nextSibling</param>);
        </code>
                </body>
            </function>
            <function name="get_attributes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="attributeMap">
                    <type>IXMLDOMNamedNodeMap**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNamedNodeMap**, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="attributeMap">attributeMap</param>);
        </code>
                </body>
            </function>
            <function name="insertBefore" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="newChild">
                    <type>IXMLDOMNode*</type>
                </param>
                <param name="refChild">
                    <type>VARIANT</type>
                </param>
                <param name="outNewChild">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode*, VARIANT, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="newChild">newChild</param>, <param name="refChild">refChild</param>, <param name="outNewChild">outNewChild</param>);
        </code>
                </body>
            </function>
            <function name="replaceChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="newChild">
                    <type>IXMLDOMNode*</type>
                </param>
                <param name="oldChild">
                    <type>IXMLDOMNode*</type>
                </param>
                <param name="outOldChild">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode*, IXMLDOMNode*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="newChild">newChild</param>, <param name="oldChild">oldChild</param>, <param name="outOldChild">outOldChild</param>);
        </code>
                </body>
            </function>
            <function name="removeChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="childNode">
                    <type>IXMLDOMNode*</type>
                </param>
                <param name="oldChild">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="childNode">childNode</param>, <param name="oldChild">oldChild</param>);
        </code>
                </body>
            </function>
            <function name="appendChild" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="newChild">
                    <type>IXMLDOMNode*</type>
                </param>
                <param name="outNewChild">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="newChild">newChild</param>, <param name="outNewChild">outNewChild</param>);
        </code>
                </body>
            </function>
            <function name="hasChildNodes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hasChild">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="hasChild">hasChild</param>);
        </code>
                </body>
            </function>
            <function name="get_ownerDocument" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="XMLDOMDocument">
                    <type>IXMLDOMDocument**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMDocument**, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="XMLDOMDocument">XMLDOMDocument</param>);
        </code>
                </body>
            </function>
            <function name="cloneNode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="deep">
                    <type>short</type>
                </param>
                <param name="cloneRoot">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, short, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="deep">deep</param>, <param name="cloneRoot">cloneRoot</param>);
        </code>
                </body>
            </function>
            <function name="get_nodeTypeString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nodeType">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="nodeType">nodeType</param>);
        </code>
                </body>
            </function>
            <function name="get_text" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="text">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="text">text</param>);
        </code>
                </body>
            </function>
            <function name="put_text" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="text">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="text">text</param>);
        </code>
                </body>
            </function>
            <function name="get_specified" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="isSpecified">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="isSpecified">isSpecified</param>);
        </code>
                </body>
            </function>
            <function name="get_definition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="definitionNode">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="definitionNode">definitionNode</param>);
        </code>
                </body>
            </function>
            <function name="get_nodeTypedValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="typedValue">
                    <type>VARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="typedValue">typedValue</param>);
        </code>
                </body>
            </function>
            <function name="put_nodeTypedValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="typedValue">
                    <type>VARIANT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, VARIANT, int&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="typedValue">typedValue</param>);
        </code>
                </body>
            </function>
            <function name="get_dataType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dataTypeName">
                    <type>VARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="dataTypeName">dataTypeName</param>);
        </code>
                </body>
            </function>
            <function name="put_dataType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dataTypeName">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="dataTypeName">dataTypeName</param>);
        </code>
                </body>
            </function>
            <function name="get_xml" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="xmlString">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">34</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="xmlString">xmlString</param>);
        </code>
                </body>
            </function>
            <function name="transformNode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="stylesheet">
                    <type>IXMLDOMNode*</type>
                </param>
                <param name="xmlString">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">35</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="stylesheet">stylesheet</param>, <param name="xmlString">xmlString</param>);
        </code>
                </body>
            </function>
            <function name="selectNodes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="queryString">
                    <type>ushort*</type>
                </param>
                <param name="resultList">
                    <type>IXMLDOMNodeList**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort*, IXMLDOMNodeList**, int&gt;)(lpVtbl[<vtbl explicit="False">36</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="queryString">queryString</param>, <param name="resultList">resultList</param>);
        </code>
                </body>
            </function>
            <function name="selectSingleNode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="queryString">
                    <type>ushort*</type>
                </param>
                <param name="resultNode">
                    <type>IXMLDOMNode**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort*, IXMLDOMNode**, int&gt;)(lpVtbl[<vtbl explicit="False">37</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="queryString">queryString</param>, <param name="resultNode">resultNode</param>);
        </code>
                </body>
            </function>
            <function name="get_parsed" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="isParsed">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">38</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="isParsed">isParsed</param>);
        </code>
                </body>
            </function>
            <function name="get_namespaceURI" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="namespaceURI">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">39</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="namespaceURI">namespaceURI</param>);
        </code>
                </body>
            </function>
            <function name="get_prefix" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="prefixString">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">40</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="prefixString">prefixString</param>);
        </code>
                </body>
            </function>
            <function name="get_baseName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nameString">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">41</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="nameString">nameString</param>);
        </code>
                </body>
            </function>
            <function name="transformNodeToObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="stylesheet">
                    <type>IXMLDOMNode*</type>
                </param>
                <param name="outputObject">
                    <type>VARIANT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, IXMLDOMNode*, VARIANT, int&gt;)(lpVtbl[<vtbl explicit="False">42</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="stylesheet">stylesheet</param>, <param name="outputObject">outputObject</param>);
        </code>
                </body>
            </function>
            <function name="get_target" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="name">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">43</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="name">name</param>);
        </code>
                </body>
            </function>
            <function name="get_data" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">44</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="put_data" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLDOMProcessingInstruction*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">45</vtbl>]))(<param special="thisPtr">(IXMLDOMProcessingInstruction*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
