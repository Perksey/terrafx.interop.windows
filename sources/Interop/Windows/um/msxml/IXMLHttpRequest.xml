<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/msxml.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IXMLHttpRequest" access="public" native="struct IXMLHttpRequest : IDispatch" uuid="ed8c108d-4349-11d2-91a4-00c04f7969e8" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfoCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pctinfo">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pctinfo">pctinfo</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="iTInfo">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="ppTInfo">
                    <type>ITypeInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, uint, uint, ITypeInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="iTInfo">iTInfo</param>, <param name="lcid">lcid</param>, <param name="ppTInfo">ppTInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetIDsOfNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="rgDispId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, Guid*, ushort**, uint, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>, <param name="lcid">lcid</param>, <param name="rgDispId">rgDispId</param>);
        </code>
                </body>
            </function>
            <function name="Invoke" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dispIdMember">
                    <type>int</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="wFlags">
                    <type>ushort</type>
                </param>
                <param name="pDispParams">
                    <type>DISPPARAMS*</type>
                </param>
                <param name="pVarResult">
                    <type>VARIANT*</type>
                </param>
                <param name="pExcepInfo">
                    <type>EXCEPINFO*</type>
                </param>
                <param name="puArgErr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, int, Guid*, uint, ushort, DISPPARAMS*, VARIANT*, EXCEPINFO*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="dispIdMember">dispIdMember</param>, <param name="riid">riid</param>, <param name="lcid">lcid</param>, <param name="wFlags">wFlags</param>, <param name="pDispParams">pDispParams</param>, <param name="pVarResult">pVarResult</param>, <param name="pExcepInfo">pExcepInfo</param>, <param name="puArgErr">puArgErr</param>);
        </code>
                </body>
            </function>
            <function name="open" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrMethod">
                    <type>ushort*</type>
                </param>
                <param name="bstrUrl">
                    <type>ushort*</type>
                </param>
                <param name="varAsync">
                    <type>VARIANT</type>
                </param>
                <param name="bstrUser">
                    <type>VARIANT</type>
                </param>
                <param name="bstrPassword">
                    <type>VARIANT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, ushort*, ushort*, VARIANT, VARIANT, VARIANT, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="bstrMethod">bstrMethod</param>, <param name="bstrUrl">bstrUrl</param>, <param name="varAsync">varAsync</param>, <param name="bstrUser">bstrUser</param>, <param name="bstrPassword">bstrPassword</param>);
        </code>
                </body>
            </function>
            <function name="setRequestHeader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrHeader">
                    <type>ushort*</type>
                </param>
                <param name="bstrValue">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, ushort*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="bstrHeader">bstrHeader</param>, <param name="bstrValue">bstrValue</param>);
        </code>
                </body>
            </function>
            <function name="getResponseHeader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrHeader">
                    <type>ushort*</type>
                </param>
                <param name="pbstrValue">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, ushort*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="bstrHeader">bstrHeader</param>, <param name="pbstrValue">pbstrValue</param>);
        </code>
                </body>
            </function>
            <function name="getAllResponseHeaders" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pbstrHeaders">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pbstrHeaders">pbstrHeaders</param>);
        </code>
                </body>
            </function>
            <function name="send" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="varBody">
                    <type>VARIANT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, VARIANT, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="varBody">varBody</param>);
        </code>
                </body>
            </function>
            <function name="abort" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="get_status" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plStatus">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="plStatus">plStatus</param>);
        </code>
                </body>
            </function>
            <function name="get_statusText" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pbstrStatus">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pbstrStatus">pbstrStatus</param>);
        </code>
                </body>
            </function>
            <function name="get_responseXML" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppBody">
                    <type>IDispatch**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, IDispatch**, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="ppBody">ppBody</param>);
        </code>
                </body>
            </function>
            <function name="get_responseText" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pbstrBody">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pbstrBody">pbstrBody</param>);
        </code>
                </body>
            </function>
            <function name="get_responseBody" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pvarBody">
                    <type>VARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pvarBody">pvarBody</param>);
        </code>
                </body>
            </function>
            <function name="get_responseStream" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pvarBody">
                    <type>VARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pvarBody">pvarBody</param>);
        </code>
                </body>
            </function>
            <function name="get_readyState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plState">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="plState">plState</param>);
        </code>
                </body>
            </function>
            <function name="put_onreadystatechange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pReadyStateSink">
                    <type>IDispatch*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IXMLHttpRequest*, IDispatch*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IXMLHttpRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pReadyStateSink">pReadyStateSink</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
