<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/msxml.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <enumeration name="DOMNodeType" access="public">
            <type>int</type>
            <enumerator name="NODE_INVALID" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_ELEMENT" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_INVALID + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_ATTRIBUTE" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_ELEMENT + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_TEXT" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_ATTRIBUTE + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_CDATA_SECTION" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_TEXT + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_ENTITY_REFERENCE" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_CDATA_SECTION + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_ENTITY" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_ENTITY_REFERENCE + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_PROCESSING_INSTRUCTION" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_ENTITY + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_COMMENT" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_PROCESSING_INSTRUCTION + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_DOCUMENT" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_COMMENT + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_DOCUMENT_TYPE" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_DOCUMENT + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_DOCUMENT_FRAGMENT" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_DOCUMENT_TYPE + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="NODE_NOTATION" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(NODE_DOCUMENT_FRAGMENT + 1)
        </code>
                </value>
            </enumerator>
        </enumeration>
    </namespace>
</bindings>
