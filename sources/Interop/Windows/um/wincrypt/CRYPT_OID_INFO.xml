<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wincrypt.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="CRYPT_OID_INFO" access="public" unsafe="true">
            <field name="cbSize" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="pszOID" access="public">
                <type native="LPCSTR">sbyte*</type>
            </field>
            <field name="pwszName" access="public">
                <type native="LPCWSTR">ushort*</type>
            </field>
            <field name="dwGroupId" access="public">
                <type native="DWORD">uint</type>
            </field>
            <field name="Anonymous" access="public">
                <type native="_CRYPT_OID_INFO::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/wincrypt.h:6206:5)">_Anonymous_e__Union</type>
            </field>
            <field name="dwValue" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.dwValue, 1));
        </code>
                </get>
            </field>
            <field name="Algid" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Algid, 1));
        </code>
                </get>
            </field>
            <field name="dwLength" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.dwLength, 1));
        </code>
                </get>
            </field>
            <field name="ExtraInfo" access="public">
                <type native="CRYPT_DATA_BLOB">CRYPTOAPI_BLOB</type>
            </field>
            <struct name="_Anonymous_e__Union" access="public" layout="Explicit">
                <field name="dwValue" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
                <field name="Algid" access="public" offset="0">
                    <type native="ALG_ID">uint</type>
                </field>
                <field name="dwLength" access="public" offset="0">
                    <type native="DWORD">uint</type>
                </field>
            </struct>
        </struct>
    </namespace>
</bindings>
