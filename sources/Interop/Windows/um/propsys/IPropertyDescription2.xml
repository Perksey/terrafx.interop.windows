<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/propsys.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IPropertyDescription2" access="public" native="struct IPropertyDescription2 : IPropertyDescription" uuid="57d2eded-5062-400e-b107-5dae79fe57a6" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetPropertyKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pkey">
                    <type>PROPERTYKEY*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPERTYKEY*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="pkey">pkey</param>);
        </code>
                </body>
            </function>
            <function name="GetCanonicalName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppszName">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="ppszName">ppszName</param>);
        </code>
                </body>
            </function>
            <function name="GetPropertyType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pvartype">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="pvartype">pvartype</param>);
        </code>
                </body>
            </function>
            <function name="GetDisplayName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppszName">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="ppszName">ppszName</param>);
        </code>
                </body>
            </function>
            <function name="GetEditInvitation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppszInvite">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="ppszInvite">ppszInvite</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeFlags" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="mask">
                    <type>PROPDESC_TYPE_FLAGS</type>
                </param>
                <param name="ppdtFlags">
                    <type>PROPDESC_TYPE_FLAGS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPDESC_TYPE_FLAGS, PROPDESC_TYPE_FLAGS*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="mask">mask</param>, <param name="ppdtFlags">ppdtFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetViewFlags" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppdvFlags">
                    <type>PROPDESC_VIEW_FLAGS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPDESC_VIEW_FLAGS*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="ppdvFlags">ppdvFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetDefaultColumnWidth" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcxChars">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="pcxChars">pcxChars</param>);
        </code>
                </body>
            </function>
            <function name="GetDisplayType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdisplaytype">
                    <type>PROPDESC_DISPLAYTYPE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPDESC_DISPLAYTYPE*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="pdisplaytype">pdisplaytype</param>);
        </code>
                </body>
            </function>
            <function name="GetColumnState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcsFlags">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="pcsFlags">pcsFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetGroupingRange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pgr">
                    <type>PROPDESC_GROUPING_RANGE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPDESC_GROUPING_RANGE*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="pgr">pgr</param>);
        </code>
                </body>
            </function>
            <function name="GetRelativeDescriptionType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="prdt">
                    <type>PROPDESC_RELATIVEDESCRIPTION_TYPE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPDESC_RELATIVEDESCRIPTION_TYPE*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="prdt">prdt</param>);
        </code>
                </body>
            </function>
            <function name="GetRelativeDescription" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="propvar1">
                    <type>PROPVARIANT*</type>
                </param>
                <param name="propvar2">
                    <type>PROPVARIANT*</type>
                </param>
                <param name="ppszDesc1">
                    <type>ushort**</type>
                </param>
                <param name="ppszDesc2">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPVARIANT*, PROPVARIANT*, ushort**, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="propvar1">propvar1</param>, <param name="propvar2">propvar2</param>, <param name="ppszDesc1">ppszDesc1</param>, <param name="ppszDesc2">ppszDesc2</param>);
        </code>
                </body>
            </function>
            <function name="GetSortDescription" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="psd">
                    <type>PROPDESC_SORTDESCRIPTION*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPDESC_SORTDESCRIPTION*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="psd">psd</param>);
        </code>
                </body>
            </function>
            <function name="GetSortDescriptionLabel" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fDescending">
                    <type>int</type>
                </param>
                <param name="ppszDescription">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, int, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="fDescending">fDescending</param>, <param name="ppszDescription">ppszDescription</param>);
        </code>
                </body>
            </function>
            <function name="GetAggregationType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="paggtype">
                    <type>PROPDESC_AGGREGATION_TYPE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPDESC_AGGREGATION_TYPE*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="paggtype">paggtype</param>);
        </code>
                </body>
            </function>
            <function name="GetConditionType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcontype">
                    <type>PROPDESC_CONDITION_TYPE*</type>
                </param>
                <param name="popDefault">
                    <type>CONDITION_OPERATION*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPDESC_CONDITION_TYPE*, CONDITION_OPERATION*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="pcontype">pcontype</param>, <param name="popDefault">popDefault</param>);
        </code>
                </body>
            </function>
            <function name="GetEnumTypeList" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppv">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppv">ppv</param>);
        </code>
                </body>
            </function>
            <function name="CoerceToCanonicalValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppropvar">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="ppropvar">ppropvar</param>);
        </code>
                </body>
            </function>
            <function name="FormatForDisplay" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="propvar">
                    <type>PROPVARIANT*</type>
                </param>
                <param name="pdfFlags">
                    <type>PROPDESC_FORMAT_FLAGS</type>
                </param>
                <param name="ppszDisplay">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPVARIANT*, PROPDESC_FORMAT_FLAGS, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="propvar">propvar</param>, <param name="pdfFlags">pdfFlags</param>, <param name="ppszDisplay">ppszDisplay</param>);
        </code>
                </body>
            </function>
            <function name="IsValueCanonical" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="propvar">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="propvar">propvar</param>);
        </code>
                </body>
            </function>
            <function name="GetImageReferenceForValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="propvar">
                    <type>PROPVARIANT*</type>
                </param>
                <param name="ppszImageRes">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IPropertyDescription2*, PROPVARIANT*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IPropertyDescription2*)Unsafe.AsPointer(ref this)</param>, <param name="propvar">propvar</param>, <param name="ppszImageRes">ppszImageRes</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
