<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfplay.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFPMediaItem" access="public" native="struct IMFPMediaItem : IUnknown" uuid="90eb3e6b-ecbf-45cc-b1da-c6fe3ea70d57" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetMediaPlayer" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppMediaPlayer">
                    <type>IMFPMediaPlayer**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, IMFPMediaPlayer**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="ppMediaPlayer">ppMediaPlayer</param>);
        </code>
                </body>
            </function>
            <function name="GetURL" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppwszURL">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="ppwszURL">ppwszURL</param>);
        </code>
                </body>
            </function>
            <function name="GetObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIUnknown">
                    <type>IUnknown**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, IUnknown**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="ppIUnknown">ppIUnknown</param>);
        </code>
                </body>
            </function>
            <function name="GetUserData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwUserData">
                    <type>nuint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, nuint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="pdwUserData">pdwUserData</param>);
        </code>
                </body>
            </function>
            <function name="SetUserData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwUserData">
                    <type>nuint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, nuint, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="dwUserData">dwUserData</param>);
        </code>
                </body>
            </function>
            <function name="GetStartStopPosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguidStartPositionType">
                    <type>Guid*</type>
                </param>
                <param name="pvStartValue">
                    <type>PROPVARIANT*</type>
                </param>
                <param name="pguidStopPositionType">
                    <type>Guid*</type>
                </param>
                <param name="pvStopValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, Guid*, PROPVARIANT*, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="pguidStartPositionType">pguidStartPositionType</param>, <param name="pvStartValue">pvStartValue</param>, <param name="pguidStopPositionType">pguidStopPositionType</param>, <param name="pvStopValue">pvStopValue</param>);
        </code>
                </body>
            </function>
            <function name="SetStartStopPosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguidStartPositionType">
                    <type>Guid*</type>
                </param>
                <param name="pvStartValue">
                    <type>PROPVARIANT*</type>
                </param>
                <param name="pguidStopPositionType">
                    <type>Guid*</type>
                </param>
                <param name="pvStopValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, Guid*, PROPVARIANT*, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="pguidStartPositionType">pguidStartPositionType</param>, <param name="pvStartValue">pvStartValue</param>, <param name="pguidStopPositionType">pguidStopPositionType</param>, <param name="pvStopValue">pvStopValue</param>);
        </code>
                </body>
            </function>
            <function name="HasVideo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfHasVideo">
                    <type>int*</type>
                </param>
                <param name="pfSelected">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, int*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="pfHasVideo">pfHasVideo</param>, <param name="pfSelected">pfSelected</param>);
        </code>
                </body>
            </function>
            <function name="HasAudio" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfHasAudio">
                    <type>int*</type>
                </param>
                <param name="pfSelected">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, int*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="pfHasAudio">pfHasAudio</param>, <param name="pfSelected">pfSelected</param>);
        </code>
                </body>
            </function>
            <function name="IsProtected" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfProtected">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="pfProtected">pfProtected</param>);
        </code>
                </body>
            </function>
            <function name="GetDuration" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidPositionType">
                    <type>Guid*</type>
                </param>
                <param name="pvDurationValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="guidPositionType">guidPositionType</param>, <param name="pvDurationValue">pvDurationValue</param>);
        </code>
                </body>
            </function>
            <function name="GetNumberOfStreams" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwStreamCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="pdwStreamCount">pdwStreamCount</param>);
        </code>
                </body>
            </function>
            <function name="GetStreamSelection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamIndex">
                    <type>uint</type>
                </param>
                <param name="pfEnabled">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamIndex">dwStreamIndex</param>, <param name="pfEnabled">pfEnabled</param>);
        </code>
                </body>
            </function>
            <function name="SetStreamSelection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamIndex">
                    <type>uint</type>
                </param>
                <param name="fEnabled">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, uint, int, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamIndex">dwStreamIndex</param>, <param name="fEnabled">fEnabled</param>);
        </code>
                </body>
            </function>
            <function name="GetStreamAttribute" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamIndex">
                    <type>uint</type>
                </param>
                <param name="guidMFAttribute">
                    <type>Guid*</type>
                </param>
                <param name="pvValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, uint, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamIndex">dwStreamIndex</param>, <param name="guidMFAttribute">guidMFAttribute</param>, <param name="pvValue">pvValue</param>);
        </code>
                </body>
            </function>
            <function name="GetPresentationAttribute" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidMFAttribute">
                    <type>Guid*</type>
                </param>
                <param name="pvValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="guidMFAttribute">guidMFAttribute</param>, <param name="pvValue">pvValue</param>);
        </code>
                </body>
            </function>
            <function name="GetCharacteristics" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCharacteristics">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="pCharacteristics">pCharacteristics</param>);
        </code>
                </body>
            </function>
            <function name="SetStreamSink" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamIndex">
                    <type>uint</type>
                </param>
                <param name="pMediaSink">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, uint, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamIndex">dwStreamIndex</param>, <param name="pMediaSink">pMediaSink</param>);
        </code>
                </body>
            </function>
            <function name="GetMetadata" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppMetadataStore">
                    <type>IPropertyStore**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFPMediaItem*, IPropertyStore**, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IMFPMediaItem*)Unsafe.AsPointer(ref this)</param>, <param name="ppMetadataStore">ppMetadataStore</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
