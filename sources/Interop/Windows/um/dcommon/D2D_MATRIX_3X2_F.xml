<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/dcommon.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="D2D_MATRIX_3X2_F" access="public" unsafe="true">
            <field name="Anonymous" access="public">
                <type native="D2D_MATRIX_3X2_F::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/dcommon.h:277:5)">_Anonymous_e__Union</type>
            </field>
            <field name="m11" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous1.m11, 1));
        </code>
                </get>
            </field>
            <field name="m12" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous1.m12, 1));
        </code>
                </get>
            </field>
            <field name="m21" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous1.m21, 1));
        </code>
                </get>
            </field>
            <field name="m22" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous1.m22, 1));
        </code>
                </get>
            </field>
            <field name="dx" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous1.dx, 1));
        </code>
                </get>
            </field>
            <field name="dy" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous1.dy, 1));
        </code>
                </get>
            </field>
            <field name="_11" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous2._11, 1));
        </code>
                </get>
            </field>
            <field name="_12" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous2._12, 1));
        </code>
                </get>
            </field>
            <field name="_21" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous2._21, 1));
        </code>
                </get>
            </field>
            <field name="_22" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous2._22, 1));
        </code>
                </get>
            </field>
            <field name="_31" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous2._31, 1));
        </code>
                </get>
            </field>
            <field name="_32" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous2._32, 1));
        </code>
                </get>
            </field>
            <field name="m" access="public">
                <type native="">Span&lt;float&gt;</type>
                <get inlining="aggressive">
                    <code>return MemoryMarshal.CreateSpan(ref Anonymous.m[0], 3);
        </code>
                </get>
            </field>
            <struct name="_Anonymous_e__Union" access="public" unsafe="true" layout="Explicit">
                <field name="Anonymous1" access="public" offset="0">
                    <type native="D2D_MATRIX_3X2_F::(anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/dcommon.h:279:9)">_Anonymous1_e__Struct</type>
                </field>
                <field name="Anonymous2" access="public" offset="0">
                    <type native="D2D_MATRIX_3X2_F::(anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/dcommon.h:312:9)">_Anonymous2_e__Struct</type>
                </field>
                <field name="m" access="public" offset="0">
                    <type native="FLOAT [3][2]" count="3 * 2" fixed="_m_e__FixedBuffer">float</type>
                </field>
                <struct name="_Anonymous1_e__Struct" access="public">
                    <field name="m11" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="m12" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="m21" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="m22" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="dx" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="dy" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                </struct>
                <struct name="_Anonymous2_e__Struct" access="public">
                    <field name="_11" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="_12" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="_21" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="_22" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="_31" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                    <field name="_32" access="public">
                        <type native="FLOAT">float</type>
                    </field>
                </struct>
            </struct>
        </struct>
    </namespace>
</bindings>
