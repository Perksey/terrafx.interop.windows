<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d3d11.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ID3D11Device" access="public" native="struct ID3D11Device : IUnknown" uuid="db6f6ddb-ac77-4e88-8253-819df9bbf140" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="CreateBuffer" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDesc">
                    <type>D3D11_BUFFER_DESC*</type>
                </param>
                <param name="pInitialData">
                    <type>D3D11_SUBRESOURCE_DATA*</type>
                </param>
                <param name="ppBuffer">
                    <type>ID3D11Buffer**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_BUFFER_DESC*, D3D11_SUBRESOURCE_DATA*, ID3D11Buffer**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pDesc">pDesc</param>, <param name="pInitialData">pInitialData</param>, <param name="ppBuffer">ppBuffer</param>);
        </code>
                </body>
            </function>
            <function name="CreateTexture1D" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDesc">
                    <type>D3D11_TEXTURE1D_DESC*</type>
                </param>
                <param name="pInitialData">
                    <type>D3D11_SUBRESOURCE_DATA*</type>
                </param>
                <param name="ppTexture1D">
                    <type>ID3D11Texture1D**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_TEXTURE1D_DESC*, D3D11_SUBRESOURCE_DATA*, ID3D11Texture1D**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pDesc">pDesc</param>, <param name="pInitialData">pInitialData</param>, <param name="ppTexture1D">ppTexture1D</param>);
        </code>
                </body>
            </function>
            <function name="CreateTexture2D" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDesc">
                    <type>D3D11_TEXTURE2D_DESC*</type>
                </param>
                <param name="pInitialData">
                    <type>D3D11_SUBRESOURCE_DATA*</type>
                </param>
                <param name="ppTexture2D">
                    <type>ID3D11Texture2D**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_TEXTURE2D_DESC*, D3D11_SUBRESOURCE_DATA*, ID3D11Texture2D**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pDesc">pDesc</param>, <param name="pInitialData">pInitialData</param>, <param name="ppTexture2D">ppTexture2D</param>);
        </code>
                </body>
            </function>
            <function name="CreateTexture3D" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDesc">
                    <type>D3D11_TEXTURE3D_DESC*</type>
                </param>
                <param name="pInitialData">
                    <type>D3D11_SUBRESOURCE_DATA*</type>
                </param>
                <param name="ppTexture3D">
                    <type>ID3D11Texture3D**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_TEXTURE3D_DESC*, D3D11_SUBRESOURCE_DATA*, ID3D11Texture3D**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pDesc">pDesc</param>, <param name="pInitialData">pInitialData</param>, <param name="ppTexture3D">ppTexture3D</param>);
        </code>
                </body>
            </function>
            <function name="CreateShaderResourceView" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResource">
                    <type>ID3D11Resource*</type>
                </param>
                <param name="pDesc">
                    <type>D3D11_SHADER_RESOURCE_VIEW_DESC*</type>
                </param>
                <param name="ppSRView">
                    <type>ID3D11ShaderResourceView**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, ID3D11Resource*, D3D11_SHADER_RESOURCE_VIEW_DESC*, ID3D11ShaderResourceView**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pResource">pResource</param>, <param name="pDesc">pDesc</param>, <param name="ppSRView">ppSRView</param>);
        </code>
                </body>
            </function>
            <function name="CreateUnorderedAccessView" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResource">
                    <type>ID3D11Resource*</type>
                </param>
                <param name="pDesc">
                    <type>D3D11_UNORDERED_ACCESS_VIEW_DESC*</type>
                </param>
                <param name="ppUAView">
                    <type>ID3D11UnorderedAccessView**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, ID3D11Resource*, D3D11_UNORDERED_ACCESS_VIEW_DESC*, ID3D11UnorderedAccessView**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pResource">pResource</param>, <param name="pDesc">pDesc</param>, <param name="ppUAView">ppUAView</param>);
        </code>
                </body>
            </function>
            <function name="CreateRenderTargetView" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResource">
                    <type>ID3D11Resource*</type>
                </param>
                <param name="pDesc">
                    <type>D3D11_RENDER_TARGET_VIEW_DESC*</type>
                </param>
                <param name="ppRTView">
                    <type>ID3D11RenderTargetView**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, ID3D11Resource*, D3D11_RENDER_TARGET_VIEW_DESC*, ID3D11RenderTargetView**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pResource">pResource</param>, <param name="pDesc">pDesc</param>, <param name="ppRTView">ppRTView</param>);
        </code>
                </body>
            </function>
            <function name="CreateDepthStencilView" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResource">
                    <type>ID3D11Resource*</type>
                </param>
                <param name="pDesc">
                    <type>D3D11_DEPTH_STENCIL_VIEW_DESC*</type>
                </param>
                <param name="ppDepthStencilView">
                    <type>ID3D11DepthStencilView**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, ID3D11Resource*, D3D11_DEPTH_STENCIL_VIEW_DESC*, ID3D11DepthStencilView**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pResource">pResource</param>, <param name="pDesc">pDesc</param>, <param name="ppDepthStencilView">ppDepthStencilView</param>);
        </code>
                </body>
            </function>
            <function name="CreateInputLayout" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pInputElementDescs">
                    <type>D3D11_INPUT_ELEMENT_DESC*</type>
                </param>
                <param name="NumElements">
                    <type>uint</type>
                </param>
                <param name="pShaderBytecodeWithInputSignature">
                    <type>void*</type>
                </param>
                <param name="BytecodeLength">
                    <type>nuint</type>
                </param>
                <param name="ppInputLayout">
                    <type>ID3D11InputLayout**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_INPUT_ELEMENT_DESC*, uint, void*, nuint, ID3D11InputLayout**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pInputElementDescs">pInputElementDescs</param>, <param name="NumElements">NumElements</param>, <param name="pShaderBytecodeWithInputSignature">pShaderBytecodeWithInputSignature</param>, <param name="BytecodeLength">BytecodeLength</param>, <param name="ppInputLayout">ppInputLayout</param>);
        </code>
                </body>
            </function>
            <function name="CreateVertexShader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pShaderBytecode">
                    <type>void*</type>
                </param>
                <param name="BytecodeLength">
                    <type>nuint</type>
                </param>
                <param name="pClassLinkage">
                    <type>ID3D11ClassLinkage*</type>
                </param>
                <param name="ppVertexShader">
                    <type>ID3D11VertexShader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, void*, nuint, ID3D11ClassLinkage*, ID3D11VertexShader**, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pShaderBytecode">pShaderBytecode</param>, <param name="BytecodeLength">BytecodeLength</param>, <param name="pClassLinkage">pClassLinkage</param>, <param name="ppVertexShader">ppVertexShader</param>);
        </code>
                </body>
            </function>
            <function name="CreateGeometryShader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pShaderBytecode">
                    <type>void*</type>
                </param>
                <param name="BytecodeLength">
                    <type>nuint</type>
                </param>
                <param name="pClassLinkage">
                    <type>ID3D11ClassLinkage*</type>
                </param>
                <param name="ppGeometryShader">
                    <type>ID3D11GeometryShader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, void*, nuint, ID3D11ClassLinkage*, ID3D11GeometryShader**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pShaderBytecode">pShaderBytecode</param>, <param name="BytecodeLength">BytecodeLength</param>, <param name="pClassLinkage">pClassLinkage</param>, <param name="ppGeometryShader">ppGeometryShader</param>);
        </code>
                </body>
            </function>
            <function name="CreateGeometryShaderWithStreamOutput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pShaderBytecode">
                    <type>void*</type>
                </param>
                <param name="BytecodeLength">
                    <type>nuint</type>
                </param>
                <param name="pSODeclaration">
                    <type>D3D11_SO_DECLARATION_ENTRY*</type>
                </param>
                <param name="NumEntries">
                    <type>uint</type>
                </param>
                <param name="pBufferStrides">
                    <type>uint*</type>
                </param>
                <param name="NumStrides">
                    <type>uint</type>
                </param>
                <param name="RasterizedStream">
                    <type>uint</type>
                </param>
                <param name="pClassLinkage">
                    <type>ID3D11ClassLinkage*</type>
                </param>
                <param name="ppGeometryShader">
                    <type>ID3D11GeometryShader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, void*, nuint, D3D11_SO_DECLARATION_ENTRY*, uint, uint*, uint, uint, ID3D11ClassLinkage*, ID3D11GeometryShader**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pShaderBytecode">pShaderBytecode</param>, <param name="BytecodeLength">BytecodeLength</param>, <param name="pSODeclaration">pSODeclaration</param>, <param name="NumEntries">NumEntries</param>, <param name="pBufferStrides">pBufferStrides</param>, <param name="NumStrides">NumStrides</param>, <param name="RasterizedStream">RasterizedStream</param>, <param name="pClassLinkage">pClassLinkage</param>, <param name="ppGeometryShader">ppGeometryShader</param>);
        </code>
                </body>
            </function>
            <function name="CreatePixelShader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pShaderBytecode">
                    <type>void*</type>
                </param>
                <param name="BytecodeLength">
                    <type>nuint</type>
                </param>
                <param name="pClassLinkage">
                    <type>ID3D11ClassLinkage*</type>
                </param>
                <param name="ppPixelShader">
                    <type>ID3D11PixelShader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, void*, nuint, ID3D11ClassLinkage*, ID3D11PixelShader**, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pShaderBytecode">pShaderBytecode</param>, <param name="BytecodeLength">BytecodeLength</param>, <param name="pClassLinkage">pClassLinkage</param>, <param name="ppPixelShader">ppPixelShader</param>);
        </code>
                </body>
            </function>
            <function name="CreateHullShader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pShaderBytecode">
                    <type>void*</type>
                </param>
                <param name="BytecodeLength">
                    <type>nuint</type>
                </param>
                <param name="pClassLinkage">
                    <type>ID3D11ClassLinkage*</type>
                </param>
                <param name="ppHullShader">
                    <type>ID3D11HullShader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, void*, nuint, ID3D11ClassLinkage*, ID3D11HullShader**, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pShaderBytecode">pShaderBytecode</param>, <param name="BytecodeLength">BytecodeLength</param>, <param name="pClassLinkage">pClassLinkage</param>, <param name="ppHullShader">ppHullShader</param>);
        </code>
                </body>
            </function>
            <function name="CreateDomainShader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pShaderBytecode">
                    <type>void*</type>
                </param>
                <param name="BytecodeLength">
                    <type>nuint</type>
                </param>
                <param name="pClassLinkage">
                    <type>ID3D11ClassLinkage*</type>
                </param>
                <param name="ppDomainShader">
                    <type>ID3D11DomainShader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, void*, nuint, ID3D11ClassLinkage*, ID3D11DomainShader**, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pShaderBytecode">pShaderBytecode</param>, <param name="BytecodeLength">BytecodeLength</param>, <param name="pClassLinkage">pClassLinkage</param>, <param name="ppDomainShader">ppDomainShader</param>);
        </code>
                </body>
            </function>
            <function name="CreateComputeShader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pShaderBytecode">
                    <type>void*</type>
                </param>
                <param name="BytecodeLength">
                    <type>nuint</type>
                </param>
                <param name="pClassLinkage">
                    <type>ID3D11ClassLinkage*</type>
                </param>
                <param name="ppComputeShader">
                    <type>ID3D11ComputeShader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, void*, nuint, ID3D11ClassLinkage*, ID3D11ComputeShader**, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pShaderBytecode">pShaderBytecode</param>, <param name="BytecodeLength">BytecodeLength</param>, <param name="pClassLinkage">pClassLinkage</param>, <param name="ppComputeShader">ppComputeShader</param>);
        </code>
                </body>
            </function>
            <function name="CreateClassLinkage" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppLinkage">
                    <type>ID3D11ClassLinkage**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, ID3D11ClassLinkage**, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="ppLinkage">ppLinkage</param>);
        </code>
                </body>
            </function>
            <function name="CreateBlendState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pBlendStateDesc">
                    <type>D3D11_BLEND_DESC*</type>
                </param>
                <param name="ppBlendState">
                    <type>ID3D11BlendState**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_BLEND_DESC*, ID3D11BlendState**, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pBlendStateDesc">pBlendStateDesc</param>, <param name="ppBlendState">ppBlendState</param>);
        </code>
                </body>
            </function>
            <function name="CreateDepthStencilState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDepthStencilDesc">
                    <type>D3D11_DEPTH_STENCIL_DESC*</type>
                </param>
                <param name="ppDepthStencilState">
                    <type>ID3D11DepthStencilState**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_DEPTH_STENCIL_DESC*, ID3D11DepthStencilState**, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pDepthStencilDesc">pDepthStencilDesc</param>, <param name="ppDepthStencilState">ppDepthStencilState</param>);
        </code>
                </body>
            </function>
            <function name="CreateRasterizerState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRasterizerDesc">
                    <type>D3D11_RASTERIZER_DESC*</type>
                </param>
                <param name="ppRasterizerState">
                    <type>ID3D11RasterizerState**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_RASTERIZER_DESC*, ID3D11RasterizerState**, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pRasterizerDesc">pRasterizerDesc</param>, <param name="ppRasterizerState">ppRasterizerState</param>);
        </code>
                </body>
            </function>
            <function name="CreateSamplerState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSamplerDesc">
                    <type>D3D11_SAMPLER_DESC*</type>
                </param>
                <param name="ppSamplerState">
                    <type>ID3D11SamplerState**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_SAMPLER_DESC*, ID3D11SamplerState**, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pSamplerDesc">pSamplerDesc</param>, <param name="ppSamplerState">ppSamplerState</param>);
        </code>
                </body>
            </function>
            <function name="CreateQuery" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pQueryDesc">
                    <type>D3D11_QUERY_DESC*</type>
                </param>
                <param name="ppQuery">
                    <type>ID3D11Query**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_QUERY_DESC*, ID3D11Query**, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pQueryDesc">pQueryDesc</param>, <param name="ppQuery">ppQuery</param>);
        </code>
                </body>
            </function>
            <function name="CreatePredicate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pPredicateDesc">
                    <type>D3D11_QUERY_DESC*</type>
                </param>
                <param name="ppPredicate">
                    <type>ID3D11Predicate**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_QUERY_DESC*, ID3D11Predicate**, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pPredicateDesc">pPredicateDesc</param>, <param name="ppPredicate">ppPredicate</param>);
        </code>
                </body>
            </function>
            <function name="CreateCounter" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCounterDesc">
                    <type>D3D11_COUNTER_DESC*</type>
                </param>
                <param name="ppCounter">
                    <type>ID3D11Counter**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_COUNTER_DESC*, ID3D11Counter**, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pCounterDesc">pCounterDesc</param>, <param name="ppCounter">ppCounter</param>);
        </code>
                </body>
            </function>
            <function name="CreateDeferredContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ContextFlags">
                    <type>uint</type>
                </param>
                <param name="ppDeferredContext">
                    <type>ID3D11DeviceContext**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, uint, ID3D11DeviceContext**, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="ContextFlags">ContextFlags</param>, <param name="ppDeferredContext">ppDeferredContext</param>);
        </code>
                </body>
            </function>
            <function name="OpenSharedResource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hResource">
                    <type>IntPtr</type>
                </param>
                <param name="ReturnedInterface">
                    <type>Guid*</type>
                </param>
                <param name="ppResource">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, IntPtr, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="hResource">hResource</param>, <param name="ReturnedInterface">ReturnedInterface</param>, <param name="ppResource">ppResource</param>);
        </code>
                </body>
            </function>
            <function name="CheckFormatSupport" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Format">
                    <type>DXGI_FORMAT</type>
                </param>
                <param name="pFormatSupport">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, DXGI_FORMAT, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="Format">Format</param>, <param name="pFormatSupport">pFormatSupport</param>);
        </code>
                </body>
            </function>
            <function name="CheckMultisampleQualityLevels" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Format">
                    <type>DXGI_FORMAT</type>
                </param>
                <param name="SampleCount">
                    <type>uint</type>
                </param>
                <param name="pNumQualityLevels">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, DXGI_FORMAT, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="Format">Format</param>, <param name="SampleCount">SampleCount</param>, <param name="pNumQualityLevels">pNumQualityLevels</param>);
        </code>
                </body>
            </function>
            <function name="CheckCounterInfo" access="public" unsafe="true">
                <type>void</type>
                <param name="pCounterInfo">
                    <type>D3D11_COUNTER_INFO*</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D11Device*, D3D11_COUNTER_INFO*, void&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pCounterInfo">pCounterInfo</param>);
        </code>
                </body>
            </function>
            <function name="CheckCounter" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDesc">
                    <type>D3D11_COUNTER_DESC*</type>
                </param>
                <param name="pType">
                    <type>D3D11_COUNTER_TYPE*</type>
                </param>
                <param name="pActiveCounters">
                    <type>uint*</type>
                </param>
                <param name="szName">
                    <type>sbyte*</type>
                </param>
                <param name="pNameLength">
                    <type>uint*</type>
                </param>
                <param name="szUnits">
                    <type>sbyte*</type>
                </param>
                <param name="pUnitsLength">
                    <type>uint*</type>
                </param>
                <param name="szDescription">
                    <type>sbyte*</type>
                </param>
                <param name="pDescriptionLength">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_COUNTER_DESC*, D3D11_COUNTER_TYPE*, uint*, sbyte*, uint*, sbyte*, uint*, sbyte*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="pDesc">pDesc</param>, <param name="pType">pType</param>, <param name="pActiveCounters">pActiveCounters</param>, <param name="szName">szName</param>, <param name="pNameLength">pNameLength</param>, <param name="szUnits">szUnits</param>, <param name="pUnitsLength">pUnitsLength</param>, <param name="szDescription">szDescription</param>, <param name="pDescriptionLength">pDescriptionLength</param>);
        </code>
                </body>
            </function>
            <function name="CheckFeatureSupport" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Feature">
                    <type>D3D11_FEATURE</type>
                </param>
                <param name="pFeatureSupportData">
                    <type>void*</type>
                </param>
                <param name="FeatureSupportDataSize">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D11_FEATURE, void*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="Feature">Feature</param>, <param name="pFeatureSupportData">pFeatureSupportData</param>, <param name="FeatureSupportDataSize">FeatureSupportDataSize</param>);
        </code>
                </body>
            </function>
            <function name="GetPrivateData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guid">
                    <type>Guid*</type>
                </param>
                <param name="pDataSize">
                    <type>uint*</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, Guid*, uint*, void*, int&gt;)(lpVtbl[<vtbl explicit="False">34</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="guid">guid</param>, <param name="pDataSize">pDataSize</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
            <function name="SetPrivateData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guid">
                    <type>Guid*</type>
                </param>
                <param name="DataSize">
                    <type>uint</type>
                </param>
                <param name="pData">
                    <type>void*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, Guid*, uint, void*, int&gt;)(lpVtbl[<vtbl explicit="False">35</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="guid">guid</param>, <param name="DataSize">DataSize</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
            <function name="SetPrivateDataInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guid">
                    <type>Guid*</type>
                </param>
                <param name="pData">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, Guid*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">36</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="guid">guid</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
            <function name="GetFeatureLevel" access="public" unsafe="true">
                <type>D3D_FEATURE_LEVEL</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, D3D_FEATURE_LEVEL&gt;)(lpVtbl[<vtbl explicit="False">37</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetCreationFlags" access="public" unsafe="true">
                <type native="UINT">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, uint&gt;)(lpVtbl[<vtbl explicit="False">38</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetDeviceRemovedReason" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, int&gt;)(lpVtbl[<vtbl explicit="False">39</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetImmediateContext" access="public" unsafe="true">
                <type>void</type>
                <param name="ppImmediateContext">
                    <type>ID3D11DeviceContext**</type>
                </param>
                <body>
                    <code>((delegate* unmanaged&lt;ID3D11Device*, ID3D11DeviceContext**, void&gt;)(lpVtbl[<vtbl explicit="False">40</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="ppImmediateContext">ppImmediateContext</param>);
        </code>
                </body>
            </function>
            <function name="SetExceptionMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="RaiseFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">41</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>, <param name="RaiseFlags">RaiseFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetExceptionMode" access="public" unsafe="true">
                <type native="UINT">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D11Device*, uint&gt;)(lpVtbl[<vtbl explicit="False">42</vtbl>]))(<param special="thisPtr">(ID3D11Device*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
