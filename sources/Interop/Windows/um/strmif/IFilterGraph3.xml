<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IFilterGraph3" access="public" native="struct IFilterGraph3 : IFilterGraph2" uuid="aaf38154-b80b-422f-91e6-b66467509a07" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="AddFilter" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFilter">
                    <type>IBaseFilter*</type>
                </param>
                <param name="pName">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IBaseFilter*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="pFilter">pFilter</param>, <param name="pName">pName</param>);
        </code>
                </body>
            </function>
            <function name="RemoveFilter" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFilter">
                    <type>IBaseFilter*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IBaseFilter*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="pFilter">pFilter</param>);
        </code>
                </body>
            </function>
            <function name="EnumFilters" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppEnum">
                    <type>IEnumFilters**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IEnumFilters**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="ppEnum">ppEnum</param>);
        </code>
                </body>
            </function>
            <function name="FindFilterByName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pName">
                    <type>ushort*</type>
                </param>
                <param name="ppFilter">
                    <type>IBaseFilter**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, ushort*, IBaseFilter**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="pName">pName</param>, <param name="ppFilter">ppFilter</param>);
        </code>
                </body>
            </function>
            <function name="ConnectDirect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppinOut">
                    <type>IPin*</type>
                </param>
                <param name="ppinIn">
                    <type>IPin*</type>
                </param>
                <param name="pmt">
                    <type>AM_MEDIA_TYPE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IPin*, IPin*, AM_MEDIA_TYPE*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="ppinOut">ppinOut</param>, <param name="ppinIn">ppinIn</param>, <param name="pmt">pmt</param>);
        </code>
                </body>
            </function>
            <function name="Reconnect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppin">
                    <type>IPin*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IPin*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="ppin">ppin</param>);
        </code>
                </body>
            </function>
            <function name="Disconnect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppin">
                    <type>IPin*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IPin*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="ppin">ppin</param>);
        </code>
                </body>
            </function>
            <function name="SetDefaultSyncSource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Connect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppinOut">
                    <type>IPin*</type>
                </param>
                <param name="ppinIn">
                    <type>IPin*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IPin*, IPin*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="ppinOut">ppinOut</param>, <param name="ppinIn">ppinIn</param>);
        </code>
                </body>
            </function>
            <function name="Render" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppinOut">
                    <type>IPin*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IPin*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="ppinOut">ppinOut</param>);
        </code>
                </body>
            </function>
            <function name="RenderFile" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lpcwstrFile">
                    <type>ushort*</type>
                </param>
                <param name="lpcwstrPlayList">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, ushort*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="lpcwstrFile">lpcwstrFile</param>, <param name="lpcwstrPlayList">lpcwstrPlayList</param>);
        </code>
                </body>
            </function>
            <function name="AddSourceFilter" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lpcwstrFileName">
                    <type>ushort*</type>
                </param>
                <param name="lpcwstrFilterName">
                    <type>ushort*</type>
                </param>
                <param name="ppFilter">
                    <type>IBaseFilter**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, ushort*, ushort*, IBaseFilter**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="lpcwstrFileName">lpcwstrFileName</param>, <param name="lpcwstrFilterName">lpcwstrFilterName</param>, <param name="ppFilter">ppFilter</param>);
        </code>
                </body>
            </function>
            <function name="SetLogFile" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hFile">
                    <type>nuint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, nuint, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="hFile">hFile</param>);
        </code>
                </body>
            </function>
            <function name="Abort" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="ShouldOperationContinue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="AddSourceFilterForMoniker" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pMoniker">
                    <type>IMoniker*</type>
                </param>
                <param name="pCtx">
                    <type>IBindCtx*</type>
                </param>
                <param name="lpcwstrFilterName">
                    <type>ushort*</type>
                </param>
                <param name="ppFilter">
                    <type>IBaseFilter**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IMoniker*, IBindCtx*, ushort*, IBaseFilter**, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="pMoniker">pMoniker</param>, <param name="pCtx">pCtx</param>, <param name="lpcwstrFilterName">lpcwstrFilterName</param>, <param name="ppFilter">ppFilter</param>);
        </code>
                </body>
            </function>
            <function name="ReconnectEx" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppin">
                    <type>IPin*</type>
                </param>
                <param name="pmt">
                    <type>AM_MEDIA_TYPE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IPin*, AM_MEDIA_TYPE*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="ppin">ppin</param>, <param name="pmt">pmt</param>);
        </code>
                </body>
            </function>
            <function name="RenderEx" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pPinOut">
                    <type>IPin*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="pvContext">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IPin*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="pPinOut">pPinOut</param>, <param name="dwFlags">dwFlags</param>, <param name="pvContext">pvContext</param>);
        </code>
                </body>
            </function>
            <function name="SetSyncSourceEx" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pClockForMostOfFilterGraph">
                    <type>IReferenceClock*</type>
                </param>
                <param name="pClockForFilter">
                    <type>IReferenceClock*</type>
                </param>
                <param name="pFilter">
                    <type>IBaseFilter*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IFilterGraph3*, IReferenceClock*, IReferenceClock*, IBaseFilter*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IFilterGraph3*)Unsafe.AsPointer(ref this)</param>, <param name="pClockForMostOfFilterGraph">pClockForMostOfFilterGraph</param>, <param name="pClockForFilter">pClockForFilter</param>, <param name="pFilter">pFilter</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
