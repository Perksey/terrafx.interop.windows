<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IAMTVTuner" access="public" native="struct IAMTVTuner : IAMTuner" uuid="211a8766-03ac-11d1-8d13-00aa00bd8339" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="put_Channel" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lChannel">
                    <type>int</type>
                </param>
                <param name="lVideoSubChannel">
                    <type>int</type>
                </param>
                <param name="lAudioSubChannel">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int, int, int, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lChannel">lChannel</param>, <param name="lVideoSubChannel">lVideoSubChannel</param>, <param name="lAudioSubChannel">lAudioSubChannel</param>);
        </code>
                </body>
            </function>
            <function name="get_Channel" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plChannel">
                    <type>int*</type>
                </param>
                <param name="plVideoSubChannel">
                    <type>int*</type>
                </param>
                <param name="plAudioSubChannel">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plChannel">plChannel</param>, <param name="plVideoSubChannel">plVideoSubChannel</param>, <param name="plAudioSubChannel">plAudioSubChannel</param>);
        </code>
                </body>
            </function>
            <function name="ChannelMinMax" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lChannelMin">
                    <type>int*</type>
                </param>
                <param name="lChannelMax">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lChannelMin">lChannelMin</param>, <param name="lChannelMax">lChannelMax</param>);
        </code>
                </body>
            </function>
            <function name="put_CountryCode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lCountryCode">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lCountryCode">lCountryCode</param>);
        </code>
                </body>
            </function>
            <function name="get_CountryCode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plCountryCode">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plCountryCode">plCountryCode</param>);
        </code>
                </body>
            </function>
            <function name="put_TuningSpace" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lTuningSpace">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lTuningSpace">lTuningSpace</param>);
        </code>
                </body>
            </function>
            <function name="get_TuningSpace" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plTuningSpace">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plTuningSpace">plTuningSpace</param>);
        </code>
                </body>
            </function>
            <function name="Logon" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hCurrentUser">
                    <type>IntPtr</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, IntPtr, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="hCurrentUser">hCurrentUser</param>);
        </code>
                </body>
            </function>
            <function name="Logout" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SignalPresent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plSignalStrength">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plSignalStrength">plSignalStrength</param>);
        </code>
                </body>
            </function>
            <function name="put_Mode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lMode">
                    <type>AMTunerModeType</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, AMTunerModeType, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lMode">lMode</param>);
        </code>
                </body>
            </function>
            <function name="get_Mode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plMode">
                    <type>AMTunerModeType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, AMTunerModeType*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plMode">plMode</param>);
        </code>
                </body>
            </function>
            <function name="GetAvailableModes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plModes">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plModes">plModes</param>);
        </code>
                </body>
            </function>
            <function name="RegisterNotificationCallBack" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pNotify">
                    <type>IAMTunerNotification*</type>
                </param>
                <param name="lEvents">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, IAMTunerNotification*, int, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="pNotify">pNotify</param>, <param name="lEvents">lEvents</param>);
        </code>
                </body>
            </function>
            <function name="UnRegisterNotificationCallBack" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pNotify">
                    <type>IAMTunerNotification*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, IAMTunerNotification*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="pNotify">pNotify</param>);
        </code>
                </body>
            </function>
            <function name="get_AvailableTVFormats" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lAnalogVideoStandard">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lAnalogVideoStandard">lAnalogVideoStandard</param>);
        </code>
                </body>
            </function>
            <function name="get_TVFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plAnalogVideoStandard">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plAnalogVideoStandard">plAnalogVideoStandard</param>);
        </code>
                </body>
            </function>
            <function name="AutoTune" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lChannel">
                    <type>int</type>
                </param>
                <param name="plFoundSignal">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int, int*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lChannel">lChannel</param>, <param name="plFoundSignal">plFoundSignal</param>);
        </code>
                </body>
            </function>
            <function name="StoreAutoTune" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="get_NumInputConnections" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plNumInputConnections">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plNumInputConnections">plNumInputConnections</param>);
        </code>
                </body>
            </function>
            <function name="put_InputType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lIndex">
                    <type>int</type>
                </param>
                <param name="InputType">
                    <type>TunerInputType</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int, TunerInputType, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lIndex">lIndex</param>, <param name="InputType">InputType</param>);
        </code>
                </body>
            </function>
            <function name="get_InputType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lIndex">
                    <type>int</type>
                </param>
                <param name="pInputType">
                    <type>TunerInputType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int, TunerInputType*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lIndex">lIndex</param>, <param name="pInputType">pInputType</param>);
        </code>
                </body>
            </function>
            <function name="put_ConnectInput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lIndex">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lIndex">lIndex</param>);
        </code>
                </body>
            </function>
            <function name="get_ConnectInput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="plIndex">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="plIndex">plIndex</param>);
        </code>
                </body>
            </function>
            <function name="get_VideoFrequency" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lFreq">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lFreq">lFreq</param>);
        </code>
                </body>
            </function>
            <function name="get_AudioFrequency" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lFreq">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMTVTuner*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IAMTVTuner*)Unsafe.AsPointer(ref this)</param>, <param name="lFreq">lFreq</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
