<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMediaSeeking" access="public" native="struct IMediaSeeking : IUnknown" uuid="36b73880-c2c8-11cf-8b46-00805f6cef60" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetCapabilities" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCapabilities">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pCapabilities">pCapabilities</param>);
        </code>
                </body>
            </function>
            <function name="CheckCapabilities" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCapabilities">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pCapabilities">pCapabilities</param>);
        </code>
                </body>
            </function>
            <function name="IsFormatSupported" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pFormat">pFormat</param>);
        </code>
                </body>
            </function>
            <function name="QueryPreferredFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pFormat">pFormat</param>);
        </code>
                </body>
            </function>
            <function name="GetTimeFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pFormat">pFormat</param>);
        </code>
                </body>
            </function>
            <function name="IsUsingTimeFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pFormat">pFormat</param>);
        </code>
                </body>
            </function>
            <function name="SetTimeFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pFormat">pFormat</param>);
        </code>
                </body>
            </function>
            <function name="GetDuration" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDuration">
                    <type>long*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, long*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pDuration">pDuration</param>);
        </code>
                </body>
            </function>
            <function name="GetStopPosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pStop">
                    <type>long*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, long*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pStop">pStop</param>);
        </code>
                </body>
            </function>
            <function name="GetCurrentPosition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCurrent">
                    <type>long*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, long*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pCurrent">pCurrent</param>);
        </code>
                </body>
            </function>
            <function name="ConvertTimeFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pTarget">
                    <type>long*</type>
                </param>
                <param name="pTargetFormat">
                    <type>Guid*</type>
                </param>
                <param name="Source">
                    <type>long</type>
                </param>
                <param name="pSourceFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, long*, Guid*, long, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pTarget">pTarget</param>, <param name="pTargetFormat">pTargetFormat</param>, <param name="Source">Source</param>, <param name="pSourceFormat">pSourceFormat</param>);
        </code>
                </body>
            </function>
            <function name="SetPositions" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCurrent">
                    <type>long*</type>
                </param>
                <param name="dwCurrentFlags">
                    <type>uint</type>
                </param>
                <param name="pStop">
                    <type>long*</type>
                </param>
                <param name="dwStopFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, long*, uint, long*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pCurrent">pCurrent</param>, <param name="dwCurrentFlags">dwCurrentFlags</param>, <param name="pStop">pStop</param>, <param name="dwStopFlags">dwStopFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetPositions" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCurrent">
                    <type>long*</type>
                </param>
                <param name="pStop">
                    <type>long*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, long*, long*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pCurrent">pCurrent</param>, <param name="pStop">pStop</param>);
        </code>
                </body>
            </function>
            <function name="GetAvailable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pEarliest">
                    <type>long*</type>
                </param>
                <param name="pLatest">
                    <type>long*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, long*, long*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pEarliest">pEarliest</param>, <param name="pLatest">pLatest</param>);
        </code>
                </body>
            </function>
            <function name="SetRate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dRate">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, double, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="dRate">dRate</param>);
        </code>
                </body>
            </function>
            <function name="GetRate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdRate">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pdRate">pdRate</param>);
        </code>
                </body>
            </function>
            <function name="GetPreroll" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pllPreroll">
                    <type>long*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMediaSeeking*, long*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IMediaSeeking*)Unsafe.AsPointer(ref this)</param>, <param name="pllPreroll">pllPreroll</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
