<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDvdControl" access="public" native="struct IDvdControl : IUnknown" uuid="a70efe61-e2a3-11d0-a9be-00aa0061be93" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="TitlePlay" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulTitle">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulTitle">ulTitle</param>);
        </code>
                </body>
            </function>
            <function name="ChapterPlay" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulTitle">
                    <type>uint</type>
                </param>
                <param name="ulChapter">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulTitle">ulTitle</param>, <param name="ulChapter">ulChapter</param>);
        </code>
                </body>
            </function>
            <function name="TimePlay" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulTitle">
                    <type>uint</type>
                </param>
                <param name="bcdTime">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulTitle">ulTitle</param>, <param name="bcdTime">bcdTime</param>);
        </code>
                </body>
            </function>
            <function name="StopForResume" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GoUp" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="TimeSearch" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bcdTime">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="bcdTime">bcdTime</param>);
        </code>
                </body>
            </function>
            <function name="ChapterSearch" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulChapter">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulChapter">ulChapter</param>);
        </code>
                </body>
            </function>
            <function name="PrevPGSearch" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="TopPGSearch" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="NextPGSearch" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="ForwardScan" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwSpeed">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, double, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwSpeed">dwSpeed</param>);
        </code>
                </body>
            </function>
            <function name="BackwardScan" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwSpeed">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, double, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwSpeed">dwSpeed</param>);
        </code>
                </body>
            </function>
            <function name="MenuCall" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="MenuID">
                    <type>DVD_MENU_ID</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, DVD_MENU_ID, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="MenuID">MenuID</param>);
        </code>
                </body>
            </function>
            <function name="Resume" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="UpperButtonSelect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="LowerButtonSelect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="LeftButtonSelect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="RightButtonSelect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="ButtonActivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="ButtonSelectAndActivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulButton">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulButton">ulButton</param>);
        </code>
                </body>
            </function>
            <function name="StillOff" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="PauseOn" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="PauseOff" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="MenuLanguageSelect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Language">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="Language">Language</param>);
        </code>
                </body>
            </function>
            <function name="AudioStreamChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulAudio">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulAudio">ulAudio</param>);
        </code>
                </body>
            </function>
            <function name="SubpictureStreamChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulSubPicture">
                    <type>uint</type>
                </param>
                <param name="bDisplay">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulSubPicture">ulSubPicture</param>, <param name="bDisplay">bDisplay</param>);
        </code>
                </body>
            </function>
            <function name="AngleChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulAngle">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulAngle">ulAngle</param>);
        </code>
                </body>
            </function>
            <function name="ParentalLevelSelect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulParentalLevel">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulParentalLevel">ulParentalLevel</param>);
        </code>
                </body>
            </function>
            <function name="ParentalCountrySelect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="wCountry">
                    <type>ushort</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, ushort, int&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="wCountry">wCountry</param>);
        </code>
                </body>
            </function>
            <function name="KaraokeAudioPresentationModeChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulMode">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulMode">ulMode</param>);
        </code>
                </body>
            </function>
            <function name="VideoModePreferrence" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulPreferredDisplayMode">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulPreferredDisplayMode">ulPreferredDisplayMode</param>);
        </code>
                </body>
            </function>
            <function name="SetRoot" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszPath">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">34</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="pszPath">pszPath</param>);
        </code>
                </body>
            </function>
            <function name="MouseActivate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="point">
                    <type>POINT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, POINT, int&gt;)(lpVtbl[<vtbl explicit="False">35</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="point">point</param>);
        </code>
                </body>
            </function>
            <function name="MouseSelect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="point">
                    <type>POINT</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, POINT, int&gt;)(lpVtbl[<vtbl explicit="False">36</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="point">point</param>);
        </code>
                </body>
            </function>
            <function name="ChapterPlayAutoStop" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulTitle">
                    <type>uint</type>
                </param>
                <param name="ulChapter">
                    <type>uint</type>
                </param>
                <param name="ulChaptersToPlay">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDvdControl*, uint, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">37</vtbl>]))(<param special="thisPtr">(IDvdControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulTitle">ulTitle</param>, <param name="ulChapter">ulChapter</param>, <param name="ulChaptersToPlay">ulChaptersToPlay</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
