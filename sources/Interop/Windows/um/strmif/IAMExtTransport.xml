<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IAMExtTransport" access="public" native="struct IAMExtTransport : IUnknown" uuid="a03cd5f0-3045-11cf-8c44-00aa006b6814" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetCapability" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Capability">
                    <type>int</type>
                </param>
                <param name="pValue">
                    <type>int*</type>
                </param>
                <param name="pdblValue">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Capability">Capability</param>, <param name="pValue">pValue</param>, <param name="pdblValue">pdblValue</param>);
        </code>
                </body>
            </function>
            <function name="put_MediaState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="State">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="State">State</param>);
        </code>
                </body>
            </function>
            <function name="get_MediaState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pState">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pState">pState</param>);
        </code>
                </body>
            </function>
            <function name="put_LocalControl" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="State">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="State">State</param>);
        </code>
                </body>
            </function>
            <function name="get_LocalControl" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pState">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pState">pState</param>);
        </code>
                </body>
            </function>
            <function name="GetStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="StatusItem">
                    <type>int</type>
                </param>
                <param name="pValue">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="StatusItem">StatusItem</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="GetTransportBasicParameters" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Param">
                    <type>int</type>
                </param>
                <param name="pValue">
                    <type>int*</type>
                </param>
                <param name="ppszData">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Param">Param</param>, <param name="pValue">pValue</param>, <param name="ppszData">ppszData</param>);
        </code>
                </body>
            </function>
            <function name="SetTransportBasicParameters" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Param">
                    <type>int</type>
                </param>
                <param name="Value">
                    <type>int</type>
                </param>
                <param name="pszData">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Param">Param</param>, <param name="Value">Value</param>, <param name="pszData">pszData</param>);
        </code>
                </body>
            </function>
            <function name="GetTransportVideoParameters" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Param">
                    <type>int</type>
                </param>
                <param name="pValue">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Param">Param</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="SetTransportVideoParameters" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Param">
                    <type>int</type>
                </param>
                <param name="Value">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Param">Param</param>, <param name="Value">Value</param>);
        </code>
                </body>
            </function>
            <function name="GetTransportAudioParameters" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Param">
                    <type>int</type>
                </param>
                <param name="pValue">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Param">Param</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="SetTransportAudioParameters" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Param">
                    <type>int</type>
                </param>
                <param name="Value">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Param">Param</param>, <param name="Value">Value</param>);
        </code>
                </body>
            </function>
            <function name="put_Mode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Mode">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Mode">Mode</param>);
        </code>
                </body>
            </function>
            <function name="get_Mode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pMode">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pMode">pMode</param>);
        </code>
                </body>
            </function>
            <function name="put_Rate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dblRate">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, double, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="dblRate">dblRate</param>);
        </code>
                </body>
            </function>
            <function name="get_Rate" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdblRate">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pdblRate">pdblRate</param>);
        </code>
                </body>
            </function>
            <function name="GetChase" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pEnabled">
                    <type>int*</type>
                </param>
                <param name="pOffset">
                    <type>int*</type>
                </param>
                <param name="phEvent">
                    <type>nuint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int*, int*, nuint*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pEnabled">pEnabled</param>, <param name="pOffset">pOffset</param>, <param name="phEvent">phEvent</param>);
        </code>
                </body>
            </function>
            <function name="SetChase" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Enable">
                    <type>int</type>
                </param>
                <param name="Offset">
                    <type>int</type>
                </param>
                <param name="hEvent">
                    <type>nuint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int, nuint, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Enable">Enable</param>, <param name="Offset">Offset</param>, <param name="hEvent">hEvent</param>);
        </code>
                </body>
            </function>
            <function name="GetBump" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSpeed">
                    <type>int*</type>
                </param>
                <param name="pDuration">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pSpeed">pSpeed</param>, <param name="pDuration">pDuration</param>);
        </code>
                </body>
            </function>
            <function name="SetBump" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Speed">
                    <type>int</type>
                </param>
                <param name="Duration">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Speed">Speed</param>, <param name="Duration">Duration</param>);
        </code>
                </body>
            </function>
            <function name="get_AntiClogControl" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pEnabled">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pEnabled">pEnabled</param>);
        </code>
                </body>
            </function>
            <function name="put_AntiClogControl" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Enable">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Enable">Enable</param>);
        </code>
                </body>
            </function>
            <function name="GetEditPropertySet" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="EditID">
                    <type>int</type>
                </param>
                <param name="pState">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int*, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="EditID">EditID</param>, <param name="pState">pState</param>);
        </code>
                </body>
            </function>
            <function name="SetEditPropertySet" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pEditID">
                    <type>int*</type>
                </param>
                <param name="State">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int*, int, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pEditID">pEditID</param>, <param name="State">State</param>);
        </code>
                </body>
            </function>
            <function name="GetEditProperty" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="EditID">
                    <type>int</type>
                </param>
                <param name="Param">
                    <type>int</type>
                </param>
                <param name="pValue">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int, int*, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="EditID">EditID</param>, <param name="Param">Param</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="SetEditProperty" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="EditID">
                    <type>int</type>
                </param>
                <param name="Param">
                    <type>int</type>
                </param>
                <param name="Value">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int, int, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="EditID">EditID</param>, <param name="Param">Param</param>, <param name="Value">Value</param>);
        </code>
                </body>
            </function>
            <function name="get_EditStart" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pValue">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="put_EditStart" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Value">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMExtTransport*, int, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IAMExtTransport*)Unsafe.AsPointer(ref this)</param>, <param name="Value">Value</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
