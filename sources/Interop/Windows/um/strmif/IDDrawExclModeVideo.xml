<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDDrawExclModeVideo" access="public" native="struct IDDrawExclModeVideo : IUnknown" uuid="153acc21-d83b-11d1-82bf-00a0c9696c8f" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetDDrawObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDDrawObject">
                    <type>IDirectDraw*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, IDirectDraw*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>, <param name="pDDrawObject">pDDrawObject</param>);
        </code>
                </body>
            </function>
            <function name="GetDDrawObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppDDrawObject">
                    <type>IDirectDraw**</type>
                </param>
                <param name="pbUsingExternal">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, IDirectDraw**, int*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>, <param name="ppDDrawObject">ppDDrawObject</param>, <param name="pbUsingExternal">pbUsingExternal</param>);
        </code>
                </body>
            </function>
            <function name="SetDDrawSurface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDDrawSurface">
                    <type>IDirectDrawSurface*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, IDirectDrawSurface*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>, <param name="pDDrawSurface">pDDrawSurface</param>);
        </code>
                </body>
            </function>
            <function name="GetDDrawSurface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppDDrawSurface">
                    <type>IDirectDrawSurface**</type>
                </param>
                <param name="pbUsingExternal">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, IDirectDrawSurface**, int*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>, <param name="ppDDrawSurface">ppDDrawSurface</param>, <param name="pbUsingExternal">pbUsingExternal</param>);
        </code>
                </body>
            </function>
            <function name="SetDrawParameters" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="prcSource">
                    <type>RECT*</type>
                </param>
                <param name="prcTarget">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, RECT*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>, <param name="prcSource">prcSource</param>, <param name="prcTarget">prcTarget</param>);
        </code>
                </body>
            </function>
            <function name="GetNativeVideoProps" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwVideoWidth">
                    <type>uint*</type>
                </param>
                <param name="pdwVideoHeight">
                    <type>uint*</type>
                </param>
                <param name="pdwPictAspectRatioX">
                    <type>uint*</type>
                </param>
                <param name="pdwPictAspectRatioY">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, uint*, uint*, uint*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>, <param name="pdwVideoWidth">pdwVideoWidth</param>, <param name="pdwVideoHeight">pdwVideoHeight</param>, <param name="pdwPictAspectRatioX">pdwPictAspectRatioX</param>, <param name="pdwPictAspectRatioY">pdwPictAspectRatioY</param>);
        </code>
                </body>
            </function>
            <function name="SetCallbackInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCallback">
                    <type>IDDrawExclModeVideoCallback*</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDDrawExclModeVideo*, IDDrawExclModeVideoCallback*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDDrawExclModeVideo*)Unsafe.AsPointer(ref this)</param>, <param name="pCallback">pCallback</param>, <param name="dwFlags">dwFlags</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
