<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IVMRMixerControl" access="public" native="struct IVMRMixerControl : IUnknown" uuid="1c1a17b0-bed0-415d-974b-dc6696131599" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetAlpha" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamID">
                    <type>uint</type>
                </param>
                <param name="Alpha">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint, float, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamID">dwStreamID</param>, <param name="Alpha">Alpha</param>);
        </code>
                </body>
            </function>
            <function name="GetAlpha" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamID">
                    <type>uint</type>
                </param>
                <param name="pAlpha">
                    <type>float*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint, float*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamID">dwStreamID</param>, <param name="pAlpha">pAlpha</param>);
        </code>
                </body>
            </function>
            <function name="SetZOrder" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamID">
                    <type>uint</type>
                </param>
                <param name="dwZ">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamID">dwStreamID</param>, <param name="dwZ">dwZ</param>);
        </code>
                </body>
            </function>
            <function name="GetZOrder" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamID">
                    <type>uint</type>
                </param>
                <param name="pZ">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamID">dwStreamID</param>, <param name="pZ">pZ</param>);
        </code>
                </body>
            </function>
            <function name="SetOutputRect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamID">
                    <type>uint</type>
                </param>
                <param name="pRect">
                    <type>NORMALIZEDRECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint, NORMALIZEDRECT*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamID">dwStreamID</param>, <param name="pRect">pRect</param>);
        </code>
                </body>
            </function>
            <function name="GetOutputRect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamID">
                    <type>uint</type>
                </param>
                <param name="pRect">
                    <type>NORMALIZEDRECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint, NORMALIZEDRECT*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamID">dwStreamID</param>, <param name="pRect">pRect</param>);
        </code>
                </body>
            </function>
            <function name="SetBackgroundClr" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ClrBkg">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="ClrBkg">ClrBkg</param>);
        </code>
                </body>
            </function>
            <function name="GetBackgroundClr" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lpClrBkg">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="lpClrBkg">lpClrBkg</param>);
        </code>
                </body>
            </function>
            <function name="SetMixingPrefs" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwMixerPrefs">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="dwMixerPrefs">dwMixerPrefs</param>);
        </code>
                </body>
            </function>
            <function name="GetMixingPrefs" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwMixerPrefs">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IVMRMixerControl*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IVMRMixerControl*)Unsafe.AsPointer(ref this)</param>, <param name="pdwMixerPrefs">pdwMixerPrefs</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
