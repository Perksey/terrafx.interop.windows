<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IOverlayNotify" access="public" native="struct IOverlayNotify : IUnknown" uuid="56a868a0-0ad4-11ce-b03a-0020af0ba770" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOverlayNotify*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IOverlayNotify*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOverlayNotify*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IOverlayNotify*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOverlayNotify*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IOverlayNotify*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="OnPaletteChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwColors">
                    <type>uint</type>
                </param>
                <param name="pPalette">
                    <type>PALETTEENTRY*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOverlayNotify*, uint, PALETTEENTRY*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IOverlayNotify*)Unsafe.AsPointer(ref this)</param>, <param name="dwColors">dwColors</param>, <param name="pPalette">pPalette</param>);
        </code>
                </body>
            </function>
            <function name="OnClipChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSourceRect">
                    <type>RECT*</type>
                </param>
                <param name="pDestinationRect">
                    <type>RECT*</type>
                </param>
                <param name="pRgnData">
                    <type>RGNDATA*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOverlayNotify*, RECT*, RECT*, RGNDATA*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IOverlayNotify*)Unsafe.AsPointer(ref this)</param>, <param name="pSourceRect">pSourceRect</param>, <param name="pDestinationRect">pDestinationRect</param>, <param name="pRgnData">pRgnData</param>);
        </code>
                </body>
            </function>
            <function name="OnColorKeyChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pColorKey">
                    <type>COLORKEY*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOverlayNotify*, COLORKEY*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IOverlayNotify*)Unsafe.AsPointer(ref this)</param>, <param name="pColorKey">pColorKey</param>);
        </code>
                </body>
            </function>
            <function name="OnPositionChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSourceRect">
                    <type>RECT*</type>
                </param>
                <param name="pDestinationRect">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IOverlayNotify*, RECT*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IOverlayNotify*)Unsafe.AsPointer(ref this)</param>, <param name="pSourceRect">pSourceRect</param>, <param name="pDestinationRect">pDestinationRect</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
