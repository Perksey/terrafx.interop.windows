<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IAMStreamControl" access="public" native="struct IAMStreamControl : IUnknown" uuid="36b73881-c2c8-11cf-8b46-00805f6cef60" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamControl*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IAMStreamControl*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamControl*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IAMStreamControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamControl*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IAMStreamControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="StartAt" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ptStart">
                    <type>long*</type>
                </param>
                <param name="dwCookie">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamControl*, long*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IAMStreamControl*)Unsafe.AsPointer(ref this)</param>, <param name="ptStart">ptStart</param>, <param name="dwCookie">dwCookie</param>);
        </code>
                </body>
            </function>
            <function name="StopAt" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ptStop">
                    <type>long*</type>
                </param>
                <param name="bSendExtra">
                    <type>int</type>
                </param>
                <param name="dwCookie">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamControl*, long*, int, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IAMStreamControl*)Unsafe.AsPointer(ref this)</param>, <param name="ptStop">ptStop</param>, <param name="bSendExtra">bSendExtra</param>, <param name="dwCookie">dwCookie</param>);
        </code>
                </body>
            </function>
            <function name="GetInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pInfo">
                    <type>AM_STREAM_INFO*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamControl*, AM_STREAM_INFO*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IAMStreamControl*)Unsafe.AsPointer(ref this)</param>, <param name="pInfo">pInfo</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
