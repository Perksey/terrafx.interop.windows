<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/strmif.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IAMStreamSelect" access="public" native="struct IAMStreamSelect : IUnknown" uuid="c1960960-17f5-11d1-abe1-00a0c905f375" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamSelect*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IAMStreamSelect*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamSelect*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IAMStreamSelect*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamSelect*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IAMStreamSelect*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Count" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcStreams">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamSelect*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IAMStreamSelect*)Unsafe.AsPointer(ref this)</param>, <param name="pcStreams">pcStreams</param>);
        </code>
                </body>
            </function>
            <function name="Info" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lIndex">
                    <type>int</type>
                </param>
                <param name="ppmt">
                    <type>AM_MEDIA_TYPE**</type>
                </param>
                <param name="pdwFlags">
                    <type>uint*</type>
                </param>
                <param name="plcid">
                    <type>uint*</type>
                </param>
                <param name="pdwGroup">
                    <type>uint*</type>
                </param>
                <param name="ppszName">
                    <type>ushort**</type>
                </param>
                <param name="ppObject">
                    <type>IUnknown**</type>
                </param>
                <param name="ppUnk">
                    <type>IUnknown**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamSelect*, int, AM_MEDIA_TYPE**, uint*, uint*, uint*, ushort**, IUnknown**, IUnknown**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IAMStreamSelect*)Unsafe.AsPointer(ref this)</param>, <param name="lIndex">lIndex</param>, <param name="ppmt">ppmt</param>, <param name="pdwFlags">pdwFlags</param>, <param name="plcid">plcid</param>, <param name="pdwGroup">pdwGroup</param>, <param name="ppszName">ppszName</param>, <param name="ppObject">ppObject</param>, <param name="ppUnk">ppUnk</param>);
        </code>
                </body>
            </function>
            <function name="Enable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="lIndex">
                    <type>int</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IAMStreamSelect*, int, uint, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IAMStreamSelect*)Unsafe.AsPointer(ref this)</param>, <param name="lIndex">lIndex</param>, <param name="dwFlags">dwFlags</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
