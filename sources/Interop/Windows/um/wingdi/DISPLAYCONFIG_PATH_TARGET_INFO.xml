<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wingdi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="DISPLAYCONFIG_PATH_TARGET_INFO" access="public">
            <field name="adapterId" access="public">
                <type native="">LUID</type>
            </field>
            <field name="id" access="public">
                <type native="UINT32">uint</type>
            </field>
            <field name="Anonymous" access="public">
                <type native="DISPLAYCONFIG_PATH_TARGET_INFO::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/wingdi.h:2973:5)">_Anonymous_e__Union</type>
            </field>
            <field name="modeInfoIdx" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.modeInfoIdx, 1));
        </code>
                </get>
            </field>
            <field name="desktopModeInfoIdx" access="public">
                <type native="">uint</type>
                <get inlining="aggressive">
                    <code>return Anonymous.Anonymous.desktopModeInfoIdx;
        </code>
                </get>
                <set inlining="aggressive">
                    <code>Anonymous.Anonymous.desktopModeInfoIdx = value;
        </code>
                </set>
            </field>
            <field name="targetModeInfoIdx" access="public">
                <type native="">uint</type>
                <get inlining="aggressive">
                    <code>return Anonymous.Anonymous.targetModeInfoIdx;
        </code>
                </get>
                <set inlining="aggressive">
                    <code>Anonymous.Anonymous.targetModeInfoIdx = value;
        </code>
                </set>
            </field>
            <field name="outputTechnology" access="public">
                <type native="">DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY</type>
            </field>
            <field name="rotation" access="public">
                <type native="">DISPLAYCONFIG_ROTATION</type>
            </field>
            <field name="scaling" access="public">
                <type native="">DISPLAYCONFIG_SCALING</type>
            </field>
            <field name="refreshRate" access="public">
                <type native="">DISPLAYCONFIG_RATIONAL</type>
            </field>
            <field name="scanLineOrdering" access="public">
                <type native="">DISPLAYCONFIG_SCANLINE_ORDERING</type>
            </field>
            <field name="targetAvailable" access="public">
                <type native="BOOL">int</type>
            </field>
            <field name="statusFlags" access="public">
                <type native="UINT32">uint</type>
            </field>
            <struct name="_Anonymous_e__Union" access="public" layout="Explicit">
                <field name="modeInfoIdx" access="public" offset="0">
                    <type native="UINT32">uint</type>
                </field>
                <field name="Anonymous" access="public" offset="0">
                    <type native="DISPLAYCONFIG_PATH_TARGET_INFO::(anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/wingdi.h:2976:9)">_Anonymous_e__Struct</type>
                </field>
                <struct name="_Anonymous_e__Struct" access="public">
                    <field name="_bitfield" access="public">
                        <type native="">uint</type>
                    </field>
                    <field name="desktopModeInfoIdx" access="public">
                        <type native="UINT32 : 16">uint</type>
                        <get inlining="aggressive">
                            <code>return <bitfieldName>_bitfield</bitfieldName> &amp; 0x<bitwidthHexStringBacking>FFFFu</bitwidthHexStringBacking>;
        </code>
                        </get>
                        <set inlining="aggressive">
                            <code>
                                <bitfieldName>_bitfield</bitfieldName> = (_bitfield &amp; ~0x<bitwidthHexStringBacking>FFFFu</bitwidthHexStringBacking>) | (value &amp; 0x<bitwidthHexString>FFFFu</bitwidthHexString>);
        </code>
                        </set>
                    </field>
                    <field name="targetModeInfoIdx" access="public">
                        <type native="UINT32 : 16">uint</type>
                        <get inlining="aggressive">
                            <code>return (<bitfieldName>_bitfield</bitfieldName> &gt;&gt; <bitfieldOffset>16</bitfieldOffset>) &amp; 0x<bitwidthHexStringBacking>FFFFu</bitwidthHexStringBacking>;
        </code>
                        </get>
                        <set inlining="aggressive">
                            <code>
                                <bitfieldName>_bitfield</bitfieldName> = (_bitfield &amp; ~(0x<bitwidthHexStringBacking>FFFFu</bitwidthHexStringBacking> &lt;&lt; <bitfieldOffset>16</bitfieldOffset>)) | ((value &amp; 0x<bitwidthHexString>FFFFu</bitwidthHexString>) &lt;&lt; 16);
        </code>
                        </set>
                    </field>
                </struct>
            </struct>
        </struct>
    </namespace>
</bindings>
