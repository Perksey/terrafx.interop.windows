<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/dwrite_2.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDWriteFontFallbackBuilder" access="public" native="struct IDWriteFontFallbackBuilder : IUnknown" uuid="fd882d06-8aba-4fb8-b849-8be8b73e14de" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFallbackBuilder*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDWriteFontFallbackBuilder*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFallbackBuilder*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDWriteFontFallbackBuilder*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFallbackBuilder*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDWriteFontFallbackBuilder*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="AddMapping" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ranges">
                    <type>DWRITE_UNICODE_RANGE*</type>
                </param>
                <param name="rangesCount">
                    <type>uint</type>
                </param>
                <param name="targetFamilyNames">
                    <type>ushort**</type>
                </param>
                <param name="targetFamilyNamesCount">
                    <type>uint</type>
                </param>
                <param name="fontCollection">
                    <type>IDWriteFontCollection*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <param name="localeName">
                    <type>ushort*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <param name="baseFamilyName">
                    <type>ushort*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <param name="scale">
                    <type>float</type>
                    <init>
                        <code>1.0f
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFallbackBuilder*, DWRITE_UNICODE_RANGE*, uint, ushort**, uint, IDWriteFontCollection*, ushort*, ushort*, float, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDWriteFontFallbackBuilder*)Unsafe.AsPointer(ref this)</param>, <param name="ranges">ranges</param>, <param name="rangesCount">rangesCount</param>, <param name="targetFamilyNames">targetFamilyNames</param>, <param name="targetFamilyNamesCount">targetFamilyNamesCount</param>, <param name="fontCollection">fontCollection</param>, <param name="localeName">localeName</param>, <param name="baseFamilyName">baseFamilyName</param>, <param name="scale">scale</param>);
        </code>
                </body>
            </function>
            <function name="AddMappings" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFallback">
                    <type>IDWriteFontFallback*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFallbackBuilder*, IDWriteFontFallback*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDWriteFontFallbackBuilder*)Unsafe.AsPointer(ref this)</param>, <param name="fontFallback">fontFallback</param>);
        </code>
                </body>
            </function>
            <function name="CreateFontFallback" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fontFallback">
                    <type>IDWriteFontFallback**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDWriteFontFallbackBuilder*, IDWriteFontFallback**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDWriteFontFallbackBuilder*)Unsafe.AsPointer(ref this)</param>, <param name="fontFallback">fontFallback</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
