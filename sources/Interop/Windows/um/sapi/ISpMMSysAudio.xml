<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpMMSysAudio" access="public" native="struct ISpMMSysAudio : ISpAudio" uuid="15806f6e-1d70-4b48-98e6-3b1a007509ab" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Read" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pv">
                    <type>void*</type>
                </param>
                <param name="cb">
                    <type>uint</type>
                </param>
                <param name="pcbRead">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, void*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pv">pv</param>, <param name="cb">cb</param>, <param name="pcbRead">pcbRead</param>);
        </code>
                </body>
            </function>
            <function name="Write" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pv">
                    <type>void*</type>
                </param>
                <param name="cb">
                    <type>uint</type>
                </param>
                <param name="pcbWritten">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, void*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pv">pv</param>, <param name="cb">cb</param>, <param name="pcbWritten">pcbWritten</param>);
        </code>
                </body>
            </function>
            <function name="Seek" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dlibMove">
                    <type>LARGE_INTEGER</type>
                </param>
                <param name="dwOrigin">
                    <type>uint</type>
                </param>
                <param name="plibNewPosition">
                    <type>ULARGE_INTEGER*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, LARGE_INTEGER, uint, ULARGE_INTEGER*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="dlibMove">dlibMove</param>, <param name="dwOrigin">dwOrigin</param>, <param name="plibNewPosition">plibNewPosition</param>);
        </code>
                </body>
            </function>
            <function name="SetSize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="libNewSize">
                    <type>ULARGE_INTEGER</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, ULARGE_INTEGER, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="libNewSize">libNewSize</param>);
        </code>
                </body>
            </function>
            <function name="CopyTo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pstm">
                    <type>IStream*</type>
                </param>
                <param name="cb">
                    <type>ULARGE_INTEGER</type>
                </param>
                <param name="pcbRead">
                    <type>ULARGE_INTEGER*</type>
                </param>
                <param name="pcbWritten">
                    <type>ULARGE_INTEGER*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, IStream*, ULARGE_INTEGER, ULARGE_INTEGER*, ULARGE_INTEGER*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pstm">pstm</param>, <param name="cb">cb</param>, <param name="pcbRead">pcbRead</param>, <param name="pcbWritten">pcbWritten</param>);
        </code>
                </body>
            </function>
            <function name="Commit" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="grfCommitFlags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="grfCommitFlags">grfCommitFlags</param>);
        </code>
                </body>
            </function>
            <function name="Revert" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="LockRegion" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="libOffset">
                    <type>ULARGE_INTEGER</type>
                </param>
                <param name="cb">
                    <type>ULARGE_INTEGER</type>
                </param>
                <param name="dwLockType">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, ULARGE_INTEGER, ULARGE_INTEGER, uint, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="libOffset">libOffset</param>, <param name="cb">cb</param>, <param name="dwLockType">dwLockType</param>);
        </code>
                </body>
            </function>
            <function name="UnlockRegion" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="libOffset">
                    <type>ULARGE_INTEGER</type>
                </param>
                <param name="cb">
                    <type>ULARGE_INTEGER</type>
                </param>
                <param name="dwLockType">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, ULARGE_INTEGER, ULARGE_INTEGER, uint, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="libOffset">libOffset</param>, <param name="cb">cb</param>, <param name="dwLockType">dwLockType</param>);
        </code>
                </body>
            </function>
            <function name="Stat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pstatstg">
                    <type>STATSTG*</type>
                </param>
                <param name="grfStatFlag">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, STATSTG*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pstatstg">pstatstg</param>, <param name="grfStatFlag">grfStatFlag</param>);
        </code>
                </body>
            </function>
            <function name="Clone" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppstm">
                    <type>IStream**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, IStream**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="ppstm">ppstm</param>);
        </code>
                </body>
            </function>
            <function name="GetFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguidFormatId">
                    <type>Guid*</type>
                </param>
                <param name="ppCoMemWaveFormatEx">
                    <type>WAVEFORMATEX**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, Guid*, WAVEFORMATEX**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pguidFormatId">pguidFormatId</param>, <param name="ppCoMemWaveFormatEx">ppCoMemWaveFormatEx</param>);
        </code>
                </body>
            </function>
            <function name="SetState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="NewState">
                    <type>SPAUDIOSTATE</type>
                </param>
                <param name="ullReserved">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, SPAUDIOSTATE, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="NewState">NewState</param>, <param name="ullReserved">ullReserved</param>);
        </code>
                </body>
            </function>
            <function name="SetFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="rguidFmtId">
                    <type>Guid*</type>
                </param>
                <param name="pWaveFormatEx">
                    <type>WAVEFORMATEX*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, Guid*, WAVEFORMATEX*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="rguidFmtId">rguidFmtId</param>, <param name="pWaveFormatEx">pWaveFormatEx</param>);
        </code>
                </body>
            </function>
            <function name="GetStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pStatus">
                    <type>SPAUDIOSTATUS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, SPAUDIOSTATUS*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pStatus">pStatus</param>);
        </code>
                </body>
            </function>
            <function name="SetBufferInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pBuffInfo">
                    <type>SPAUDIOBUFFERINFO*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, SPAUDIOBUFFERINFO*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pBuffInfo">pBuffInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetBufferInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pBuffInfo">
                    <type>SPAUDIOBUFFERINFO*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, SPAUDIOBUFFERINFO*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pBuffInfo">pBuffInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetDefaultFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFormatId">
                    <type>Guid*</type>
                </param>
                <param name="ppCoMemWaveFormatEx">
                    <type>WAVEFORMATEX**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, Guid*, WAVEFORMATEX**, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pFormatId">pFormatId</param>, <param name="ppCoMemWaveFormatEx">ppCoMemWaveFormatEx</param>);
        </code>
                </body>
            </function>
            <function name="EventHandle" access="public" unsafe="true">
                <type native="HANDLE">IntPtr</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, IntPtr&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetVolumeLevel" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pLevel">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pLevel">pLevel</param>);
        </code>
                </body>
            </function>
            <function name="SetVolumeLevel" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Level">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="Level">Level</param>);
        </code>
                </body>
            </function>
            <function name="GetBufferNotifySize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcbSize">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pcbSize">pcbSize</param>);
        </code>
                </body>
            </function>
            <function name="SetBufferNotifySize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cbSize">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="cbSize">cbSize</param>);
        </code>
                </body>
            </function>
            <function name="GetDeviceId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="puDeviceId">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="puDeviceId">puDeviceId</param>);
        </code>
                </body>
            </function>
            <function name="SetDeviceId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="uDeviceId">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="uDeviceId">uDeviceId</param>);
        </code>
                </body>
            </function>
            <function name="GetMMHandle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pHandle">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="pHandle">pHandle</param>);
        </code>
                </body>
            </function>
            <function name="GetLineId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="puLineId">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="puLineId">puLineId</param>);
        </code>
                </body>
            </function>
            <function name="SetLineId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="uLineId">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpMMSysAudio*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(ISpMMSysAudio*)Unsafe.AsPointer(ref this)</param>, <param name="uLineId">uLineId</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
