<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <enumeration name="DISPID_SpeechVoice" access="public">
            <type>int</type>
            <enumerator name="DISPID_SVStatus" access="">
                <type primitive="False">int</type>
                <value>
                    <code>1
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVVoice" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVStatus + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVAudioOutput" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVVoice + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVAudioOutputStream" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVAudioOutput + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVRate" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVAudioOutputStream + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVVolume" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVRate + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVAllowAudioOuputFormatChangesOnNextSet" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVVolume + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVEventInterests" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVAllowAudioOuputFormatChangesOnNextSet + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVPriority" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVEventInterests + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVAlertBoundary" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVPriority + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVSyncronousSpeakTimeout" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVAlertBoundary + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVSpeak" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVSyncronousSpeakTimeout + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVSpeakStream" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVSpeak + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVPause" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVSpeakStream + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVResume" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVPause + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVSkip" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVResume + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVGetVoices" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVSkip + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVGetAudioOutputs" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVGetVoices + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVWaitUntilDone" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVGetAudioOutputs + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVSpeakCompleteEvent" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVWaitUntilDone + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVIsUISupported" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVSpeakCompleteEvent + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="DISPID_SVDisplayUI" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(DISPID_SVIsUISupported + 1)
        </code>
                </value>
            </enumerator>
        </enumeration>
    </namespace>
</bindings>
