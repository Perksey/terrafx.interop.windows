<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <enumeration name="SPVISEMES" access="public">
            <type>int</type>
            <enumerator name="SP_VISEME_0" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_1" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_0 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_2" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_1 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_3" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_2 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_4" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_3 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_5" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_4 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_6" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_5 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_7" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_6 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_8" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_7 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_9" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_8 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_10" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_9 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_11" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_10 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_12" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_11 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_13" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_12 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_14" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_13 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_15" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_14 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_16" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_15 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_17" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_16 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_18" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_17 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_19" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_18 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_20" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_19 + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="SP_VISEME_21" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(SP_VISEME_20 + 1)
        </code>
                </value>
            </enumerator>
        </enumeration>
    </namespace>
</bindings>
