<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpRegDataKey" access="public" native="struct ISpRegDataKey : ISpDataKey" uuid="92a66e2b-c830-4149-83df-6fc2ba1e7a5b" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszValueName">
                    <type>ushort*</type>
                </param>
                <param name="cbData">
                    <type>uint</type>
                </param>
                <param name="pData">
                    <type>byte*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, uint, byte*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszValueName">pszValueName</param>, <param name="cbData">cbData</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
            <function name="GetData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszValueName">
                    <type>ushort*</type>
                </param>
                <param name="pcbData">
                    <type>uint*</type>
                </param>
                <param name="pData">
                    <type>byte*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, uint*, byte*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszValueName">pszValueName</param>, <param name="pcbData">pcbData</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
            <function name="SetStringValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszValueName">
                    <type>ushort*</type>
                </param>
                <param name="pszValue">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszValueName">pszValueName</param>, <param name="pszValue">pszValue</param>);
        </code>
                </body>
            </function>
            <function name="GetStringValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszValueName">
                    <type>ushort*</type>
                </param>
                <param name="ppszValue">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszValueName">pszValueName</param>, <param name="ppszValue">ppszValue</param>);
        </code>
                </body>
            </function>
            <function name="SetDWORD" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszValueName">
                    <type>ushort*</type>
                </param>
                <param name="dwValue">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszValueName">pszValueName</param>, <param name="dwValue">dwValue</param>);
        </code>
                </body>
            </function>
            <function name="GetDWORD" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszValueName">
                    <type>ushort*</type>
                </param>
                <param name="pdwValue">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszValueName">pszValueName</param>, <param name="pdwValue">pdwValue</param>);
        </code>
                </body>
            </function>
            <function name="OpenKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszSubKeyName">
                    <type>ushort*</type>
                </param>
                <param name="ppSubKey">
                    <type>ISpDataKey**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, ISpDataKey**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszSubKeyName">pszSubKeyName</param>, <param name="ppSubKey">ppSubKey</param>);
        </code>
                </body>
            </function>
            <function name="CreateKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszSubKey">
                    <type>ushort*</type>
                </param>
                <param name="ppSubKey">
                    <type>ISpDataKey**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, ISpDataKey**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszSubKey">pszSubKey</param>, <param name="ppSubKey">ppSubKey</param>);
        </code>
                </body>
            </function>
            <function name="DeleteKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszSubKey">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszSubKey">pszSubKey</param>);
        </code>
                </body>
            </function>
            <function name="DeleteValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszValueName">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="pszValueName">pszValueName</param>);
        </code>
                </body>
            </function>
            <function name="EnumKeys" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Index">
                    <type>uint</type>
                </param>
                <param name="ppszSubKeyName">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, uint, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="Index">Index</param>, <param name="ppszSubKeyName">ppszSubKeyName</param>);
        </code>
                </body>
            </function>
            <function name="EnumValues" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Index">
                    <type>uint</type>
                </param>
                <param name="ppszValueName">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, uint, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="Index">Index</param>, <param name="ppszValueName">ppszValueName</param>);
        </code>
                </body>
            </function>
            <function name="SetKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hkey">
                    <type>IntPtr</type>
                </param>
                <param name="fReadOnly">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRegDataKey*, IntPtr, int, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(ISpRegDataKey*)Unsafe.AsPointer(ref this)</param>, <param name="hkey">hkey</param>, <param name="fReadOnly">fReadOnly</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
