<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpeechObjectTokenCategory" access="public" native="struct ISpeechObjectTokenCategory : IDispatch" uuid="ca7eac50-2d01-4145-86d4-5ae7d70f4469" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfoCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pctinfo">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="pctinfo">pctinfo</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="iTInfo">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="ppTInfo">
                    <type>ITypeInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, uint, uint, ITypeInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="iTInfo">iTInfo</param>, <param name="lcid">lcid</param>, <param name="ppTInfo">ppTInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetIDsOfNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="rgDispId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, Guid*, ushort**, uint, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>, <param name="lcid">lcid</param>, <param name="rgDispId">rgDispId</param>);
        </code>
                </body>
            </function>
            <function name="Invoke" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dispIdMember">
                    <type>int</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="wFlags">
                    <type>ushort</type>
                </param>
                <param name="pDispParams">
                    <type>DISPPARAMS*</type>
                </param>
                <param name="pVarResult">
                    <type>VARIANT*</type>
                </param>
                <param name="pExcepInfo">
                    <type>EXCEPINFO*</type>
                </param>
                <param name="puArgErr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, int, Guid*, uint, ushort, DISPPARAMS*, VARIANT*, EXCEPINFO*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="dispIdMember">dispIdMember</param>, <param name="riid">riid</param>, <param name="lcid">lcid</param>, <param name="wFlags">wFlags</param>, <param name="pDispParams">pDispParams</param>, <param name="pVarResult">pVarResult</param>, <param name="pExcepInfo">pExcepInfo</param>, <param name="puArgErr">puArgErr</param>);
        </code>
                </body>
            </function>
            <function name="get_Id" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Id">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="Id">Id</param>);
        </code>
                </body>
            </function>
            <function name="put_Default" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="TokenId">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="TokenId">TokenId</param>);
        </code>
                </body>
            </function>
            <function name="get_Default" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="TokenId">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="TokenId">TokenId</param>);
        </code>
                </body>
            </function>
            <function name="SetId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Id">
                    <type>ushort*</type>
                </param>
                <param name="CreateIfNotExist">
                    <type>short</type>
                    <init>
                        <code>0
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, ushort*, short, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="Id">Id</param>, <param name="CreateIfNotExist">CreateIfNotExist</param>);
        </code>
                </body>
            </function>
            <function name="GetDataKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Location">
                    <type>SpeechDataKeyLocation</type>
                </param>
                <param name="DataKey">
                    <type>ISpeechDataKey**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, SpeechDataKeyLocation, ISpeechDataKey**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="Location">Location</param>, <param name="DataKey">DataKey</param>);
        </code>
                </body>
            </function>
            <function name="EnumerateTokens" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="RequiredAttributes">
                    <type>ushort*</type>
                </param>
                <param name="OptionalAttributes">
                    <type>ushort*</type>
                </param>
                <param name="Tokens">
                    <type>ISpeechObjectTokens**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectTokenCategory*, ushort*, ushort*, ISpeechObjectTokens**, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ISpeechObjectTokenCategory*)Unsafe.AsPointer(ref this)</param>, <param name="RequiredAttributes">RequiredAttributes</param>, <param name="OptionalAttributes">OptionalAttributes</param>, <param name="Tokens">Tokens</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
