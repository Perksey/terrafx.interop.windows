<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpRecognizer" access="public" native="struct ISpRecognizer : ISpProperties" uuid="c2b5f241-daa0-4507-9e16-5a1eaa2b7a5c" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetPropertyNum" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pName">
                    <type>ushort*</type>
                </param>
                <param name="lValue">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ushort*, int, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pName">pName</param>, <param name="lValue">lValue</param>);
        </code>
                </body>
            </function>
            <function name="GetPropertyNum" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pName">
                    <type>ushort*</type>
                </param>
                <param name="plValue">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ushort*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pName">pName</param>, <param name="plValue">plValue</param>);
        </code>
                </body>
            </function>
            <function name="SetPropertyString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pName">
                    <type>ushort*</type>
                </param>
                <param name="pValue">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ushort*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pName">pName</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="GetPropertyString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pName">
                    <type>ushort*</type>
                </param>
                <param name="ppCoMemValue">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ushort*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pName">pName</param>, <param name="ppCoMemValue">ppCoMemValue</param>);
        </code>
                </body>
            </function>
            <function name="SetRecognizer" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pRecognizer">
                    <type>ISpObjectToken*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ISpObjectToken*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pRecognizer">pRecognizer</param>);
        </code>
                </body>
            </function>
            <function name="GetRecognizer" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppRecognizer">
                    <type>ISpObjectToken**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ISpObjectToken**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="ppRecognizer">ppRecognizer</param>);
        </code>
                </body>
            </function>
            <function name="SetInput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pUnkInput">
                    <type>IUnknown*</type>
                </param>
                <param name="fAllowFormatChanges">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, IUnknown*, int, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pUnkInput">pUnkInput</param>, <param name="fAllowFormatChanges">fAllowFormatChanges</param>);
        </code>
                </body>
            </function>
            <function name="GetInputObjectToken" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppToken">
                    <type>ISpObjectToken**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ISpObjectToken**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="ppToken">ppToken</param>);
        </code>
                </body>
            </function>
            <function name="GetInputStream" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppStream">
                    <type>ISpStreamFormat**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ISpStreamFormat**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="ppStream">ppStream</param>);
        </code>
                </body>
            </function>
            <function name="CreateRecoContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppNewCtxt">
                    <type>ISpRecoContext**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ISpRecoContext**, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="ppNewCtxt">ppNewCtxt</param>);
        </code>
                </body>
            </function>
            <function name="GetRecoProfile" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppToken">
                    <type>ISpObjectToken**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ISpObjectToken**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="ppToken">ppToken</param>);
        </code>
                </body>
            </function>
            <function name="SetRecoProfile" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pToken">
                    <type>ISpObjectToken*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ISpObjectToken*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pToken">pToken</param>);
        </code>
                </body>
            </function>
            <function name="IsSharedInstance" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetRecoState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pState">
                    <type>SPRECOSTATE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, SPRECOSTATE*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pState">pState</param>);
        </code>
                </body>
            </function>
            <function name="SetRecoState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="NewState">
                    <type>SPRECOSTATE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, SPRECOSTATE, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="NewState">NewState</param>);
        </code>
                </body>
            </function>
            <function name="GetStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pStatus">
                    <type>SPRECOGNIZERSTATUS*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, SPRECOGNIZERSTATUS*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pStatus">pStatus</param>);
        </code>
                </body>
            </function>
            <function name="GetFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="WaveFormatType">
                    <type>SPWAVEFORMATTYPE</type>
                </param>
                <param name="pFormatId">
                    <type>Guid*</type>
                </param>
                <param name="ppCoMemWFEX">
                    <type>WAVEFORMATEX**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, SPWAVEFORMATTYPE, Guid*, WAVEFORMATEX**, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="WaveFormatType">WaveFormatType</param>, <param name="pFormatId">pFormatId</param>, <param name="ppCoMemWFEX">ppCoMemWFEX</param>);
        </code>
                </body>
            </function>
            <function name="IsUISupported" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszTypeOfUI">
                    <type>ushort*</type>
                </param>
                <param name="pvExtraData">
                    <type>void*</type>
                </param>
                <param name="cbExtraData">
                    <type>uint</type>
                </param>
                <param name="pfSupported">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ushort*, void*, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pszTypeOfUI">pszTypeOfUI</param>, <param name="pvExtraData">pvExtraData</param>, <param name="cbExtraData">cbExtraData</param>, <param name="pfSupported">pfSupported</param>);
        </code>
                </body>
            </function>
            <function name="DisplayUI" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hwndParent">
                    <type>IntPtr</type>
                </param>
                <param name="pszTitle">
                    <type>ushort*</type>
                </param>
                <param name="pszTypeOfUI">
                    <type>ushort*</type>
                </param>
                <param name="pvExtraData">
                    <type>void*</type>
                </param>
                <param name="cbExtraData">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, IntPtr, ushort*, ushort*, void*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="hwndParent">hwndParent</param>, <param name="pszTitle">pszTitle</param>, <param name="pszTypeOfUI">pszTypeOfUI</param>, <param name="pvExtraData">pvExtraData</param>, <param name="cbExtraData">cbExtraData</param>);
        </code>
                </body>
            </function>
            <function name="EmulateRecognition" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pPhrase">
                    <type>ISpPhrase*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpRecognizer*, ISpPhrase*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(ISpRecognizer*)Unsafe.AsPointer(ref this)</param>, <param name="pPhrase">pPhrase</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
