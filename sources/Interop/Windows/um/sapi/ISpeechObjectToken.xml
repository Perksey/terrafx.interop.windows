<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpeechObjectToken" access="public" native="struct ISpeechObjectToken : IDispatch" uuid="c74a3adc-b727-4500-a84a-b526721c8b8c" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfoCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pctinfo">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="pctinfo">pctinfo</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="iTInfo">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="ppTInfo">
                    <type>ITypeInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, uint, uint, ITypeInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="iTInfo">iTInfo</param>, <param name="lcid">lcid</param>, <param name="ppTInfo">ppTInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetIDsOfNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="rgDispId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, Guid*, ushort**, uint, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>, <param name="lcid">lcid</param>, <param name="rgDispId">rgDispId</param>);
        </code>
                </body>
            </function>
            <function name="Invoke" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dispIdMember">
                    <type>int</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="wFlags">
                    <type>ushort</type>
                </param>
                <param name="pDispParams">
                    <type>DISPPARAMS*</type>
                </param>
                <param name="pVarResult">
                    <type>VARIANT*</type>
                </param>
                <param name="pExcepInfo">
                    <type>EXCEPINFO*</type>
                </param>
                <param name="puArgErr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, int, Guid*, uint, ushort, DISPPARAMS*, VARIANT*, EXCEPINFO*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="dispIdMember">dispIdMember</param>, <param name="riid">riid</param>, <param name="lcid">lcid</param>, <param name="wFlags">wFlags</param>, <param name="pDispParams">pDispParams</param>, <param name="pVarResult">pVarResult</param>, <param name="pExcepInfo">pExcepInfo</param>, <param name="puArgErr">puArgErr</param>);
        </code>
                </body>
            </function>
            <function name="get_Id" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ObjectId">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="ObjectId">ObjectId</param>);
        </code>
                </body>
            </function>
            <function name="get_DataKey" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="DataKey">
                    <type>ISpeechDataKey**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ISpeechDataKey**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="DataKey">DataKey</param>);
        </code>
                </body>
            </function>
            <function name="get_Category" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Category">
                    <type>ISpeechObjectTokenCategory**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ISpeechObjectTokenCategory**, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="Category">Category</param>);
        </code>
                </body>
            </function>
            <function name="GetDescription" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Locale">
                    <type>int</type>
                </param>
                <param name="Description">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, int, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="Locale">Locale</param>, <param name="Description">Description</param>);
        </code>
                </body>
            </function>
            <function name="SetId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Id">
                    <type>ushort*</type>
                </param>
                <param name="CategoryID">
                    <type>ushort*</type>
                    <init>
                        <code>
                            <value></value>(ushort*)""
        </code>
                    </init>
                </param>
                <param name="CreateIfNotExist">
                    <type>short</type>
                    <init>
                        <code>0
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ushort*, ushort*, short, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="Id">Id</param>, <param name="CategoryID">CategoryID</param>, <param name="CreateIfNotExist">CreateIfNotExist</param>);
        </code>
                </body>
            </function>
            <function name="GetAttribute" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="AttributeName">
                    <type>ushort*</type>
                </param>
                <param name="AttributeValue">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ushort*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="AttributeName">AttributeName</param>, <param name="AttributeValue">AttributeValue</param>);
        </code>
                </body>
            </function>
            <function name="CreateInstance" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pUnkOuter">
                    <type>IUnknown*</type>
                </param>
                <param name="ClsContext">
                    <type>SpeechTokenContext</type>
                </param>
                <param name="Object">
                    <type>IUnknown**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, IUnknown*, SpeechTokenContext, IUnknown**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="pUnkOuter">pUnkOuter</param>, <param name="ClsContext">ClsContext</param>, <param name="Object">Object</param>);
        </code>
                </body>
            </function>
            <function name="Remove" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ObjectStorageCLSID">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="ObjectStorageCLSID">ObjectStorageCLSID</param>);
        </code>
                </body>
            </function>
            <function name="GetStorageFileName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ObjectStorageCLSID">
                    <type>ushort*</type>
                </param>
                <param name="KeyName">
                    <type>ushort*</type>
                </param>
                <param name="FileName">
                    <type>ushort*</type>
                </param>
                <param name="Folder">
                    <type>SpeechTokenShellFolder</type>
                </param>
                <param name="FilePath">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ushort*, ushort*, ushort*, SpeechTokenShellFolder, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="ObjectStorageCLSID">ObjectStorageCLSID</param>, <param name="KeyName">KeyName</param>, <param name="FileName">FileName</param>, <param name="Folder">Folder</param>, <param name="FilePath">FilePath</param>);
        </code>
                </body>
            </function>
            <function name="RemoveStorageFileName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ObjectStorageCLSID">
                    <type>ushort*</type>
                </param>
                <param name="KeyName">
                    <type>ushort*</type>
                </param>
                <param name="DeleteFile">
                    <type>short</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ushort*, ushort*, short, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="ObjectStorageCLSID">ObjectStorageCLSID</param>, <param name="KeyName">KeyName</param>, <param name="DeleteFile">DeleteFile</param>);
        </code>
                </body>
            </function>
            <function name="IsUISupported" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="TypeOfUI">
                    <type>ushort*</type>
                </param>
                <param name="ExtraData">
                    <type>VARIANT*</type>
                </param>
                <param name="Object">
                    <type>IUnknown*</type>
                </param>
                <param name="Supported">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ushort*, VARIANT*, IUnknown*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="TypeOfUI">TypeOfUI</param>, <param name="ExtraData">ExtraData</param>, <param name="Object">Object</param>, <param name="Supported">Supported</param>);
        </code>
                </body>
            </function>
            <function name="DisplayUI" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hWnd">
                    <type>int</type>
                </param>
                <param name="Title">
                    <type>ushort*</type>
                </param>
                <param name="TypeOfUI">
                    <type>ushort*</type>
                </param>
                <param name="ExtraData">
                    <type>VARIANT*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <param name="Object">
                    <type>IUnknown*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, int, ushort*, ushort*, VARIANT*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="hWnd">hWnd</param>, <param name="Title">Title</param>, <param name="TypeOfUI">TypeOfUI</param>, <param name="ExtraData">ExtraData</param>, <param name="Object">Object</param>);
        </code>
                </body>
            </function>
            <function name="MatchesAttributes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Attributes">
                    <type>ushort*</type>
                </param>
                <param name="Matches">
                    <type>short*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechObjectToken*, ushort*, short*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(ISpeechObjectToken*)Unsafe.AsPointer(ref this)</param>, <param name="Attributes">Attributes</param>, <param name="Matches">Matches</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
