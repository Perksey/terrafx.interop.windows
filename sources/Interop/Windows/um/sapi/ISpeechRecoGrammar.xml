<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpeechRecoGrammar" access="public" native="struct ISpeechRecoGrammar : IDispatch" uuid="b6d6f79f-2158-4e50-b5bc-9a9ccd852a09" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfoCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pctinfo">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="pctinfo">pctinfo</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="iTInfo">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="ppTInfo">
                    <type>ITypeInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, uint, uint, ITypeInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="iTInfo">iTInfo</param>, <param name="lcid">lcid</param>, <param name="ppTInfo">ppTInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetIDsOfNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="rgDispId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, Guid*, ushort**, uint, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>, <param name="lcid">lcid</param>, <param name="rgDispId">rgDispId</param>);
        </code>
                </body>
            </function>
            <function name="Invoke" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dispIdMember">
                    <type>int</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="wFlags">
                    <type>ushort</type>
                </param>
                <param name="pDispParams">
                    <type>DISPPARAMS*</type>
                </param>
                <param name="pVarResult">
                    <type>VARIANT*</type>
                </param>
                <param name="pExcepInfo">
                    <type>EXCEPINFO*</type>
                </param>
                <param name="puArgErr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, int, Guid*, uint, ushort, DISPPARAMS*, VARIANT*, EXCEPINFO*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="dispIdMember">dispIdMember</param>, <param name="riid">riid</param>, <param name="lcid">lcid</param>, <param name="wFlags">wFlags</param>, <param name="pDispParams">pDispParams</param>, <param name="pVarResult">pVarResult</param>, <param name="pExcepInfo">pExcepInfo</param>, <param name="puArgErr">puArgErr</param>);
        </code>
                </body>
            </function>
            <function name="get_Id" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Id">
                    <type>VARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="Id">Id</param>);
        </code>
                </body>
            </function>
            <function name="get_RecoContext" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="RecoContext">
                    <type>ISpeechRecoContext**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ISpeechRecoContext**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="RecoContext">RecoContext</param>);
        </code>
                </body>
            </function>
            <function name="put_State" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="State">
                    <type>SpeechGrammarState</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, SpeechGrammarState, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="State">State</param>);
        </code>
                </body>
            </function>
            <function name="get_State" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="State">
                    <type>SpeechGrammarState*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, SpeechGrammarState*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="State">State</param>);
        </code>
                </body>
            </function>
            <function name="get_Rules" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Rules">
                    <type>ISpeechGrammarRules**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ISpeechGrammarRules**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="Rules">Rules</param>);
        </code>
                </body>
            </function>
            <function name="Reset" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="NewLanguage">
                    <type>int</type>
                    <init>
                        <code>0
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, int, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="NewLanguage">NewLanguage</param>);
        </code>
                </body>
            </function>
            <function name="CmdLoadFromFile" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="FileName">
                    <type>ushort*</type>
                </param>
                <param name="LoadOption">
                    <type>SpeechLoadOption</type>
                    <init>
                        <code>SLOStatic
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ushort*, SpeechLoadOption, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="FileName">FileName</param>, <param name="LoadOption">LoadOption</param>);
        </code>
                </body>
            </function>
            <function name="CmdLoadFromObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ClassId">
                    <type>ushort*</type>
                </param>
                <param name="GrammarName">
                    <type>ushort*</type>
                </param>
                <param name="LoadOption">
                    <type>SpeechLoadOption</type>
                    <init>
                        <code>SLOStatic
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ushort*, ushort*, SpeechLoadOption, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="ClassId">ClassId</param>, <param name="GrammarName">GrammarName</param>, <param name="LoadOption">LoadOption</param>);
        </code>
                </body>
            </function>
            <function name="CmdLoadFromResource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="hModule">
                    <type>int</type>
                </param>
                <param name="ResourceName">
                    <type>VARIANT</type>
                </param>
                <param name="ResourceType">
                    <type>VARIANT</type>
                </param>
                <param name="LanguageId">
                    <type>int</type>
                </param>
                <param name="LoadOption">
                    <type>SpeechLoadOption</type>
                    <init>
                        <code>SLOStatic
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, int, VARIANT, VARIANT, int, SpeechLoadOption, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="hModule">hModule</param>, <param name="ResourceName">ResourceName</param>, <param name="ResourceType">ResourceType</param>, <param name="LanguageId">LanguageId</param>, <param name="LoadOption">LoadOption</param>);
        </code>
                </body>
            </function>
            <function name="CmdLoadFromMemory" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="GrammarData">
                    <type>VARIANT</type>
                </param>
                <param name="LoadOption">
                    <type>SpeechLoadOption</type>
                    <init>
                        <code>SLOStatic
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, VARIANT, SpeechLoadOption, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="GrammarData">GrammarData</param>, <param name="LoadOption">LoadOption</param>);
        </code>
                </body>
            </function>
            <function name="CmdLoadFromProprietaryGrammar" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ProprietaryGuid">
                    <type>ushort*</type>
                </param>
                <param name="ProprietaryString">
                    <type>ushort*</type>
                </param>
                <param name="ProprietaryData">
                    <type>VARIANT</type>
                </param>
                <param name="LoadOption">
                    <type>SpeechLoadOption</type>
                    <init>
                        <code>SLOStatic
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ushort*, ushort*, VARIANT, SpeechLoadOption, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="ProprietaryGuid">ProprietaryGuid</param>, <param name="ProprietaryString">ProprietaryString</param>, <param name="ProprietaryData">ProprietaryData</param>, <param name="LoadOption">LoadOption</param>);
        </code>
                </body>
            </function>
            <function name="CmdSetRuleState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Name">
                    <type>ushort*</type>
                </param>
                <param name="State">
                    <type>SpeechRuleState</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ushort*, SpeechRuleState, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="Name">Name</param>, <param name="State">State</param>);
        </code>
                </body>
            </function>
            <function name="CmdSetRuleIdState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="RuleId">
                    <type>int</type>
                </param>
                <param name="State">
                    <type>SpeechRuleState</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, int, SpeechRuleState, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="RuleId">RuleId</param>, <param name="State">State</param>);
        </code>
                </body>
            </function>
            <function name="DictationLoad" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="TopicName">
                    <type>ushort*</type>
                    <init>
                        <code>
                            <value></value>(ushort*)""
        </code>
                    </init>
                </param>
                <param name="LoadOption">
                    <type>SpeechLoadOption</type>
                    <init>
                        <code>SLOStatic
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ushort*, SpeechLoadOption, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="TopicName">TopicName</param>, <param name="LoadOption">LoadOption</param>);
        </code>
                </body>
            </function>
            <function name="DictationUnload" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="DictationSetState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="State">
                    <type>SpeechRuleState</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, SpeechRuleState, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="State">State</param>);
        </code>
                </body>
            </function>
            <function name="SetWordSequenceData" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Text">
                    <type>ushort*</type>
                </param>
                <param name="TextLength">
                    <type>int</type>
                </param>
                <param name="Info">
                    <type>ISpeechTextSelectionInformation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ushort*, int, ISpeechTextSelectionInformation*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="Text">Text</param>, <param name="TextLength">TextLength</param>, <param name="Info">Info</param>);
        </code>
                </body>
            </function>
            <function name="SetTextSelection" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Info">
                    <type>ISpeechTextSelectionInformation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ISpeechTextSelectionInformation*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="Info">Info</param>);
        </code>
                </body>
            </function>
            <function name="IsPronounceable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Word">
                    <type>ushort*</type>
                </param>
                <param name="WordPronounceable">
                    <type>SpeechWordPronounceable*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechRecoGrammar*, ushort*, SpeechWordPronounceable*, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(ISpeechRecoGrammar*)Unsafe.AsPointer(ref this)</param>, <param name="Word">Word</param>, <param name="WordPronounceable">WordPronounceable</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
