<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpPhoneConverter" access="public" native="struct ISpPhoneConverter : ISpObjectWithToken" uuid="8445c581-0cac-4a38-abfe-9b2ce2826455" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpPhoneConverter*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpPhoneConverter*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpPhoneConverter*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpPhoneConverter*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpPhoneConverter*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpPhoneConverter*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetObjectToken" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pToken">
                    <type>ISpObjectToken*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpPhoneConverter*, ISpObjectToken*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpPhoneConverter*)Unsafe.AsPointer(ref this)</param>, <param name="pToken">pToken</param>);
        </code>
                </body>
            </function>
            <function name="GetObjectToken" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppToken">
                    <type>ISpObjectToken**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpPhoneConverter*, ISpObjectToken**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpPhoneConverter*)Unsafe.AsPointer(ref this)</param>, <param name="ppToken">ppToken</param>);
        </code>
                </body>
            </function>
            <function name="PhoneToId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pszPhone">
                    <type>ushort*</type>
                </param>
                <param name="pId">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpPhoneConverter*, ushort*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpPhoneConverter*)Unsafe.AsPointer(ref this)</param>, <param name="pszPhone">pszPhone</param>, <param name="pId">pId</param>);
        </code>
                </body>
            </function>
            <function name="IdToPhone" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pId">
                    <type>ushort*</type>
                </param>
                <param name="pszPhone">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpPhoneConverter*, ushort*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpPhoneConverter*)Unsafe.AsPointer(ref this)</param>, <param name="pId">pId</param>, <param name="pszPhone">pszPhone</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
