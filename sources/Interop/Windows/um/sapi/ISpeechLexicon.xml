<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/sapi.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ISpeechLexicon" access="public" native="struct ISpeechLexicon : IDispatch" uuid="3da7627a-c7ae-4b23-8708-638c50362c25" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfoCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pctinfo">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="pctinfo">pctinfo</param>);
        </code>
                </body>
            </function>
            <function name="GetTypeInfo" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="iTInfo">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="ppTInfo">
                    <type>ITypeInfo**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, uint, uint, ITypeInfo**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="iTInfo">iTInfo</param>, <param name="lcid">lcid</param>, <param name="ppTInfo">ppTInfo</param>);
        </code>
                </body>
            </function>
            <function name="GetIDsOfNames" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="rgszNames">
                    <type>ushort**</type>
                </param>
                <param name="cNames">
                    <type>uint</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="rgDispId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, Guid*, ushort**, uint, uint, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="rgszNames">rgszNames</param>, <param name="cNames">cNames</param>, <param name="lcid">lcid</param>, <param name="rgDispId">rgDispId</param>);
        </code>
                </body>
            </function>
            <function name="Invoke" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dispIdMember">
                    <type>int</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="lcid">
                    <type>uint</type>
                </param>
                <param name="wFlags">
                    <type>ushort</type>
                </param>
                <param name="pDispParams">
                    <type>DISPPARAMS*</type>
                </param>
                <param name="pVarResult">
                    <type>VARIANT*</type>
                </param>
                <param name="pExcepInfo">
                    <type>EXCEPINFO*</type>
                </param>
                <param name="puArgErr">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, int, Guid*, uint, ushort, DISPPARAMS*, VARIANT*, EXCEPINFO*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="dispIdMember">dispIdMember</param>, <param name="riid">riid</param>, <param name="lcid">lcid</param>, <param name="wFlags">wFlags</param>, <param name="pDispParams">pDispParams</param>, <param name="pVarResult">pVarResult</param>, <param name="pExcepInfo">pExcepInfo</param>, <param name="puArgErr">puArgErr</param>);
        </code>
                </body>
            </function>
            <function name="get_GenerationId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="GenerationId">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="GenerationId">GenerationId</param>);
        </code>
                </body>
            </function>
            <function name="GetWords" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="Flags">
                    <type>SpeechLexiconType</type>
                </param>
                <param name="GenerationID">
                    <type>int*</type>
                </param>
                <param name="Words">
                    <type>ISpeechLexiconWords**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, SpeechLexiconType, int*, ISpeechLexiconWords**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="Flags">Flags</param>, <param name="GenerationID">GenerationID</param>, <param name="Words">Words</param>);
        </code>
                </body>
            </function>
            <function name="AddPronunciation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrWord">
                    <type>ushort*</type>
                </param>
                <param name="LangId">
                    <type>int</type>
                </param>
                <param name="PartOfSpeech">
                    <type>SpeechPartOfSpeech</type>
                    <init>
                        <code>SPSUnknown
        </code>
                    </init>
                </param>
                <param name="bstrPronunciation">
                    <type>ushort*</type>
                    <init>
                        <code>
                            <value></value>(ushort*)""
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, ushort*, int, SpeechPartOfSpeech, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="bstrWord">bstrWord</param>, <param name="LangId">LangId</param>, <param name="PartOfSpeech">PartOfSpeech</param>, <param name="bstrPronunciation">bstrPronunciation</param>);
        </code>
                </body>
            </function>
            <function name="AddPronunciationByPhoneIds" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrWord">
                    <type>ushort*</type>
                </param>
                <param name="LangId">
                    <type>int</type>
                </param>
                <param name="PartOfSpeech">
                    <type>SpeechPartOfSpeech</type>
                    <init>
                        <code>SPSUnknown
        </code>
                    </init>
                </param>
                <param name="PhoneIds">
                    <type>VARIANT*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, ushort*, int, SpeechPartOfSpeech, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="bstrWord">bstrWord</param>, <param name="LangId">LangId</param>, <param name="PartOfSpeech">PartOfSpeech</param>, <param name="PhoneIds">PhoneIds</param>);
        </code>
                </body>
            </function>
            <function name="RemovePronunciation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrWord">
                    <type>ushort*</type>
                </param>
                <param name="LangId">
                    <type>int</type>
                </param>
                <param name="PartOfSpeech">
                    <type>SpeechPartOfSpeech</type>
                    <init>
                        <code>SPSUnknown
        </code>
                    </init>
                </param>
                <param name="bstrPronunciation">
                    <type>ushort*</type>
                    <init>
                        <code>
                            <value></value>(ushort*)""
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, ushort*, int, SpeechPartOfSpeech, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="bstrWord">bstrWord</param>, <param name="LangId">LangId</param>, <param name="PartOfSpeech">PartOfSpeech</param>, <param name="bstrPronunciation">bstrPronunciation</param>);
        </code>
                </body>
            </function>
            <function name="RemovePronunciationByPhoneIds" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrWord">
                    <type>ushort*</type>
                </param>
                <param name="LangId">
                    <type>int</type>
                </param>
                <param name="PartOfSpeech">
                    <type>SpeechPartOfSpeech</type>
                    <init>
                        <code>SPSUnknown
        </code>
                    </init>
                </param>
                <param name="PhoneIds">
                    <type>VARIANT*</type>
                    <init>
                        <code>null
        </code>
                    </init>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, ushort*, int, SpeechPartOfSpeech, VARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="bstrWord">bstrWord</param>, <param name="LangId">LangId</param>, <param name="PartOfSpeech">PartOfSpeech</param>, <param name="PhoneIds">PhoneIds</param>);
        </code>
                </body>
            </function>
            <function name="GetPronunciations" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrWord">
                    <type>ushort*</type>
                </param>
                <param name="LangId">
                    <type>int</type>
                </param>
                <param name="TypeFlags">
                    <type>SpeechLexiconType</type>
                </param>
                <param name="ppPronunciations">
                    <type>ISpeechLexiconPronunciations**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, ushort*, int, SpeechLexiconType, ISpeechLexiconPronunciations**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="bstrWord">bstrWord</param>, <param name="LangId">LangId</param>, <param name="TypeFlags">TypeFlags</param>, <param name="ppPronunciations">ppPronunciations</param>);
        </code>
                </body>
            </function>
            <function name="GetGenerationChange" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="GenerationID">
                    <type>int*</type>
                </param>
                <param name="ppWords">
                    <type>ISpeechLexiconWords**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ISpeechLexicon*, int*, ISpeechLexiconWords**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(ISpeechLexicon*)Unsafe.AsPointer(ref this)</param>, <param name="GenerationID">GenerationID</param>, <param name="ppWords">ppWords</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
