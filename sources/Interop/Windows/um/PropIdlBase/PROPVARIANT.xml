<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/PropIdlBase.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="PROPVARIANT" access="public" unsafe="true">
            <field name="Anonymous" access="public">
                <type native="tagPROPVARIANT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/PropIdlBase.h:295:3)">_Anonymous_e__Union</type>
            </field>
            <field name="vt" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.vt, 1));
        </code>
                </get>
            </field>
            <field name="wReserved1" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.wReserved1, 1));
        </code>
                </get>
            </field>
            <field name="wReserved2" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.wReserved2, 1));
        </code>
                </get>
            </field>
            <field name="wReserved3" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.wReserved3, 1));
        </code>
                </get>
            </field>
            <field name="cVal" access="public">
                <type native="">ref sbyte</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cVal, 1));
        </code>
                </get>
            </field>
            <field name="bVal" access="public">
                <type native="">ref byte</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.bVal, 1));
        </code>
                </get>
            </field>
            <field name="iVal" access="public">
                <type native="">ref short</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.iVal, 1));
        </code>
                </get>
            </field>
            <field name="uiVal" access="public">
                <type native="">ref ushort</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.uiVal, 1));
        </code>
                </get>
            </field>
            <field name="lVal" access="public">
                <type native="">ref int</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.lVal, 1));
        </code>
                </get>
            </field>
            <field name="ulVal" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.ulVal, 1));
        </code>
                </get>
            </field>
            <field name="intVal" access="public">
                <type native="">ref int</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.intVal, 1));
        </code>
                </get>
            </field>
            <field name="uintVal" access="public">
                <type native="">ref uint</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.uintVal, 1));
        </code>
                </get>
            </field>
            <field name="hVal" access="public">
                <type native="">ref LARGE_INTEGER</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.hVal, 1));
        </code>
                </get>
            </field>
            <field name="uhVal" access="public">
                <type native="">ref ULARGE_INTEGER</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.uhVal, 1));
        </code>
                </get>
            </field>
            <field name="fltVal" access="public">
                <type native="">ref float</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.fltVal, 1));
        </code>
                </get>
            </field>
            <field name="dblVal" access="public">
                <type native="">ref double</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.dblVal, 1));
        </code>
                </get>
            </field>
            <field name="boolVal" access="public">
                <type native="">ref short</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.boolVal, 1));
        </code>
                </get>
            </field>
            <field name="__OBSOLETE__VARIANT_BOOL" access="public">
                <type native="">ref short</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.__OBSOLETE__VARIANT_BOOL, 1));
        </code>
                </get>
            </field>
            <field name="scode" access="public">
                <type native="">ref int</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.scode, 1));
        </code>
                </get>
            </field>
            <field name="cyVal" access="public">
                <type native="">ref CY</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cyVal, 1));
        </code>
                </get>
            </field>
            <field name="date" access="public">
                <type native="">ref double</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.date, 1));
        </code>
                </get>
            </field>
            <field name="filetime" access="public">
                <type native="">ref FILETIME</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.filetime, 1));
        </code>
                </get>
            </field>
            <field name="puuid" access="public">
                <type native="">ref Guid*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;puuid;
        }
        </code>
                </get>
            </field>
            <field name="pclipdata" access="public">
                <type native="">ref CLIPDATA*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pclipdata;
        }
        </code>
                </get>
            </field>
            <field name="bstrVal" access="public">
                <type native="">ref ushort*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;bstrVal;
        }
        </code>
                </get>
            </field>
            <field name="bstrblobVal" access="public">
                <type native="">ref BSTRBLOB</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.bstrblobVal, 1));
        </code>
                </get>
            </field>
            <field name="blob" access="public">
                <type native="">ref BLOB</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.blob, 1));
        </code>
                </get>
            </field>
            <field name="pszVal" access="public">
                <type native="">ref sbyte*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pszVal;
        }
        </code>
                </get>
            </field>
            <field name="pwszVal" access="public">
                <type native="">ref ushort*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pwszVal;
        }
        </code>
                </get>
            </field>
            <field name="punkVal" access="public">
                <type native="">ref IUnknown*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;punkVal;
        }
        </code>
                </get>
            </field>
            <field name="pdispVal" access="public">
                <type native="">ref IDispatch*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pdispVal;
        }
        </code>
                </get>
            </field>
            <field name="pStream" access="public">
                <type native="">ref IStream*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pStream;
        }
        </code>
                </get>
            </field>
            <field name="pStorage" access="public">
                <type native="">ref IStorage*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pStorage;
        }
        </code>
                </get>
            </field>
            <field name="pVersionedStream" access="public">
                <type native="">ref VERSIONEDSTREAM*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pVersionedStream;
        }
        </code>
                </get>
            </field>
            <field name="parray" access="public">
                <type native="">ref SAFEARRAY*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;parray;
        }
        </code>
                </get>
            </field>
            <field name="cac" access="public">
                <type native="">ref CAC</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cac, 1));
        </code>
                </get>
            </field>
            <field name="caub" access="public">
                <type native="">ref CAUB</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.caub, 1));
        </code>
                </get>
            </field>
            <field name="cai" access="public">
                <type native="">ref CAI</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cai, 1));
        </code>
                </get>
            </field>
            <field name="caui" access="public">
                <type native="">ref CAUI</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.caui, 1));
        </code>
                </get>
            </field>
            <field name="cal" access="public">
                <type native="">ref CAL</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cal, 1));
        </code>
                </get>
            </field>
            <field name="caul" access="public">
                <type native="">ref CAUL</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.caul, 1));
        </code>
                </get>
            </field>
            <field name="cah" access="public">
                <type native="">ref CAH</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cah, 1));
        </code>
                </get>
            </field>
            <field name="cauh" access="public">
                <type native="">ref CAUH</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cauh, 1));
        </code>
                </get>
            </field>
            <field name="caflt" access="public">
                <type native="">ref CAFLT</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.caflt, 1));
        </code>
                </get>
            </field>
            <field name="cadbl" access="public">
                <type native="">ref CADBL</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cadbl, 1));
        </code>
                </get>
            </field>
            <field name="cabool" access="public">
                <type native="">ref CABOOL</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cabool, 1));
        </code>
                </get>
            </field>
            <field name="cascode" access="public">
                <type native="">ref CASCODE</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cascode, 1));
        </code>
                </get>
            </field>
            <field name="cacy" access="public">
                <type native="">ref CACY</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cacy, 1));
        </code>
                </get>
            </field>
            <field name="cadate" access="public">
                <type native="">ref CADATE</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cadate, 1));
        </code>
                </get>
            </field>
            <field name="cafiletime" access="public">
                <type native="">ref CAFILETIME</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cafiletime, 1));
        </code>
                </get>
            </field>
            <field name="cauuid" access="public">
                <type native="">ref CACLSID</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cauuid, 1));
        </code>
                </get>
            </field>
            <field name="caclipdata" access="public">
                <type native="">ref CACLIPDATA</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.caclipdata, 1));
        </code>
                </get>
            </field>
            <field name="cabstr" access="public">
                <type native="">ref CABSTR</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cabstr, 1));
        </code>
                </get>
            </field>
            <field name="cabstrblob" access="public">
                <type native="">ref CABSTRBLOB</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.cabstrblob, 1));
        </code>
                </get>
            </field>
            <field name="calpstr" access="public">
                <type native="">ref CALPSTR</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.calpstr, 1));
        </code>
                </get>
            </field>
            <field name="calpwstr" access="public">
                <type native="">ref CALPWSTR</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.calpwstr, 1));
        </code>
                </get>
            </field>
            <field name="capropvar" access="public">
                <type native="">ref CAPROPVARIANT</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.Anonymous.Anonymous.capropvar, 1));
        </code>
                </get>
            </field>
            <field name="pcVal" access="public">
                <type native="">ref sbyte*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pcVal;
        }
        </code>
                </get>
            </field>
            <field name="pbVal" access="public">
                <type native="">ref byte*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pbVal;
        }
        </code>
                </get>
            </field>
            <field name="piVal" access="public">
                <type native="">ref short*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;piVal;
        }
        </code>
                </get>
            </field>
            <field name="puiVal" access="public">
                <type native="">ref ushort*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;puiVal;
        }
        </code>
                </get>
            </field>
            <field name="plVal" access="public">
                <type native="">ref int*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;plVal;
        }
        </code>
                </get>
            </field>
            <field name="pulVal" access="public">
                <type native="">ref uint*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pulVal;
        }
        </code>
                </get>
            </field>
            <field name="pintVal" access="public">
                <type native="">ref int*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pintVal;
        }
        </code>
                </get>
            </field>
            <field name="puintVal" access="public">
                <type native="">ref uint*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;puintVal;
        }
        </code>
                </get>
            </field>
            <field name="pfltVal" access="public">
                <type native="">ref float*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pfltVal;
        }
        </code>
                </get>
            </field>
            <field name="pdblVal" access="public">
                <type native="">ref double*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pdblVal;
        }
        </code>
                </get>
            </field>
            <field name="pboolVal" access="public">
                <type native="">ref short*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pboolVal;
        }
        </code>
                </get>
            </field>
            <field name="pdecVal" access="public">
                <type native="">ref DECIMAL*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pdecVal;
        }
        </code>
                </get>
            </field>
            <field name="pscode" access="public">
                <type native="">ref int*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pscode;
        }
        </code>
                </get>
            </field>
            <field name="pcyVal" access="public">
                <type native="">ref CY*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pcyVal;
        }
        </code>
                </get>
            </field>
            <field name="pdate" access="public">
                <type native="">ref double*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pdate;
        }
        </code>
                </get>
            </field>
            <field name="pbstrVal" access="public">
                <type native="">ref ushort**</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pbstrVal;
        }
        </code>
                </get>
            </field>
            <field name="ppunkVal" access="public">
                <type native="">ref IUnknown**</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;ppunkVal;
        }
        </code>
                </get>
            </field>
            <field name="ppdispVal" access="public">
                <type native="">ref IDispatch**</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;ppdispVal;
        }
        </code>
                </get>
            </field>
            <field name="pparray" access="public">
                <type native="">ref SAFEARRAY**</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pparray;
        }
        </code>
                </get>
            </field>
            <field name="pvarVal" access="public">
                <type native="">ref PROPVARIANT*</type>
                <get inlining="aggressive">
                    <code>fixed (_Anonymous_e__Union._Anonymous_e__Struct._Anonymous_e__Union* pField = &amp;Anonymous.Anonymous.Anonymous)
        {
            return ref pField-&gt;pvarVal;
        }
        </code>
                </get>
            </field>
            <field name="decVal" access="public">
                <type native="">ref DECIMAL</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.decVal, 1));
        </code>
                </get>
            </field>
            <struct name="_Anonymous_e__Union" access="public" unsafe="true" layout="Explicit">
                <field name="Anonymous" access="public" offset="0">
                    <type native="tagPROPVARIANT::(anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/PropIdlBase.h:297:1)">_Anonymous_e__Struct</type>
                </field>
                <field name="decVal" access="public" offset="0">
                    <type native="">DECIMAL</type>
                </field>
                <struct name="_Anonymous_e__Struct" access="public" unsafe="true">
                    <field name="vt" access="public">
                        <type native="VARTYPE">ushort</type>
                    </field>
                    <field name="wReserved1" access="public">
                        <type native="PROPVAR_PAD1">ushort</type>
                    </field>
                    <field name="wReserved2" access="public">
                        <type native="PROPVAR_PAD2">ushort</type>
                    </field>
                    <field name="wReserved3" access="public">
                        <type native="PROPVAR_PAD3">ushort</type>
                    </field>
                    <field name="Anonymous" access="public">
                        <type native="tagPROPVARIANT::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/PropIdlBase.h:303:43)">_Anonymous_e__Union</type>
                    </field>
                    <struct name="_Anonymous_e__Union" access="public" unsafe="true" layout="Explicit">
                        <field name="cVal" access="public" offset="0">
                            <type native="CHAR">sbyte</type>
                        </field>
                        <field name="bVal" access="public" offset="0">
                            <type native="UCHAR">byte</type>
                        </field>
                        <field name="iVal" access="public" offset="0">
                            <type native="SHORT">short</type>
                        </field>
                        <field name="uiVal" access="public" offset="0">
                            <type native="USHORT">ushort</type>
                        </field>
                        <field name="lVal" access="public" offset="0">
                            <type native="LONG">int</type>
                        </field>
                        <field name="ulVal" access="public" offset="0">
                            <type native="ULONG">uint</type>
                        </field>
                        <field name="intVal" access="public" offset="0">
                            <type native="INT">int</type>
                        </field>
                        <field name="uintVal" access="public" offset="0">
                            <type native="UINT">uint</type>
                        </field>
                        <field name="hVal" access="public" offset="0">
                            <type native="">LARGE_INTEGER</type>
                        </field>
                        <field name="uhVal" access="public" offset="0">
                            <type native="">ULARGE_INTEGER</type>
                        </field>
                        <field name="fltVal" access="public" offset="0">
                            <type native="FLOAT">float</type>
                        </field>
                        <field name="dblVal" access="public" offset="0">
                            <type native="DOUBLE">double</type>
                        </field>
                        <field name="boolVal" access="public" offset="0">
                            <type native="VARIANT_BOOL">short</type>
                        </field>
                        <field name="__OBSOLETE__VARIANT_BOOL" access="public" offset="0">
                            <type native="VARIANT_BOOL">short</type>
                        </field>
                        <field name="scode" access="public" offset="0">
                            <type native="SCODE">int</type>
                        </field>
                        <field name="cyVal" access="public" offset="0">
                            <type native="">CY</type>
                        </field>
                        <field name="date" access="public" offset="0">
                            <type native="DATE">double</type>
                        </field>
                        <field name="filetime" access="public" offset="0">
                            <type native="">FILETIME</type>
                        </field>
                        <field name="puuid" access="public" offset="0">
                            <type native="CLSID *">Guid*</type>
                        </field>
                        <field name="pclipdata" access="public" offset="0">
                            <type native="CLIPDATA *">CLIPDATA*</type>
                        </field>
                        <field name="bstrVal" access="public" offset="0">
                            <type native="BSTR">ushort*</type>
                        </field>
                        <field name="bstrblobVal" access="public" offset="0">
                            <type native="">BSTRBLOB</type>
                        </field>
                        <field name="blob" access="public" offset="0">
                            <type native="">BLOB</type>
                        </field>
                        <field name="pszVal" access="public" offset="0">
                            <type native="LPSTR">sbyte*</type>
                        </field>
                        <field name="pwszVal" access="public" offset="0">
                            <type native="LPWSTR">ushort*</type>
                        </field>
                        <field name="punkVal" access="public" offset="0">
                            <type native="IUnknown *">IUnknown*</type>
                        </field>
                        <field name="pdispVal" access="public" offset="0">
                            <type native="IDispatch *">IDispatch*</type>
                        </field>
                        <field name="pStream" access="public" offset="0">
                            <type native="IStream *">IStream*</type>
                        </field>
                        <field name="pStorage" access="public" offset="0">
                            <type native="IStorage *">IStorage*</type>
                        </field>
                        <field name="pVersionedStream" access="public" offset="0">
                            <type native="LPVERSIONEDSTREAM">VERSIONEDSTREAM*</type>
                        </field>
                        <field name="parray" access="public" offset="0">
                            <type native="LPSAFEARRAY">SAFEARRAY*</type>
                        </field>
                        <field name="cac" access="public" offset="0">
                            <type native="">CAC</type>
                        </field>
                        <field name="caub" access="public" offset="0">
                            <type native="">CAUB</type>
                        </field>
                        <field name="cai" access="public" offset="0">
                            <type native="">CAI</type>
                        </field>
                        <field name="caui" access="public" offset="0">
                            <type native="">CAUI</type>
                        </field>
                        <field name="cal" access="public" offset="0">
                            <type native="">CAL</type>
                        </field>
                        <field name="caul" access="public" offset="0">
                            <type native="">CAUL</type>
                        </field>
                        <field name="cah" access="public" offset="0">
                            <type native="">CAH</type>
                        </field>
                        <field name="cauh" access="public" offset="0">
                            <type native="">CAUH</type>
                        </field>
                        <field name="caflt" access="public" offset="0">
                            <type native="">CAFLT</type>
                        </field>
                        <field name="cadbl" access="public" offset="0">
                            <type native="">CADBL</type>
                        </field>
                        <field name="cabool" access="public" offset="0">
                            <type native="">CABOOL</type>
                        </field>
                        <field name="cascode" access="public" offset="0">
                            <type native="">CASCODE</type>
                        </field>
                        <field name="cacy" access="public" offset="0">
                            <type native="">CACY</type>
                        </field>
                        <field name="cadate" access="public" offset="0">
                            <type native="">CADATE</type>
                        </field>
                        <field name="cafiletime" access="public" offset="0">
                            <type native="">CAFILETIME</type>
                        </field>
                        <field name="cauuid" access="public" offset="0">
                            <type native="">CACLSID</type>
                        </field>
                        <field name="caclipdata" access="public" offset="0">
                            <type native="">CACLIPDATA</type>
                        </field>
                        <field name="cabstr" access="public" offset="0">
                            <type native="">CABSTR</type>
                        </field>
                        <field name="cabstrblob" access="public" offset="0">
                            <type native="">CABSTRBLOB</type>
                        </field>
                        <field name="calpstr" access="public" offset="0">
                            <type native="">CALPSTR</type>
                        </field>
                        <field name="calpwstr" access="public" offset="0">
                            <type native="">CALPWSTR</type>
                        </field>
                        <field name="capropvar" access="public" offset="0">
                            <type native="">CAPROPVARIANT</type>
                        </field>
                        <field name="pcVal" access="public" offset="0">
                            <type native="CHAR *">sbyte*</type>
                        </field>
                        <field name="pbVal" access="public" offset="0">
                            <type native="UCHAR *">byte*</type>
                        </field>
                        <field name="piVal" access="public" offset="0">
                            <type native="SHORT *">short*</type>
                        </field>
                        <field name="puiVal" access="public" offset="0">
                            <type native="USHORT *">ushort*</type>
                        </field>
                        <field name="plVal" access="public" offset="0">
                            <type native="LONG *">int*</type>
                        </field>
                        <field name="pulVal" access="public" offset="0">
                            <type native="ULONG *">uint*</type>
                        </field>
                        <field name="pintVal" access="public" offset="0">
                            <type native="INT *">int*</type>
                        </field>
                        <field name="puintVal" access="public" offset="0">
                            <type native="UINT *">uint*</type>
                        </field>
                        <field name="pfltVal" access="public" offset="0">
                            <type native="FLOAT *">float*</type>
                        </field>
                        <field name="pdblVal" access="public" offset="0">
                            <type native="DOUBLE *">double*</type>
                        </field>
                        <field name="pboolVal" access="public" offset="0">
                            <type native="VARIANT_BOOL *">short*</type>
                        </field>
                        <field name="pdecVal" access="public" offset="0">
                            <type native="DECIMAL *">DECIMAL*</type>
                        </field>
                        <field name="pscode" access="public" offset="0">
                            <type native="SCODE *">int*</type>
                        </field>
                        <field name="pcyVal" access="public" offset="0">
                            <type native="CY *">CY*</type>
                        </field>
                        <field name="pdate" access="public" offset="0">
                            <type native="DATE *">double*</type>
                        </field>
                        <field name="pbstrVal" access="public" offset="0">
                            <type native="BSTR *">ushort**</type>
                        </field>
                        <field name="ppunkVal" access="public" offset="0">
                            <type native="IUnknown **">IUnknown**</type>
                        </field>
                        <field name="ppdispVal" access="public" offset="0">
                            <type native="IDispatch **">IDispatch**</type>
                        </field>
                        <field name="pparray" access="public" offset="0">
                            <type native="LPSAFEARRAY *">SAFEARRAY**</type>
                        </field>
                        <field name="pvarVal" access="public" offset="0">
                            <type native="PROPVARIANT *">PROPVARIANT*</type>
                        </field>
                    </struct>
                </struct>
            </struct>
        </struct>
    </namespace>
</bindings>
