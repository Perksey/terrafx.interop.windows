<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfmediaengine.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFMediaEngineSupportsSourceTransfer" access="public" native="struct IMFMediaEngineSupportsSourceTransfer : IUnknown" uuid="a724b056-1b2e-4642-a6f3-db9420c52908" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaEngineSupportsSourceTransfer*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFMediaEngineSupportsSourceTransfer*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaEngineSupportsSourceTransfer*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFMediaEngineSupportsSourceTransfer*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaEngineSupportsSourceTransfer*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFMediaEngineSupportsSourceTransfer*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="ShouldTransferSource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfShouldTransfer">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaEngineSupportsSourceTransfer*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFMediaEngineSupportsSourceTransfer*)Unsafe.AsPointer(ref this)</param>, <param name="pfShouldTransfer">pfShouldTransfer</param>);
        </code>
                </body>
            </function>
            <function name="DetachMediaSource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppByteStream">
                    <type>IMFByteStream**</type>
                </param>
                <param name="ppMediaSource">
                    <type>IMFMediaSource**</type>
                </param>
                <param name="ppMSE">
                    <type>IMFMediaSourceExtension**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaEngineSupportsSourceTransfer*, IMFByteStream**, IMFMediaSource**, IMFMediaSourceExtension**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFMediaEngineSupportsSourceTransfer*)Unsafe.AsPointer(ref this)</param>, <param name="ppByteStream">ppByteStream</param>, <param name="ppMediaSource">ppMediaSource</param>, <param name="ppMSE">ppMSE</param>);
        </code>
                </body>
            </function>
            <function name="AttachMediaSource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pByteStream">
                    <type>IMFByteStream*</type>
                </param>
                <param name="pMediaSource">
                    <type>IMFMediaSource*</type>
                </param>
                <param name="pMSE">
                    <type>IMFMediaSourceExtension*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaEngineSupportsSourceTransfer*, IMFByteStream*, IMFMediaSource*, IMFMediaSourceExtension*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFMediaEngineSupportsSourceTransfer*)Unsafe.AsPointer(ref this)</param>, <param name="pByteStream">pByteStream</param>, <param name="pMediaSource">pMediaSource</param>, <param name="pMSE">pMSE</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
