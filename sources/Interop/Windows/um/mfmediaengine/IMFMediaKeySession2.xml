<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfmediaengine.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFMediaKeySession2" access="public" native="struct IMFMediaKeySession2 : IMFMediaKeySession" uuid="e9707e05-6d55-4636-b185-3de21210bd75" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetError" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="code">
                    <type>ushort*</type>
                </param>
                <param name="systemCode">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="code">code</param>, <param name="systemCode">systemCode</param>);
        </code>
                </body>
            </function>
            <function name="get_KeySystem" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="keySystem">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="keySystem">keySystem</param>);
        </code>
                </body>
            </function>
            <function name="get_SessionId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="sessionId">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="sessionId">sessionId</param>);
        </code>
                </body>
            </function>
            <function name="Update" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="key">
                    <type>byte*</type>
                </param>
                <param name="cb">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, byte*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="key">key</param>, <param name="cb">cb</param>);
        </code>
                </body>
            </function>
            <function name="Close" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="get_KeyStatuses" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pKeyStatusesArray">
                    <type>MFMediaKeyStatus**</type>
                </param>
                <param name="puSize">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, MFMediaKeyStatus**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="pKeyStatusesArray">pKeyStatusesArray</param>, <param name="puSize">puSize</param>);
        </code>
                </body>
            </function>
            <function name="Load" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="bstrSessionId">
                    <type>ushort*</type>
                </param>
                <param name="pfLoaded">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, ushort*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="bstrSessionId">bstrSessionId</param>, <param name="pfLoaded">pfLoaded</param>);
        </code>
                </body>
            </function>
            <function name="GenerateRequest" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="initDataType">
                    <type>ushort*</type>
                </param>
                <param name="pbInitData">
                    <type>byte*</type>
                </param>
                <param name="cb">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, ushort*, byte*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="initDataType">initDataType</param>, <param name="pbInitData">pbInitData</param>, <param name="cb">cb</param>);
        </code>
                </body>
            </function>
            <function name="get_Expiration" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dblExpiration">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>, <param name="dblExpiration">dblExpiration</param>);
        </code>
                </body>
            </function>
            <function name="Remove" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Shutdown" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaKeySession2*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IMFMediaKeySession2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
