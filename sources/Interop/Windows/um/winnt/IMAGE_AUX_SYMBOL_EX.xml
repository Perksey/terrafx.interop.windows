<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/winnt.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMAGE_AUX_SYMBOL_EX" access="public" unsafe="true" layout="Explicit">
            <field name="Sym" access="public" offset="0">
                <type native="struct (anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/winnt.h:17616:5)">_Sym_e__Struct</type>
            </field>
            <field name="File" access="public" offset="0">
                <type native="struct (anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/winnt.h:17621:5)">_File_e__Struct</type>
            </field>
            <field name="Section" access="public" offset="0">
                <type native="struct (anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/winnt.h:17624:5)">_Section_e__Struct</type>
            </field>
            <field name="Anonymous" access="public" offset="0">
                <type native="_IMAGE_AUX_SYMBOL_EX::(anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/winnt.h:17635:5)">_Anonymous_e__Struct</type>
            </field>
            <field name="TokenDef" access="public">
                <type native="">ref IMAGE_AUX_SYMBOL_TOKEN_DEF</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous.TokenDef, 1));
        </code>
                </get>
            </field>
            <field name="rgbReserved" access="public">
                <type native="">Span&lt;byte&gt;</type>
                <get inlining="aggressive">
                    <code>return MemoryMarshal.CreateSpan(ref Anonymous.rgbReserved[0], 2);
        </code>
                </get>
            </field>
            <field name="CRC" access="public" offset="0">
                <type native="struct (anonymous struct at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/winnt.h:17639:5)">_CRC_e__Struct</type>
            </field>
            <struct name="_Sym_e__Struct" access="public" unsafe="true" layout="Sequential" pack="2">
                <field name="WeakDefaultSymIndex" access="public">
                    <type native="DWORD">uint</type>
                </field>
                <field name="WeakSearchType" access="public">
                    <type native="DWORD">uint</type>
                </field>
                <field name="rgbReserved" access="public">
                    <type native="BYTE [12]" count="12" fixed="_rgbReserved_e__FixedBuffer">byte</type>
                </field>
            </struct>
            <struct name="_File_e__Struct" access="public" unsafe="true">
                <field name="Name" access="public">
                    <type native="BYTE [20]" count="20" fixed="_Name_e__FixedBuffer">byte</type>
                </field>
            </struct>
            <struct name="_Section_e__Struct" access="public" unsafe="true" layout="Sequential" pack="2">
                <field name="Length" access="public">
                    <type native="DWORD">uint</type>
                </field>
                <field name="NumberOfRelocations" access="public">
                    <type native="WORD">ushort</type>
                </field>
                <field name="NumberOfLinenumbers" access="public">
                    <type native="WORD">ushort</type>
                </field>
                <field name="CheckSum" access="public">
                    <type native="DWORD">uint</type>
                </field>
                <field name="Number" access="public">
                    <type native="SHORT">short</type>
                </field>
                <field name="Selection" access="public">
                    <type native="BYTE">byte</type>
                </field>
                <field name="bReserved" access="public">
                    <type native="BYTE">byte</type>
                </field>
                <field name="HighNumber" access="public">
                    <type native="SHORT">short</type>
                </field>
                <field name="rgbReserved" access="public">
                    <type native="BYTE [2]" count="2" fixed="_rgbReserved_e__FixedBuffer">byte</type>
                </field>
            </struct>
            <struct name="_Anonymous_e__Struct" access="public" unsafe="true">
                <field name="TokenDef" access="public">
                    <type native="">IMAGE_AUX_SYMBOL_TOKEN_DEF</type>
                </field>
                <field name="rgbReserved" access="public">
                    <type native="BYTE [2]" count="2" fixed="_rgbReserved_e__FixedBuffer">byte</type>
                </field>
            </struct>
            <struct name="_CRC_e__Struct" access="public" unsafe="true" layout="Sequential" pack="2">
                <field name="crc" access="public">
                    <type native="DWORD">uint</type>
                </field>
                <field name="rgbReserved" access="public">
                    <type native="BYTE [16]" count="16" fixed="_rgbReserved_e__FixedBuffer">byte</type>
                </field>
            </struct>
        </struct>
    </namespace>
</bindings>
