<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/winnt.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="SE_TOKEN_USER" access="public" unsafe="true">
            <field name="Anonymous1" access="public">
                <type native="_SE_TOKEN_USER::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/winnt.h:10851:5)">_Anonymous1_e__Union</type>
            </field>
            <field name="TokenUser" access="public">
                <type native="">ref TOKEN_USER</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.TokenUser, 1));
        </code>
                </get>
            </field>
            <field name="User" access="public">
                <type native="">ref SID_AND_ATTRIBUTES</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous1.User, 1));
        </code>
                </get>
            </field>
            <field name="Anonymous2" access="public">
                <type native="_SE_TOKEN_USER::(anonymous union at C:/Program Files (x86)/Windows Kits/10/Include/10.0.19041.0/um/winnt.h:10856:5)">_Anonymous2_e__Union</type>
            </field>
            <field name="Sid" access="public">
                <type native="">ref SID</type>
                <get inlining="aggressive">
                    <code>return ref MemoryMarshal.GetReference(MemoryMarshal.CreateSpan(ref Anonymous2.Sid, 1));
        </code>
                </get>
            </field>
            <field name="Buffer" access="public">
                <type native="">Span&lt;byte&gt;</type>
                <get inlining="aggressive">
                    <code>return MemoryMarshal.CreateSpan(ref Anonymous2.Buffer[0], 68);
        </code>
                </get>
            </field>
            <struct name="_Anonymous1_e__Union" access="public" layout="Explicit">
                <field name="TokenUser" access="public" offset="0">
                    <type native="">TOKEN_USER</type>
                </field>
                <field name="User" access="public" offset="0">
                    <type native="">SID_AND_ATTRIBUTES</type>
                </field>
            </struct>
            <struct name="_Anonymous2_e__Union" access="public" unsafe="true" layout="Explicit">
                <field name="Sid" access="public" offset="0">
                    <type native="">SID</type>
                </field>
                <field name="Buffer" access="public" offset="0">
                    <type native="BYTE [68]" count="68" fixed="_Buffer_e__FixedBuffer">byte</type>
                </field>
            </struct>
        </struct>
    </namespace>
</bindings>
