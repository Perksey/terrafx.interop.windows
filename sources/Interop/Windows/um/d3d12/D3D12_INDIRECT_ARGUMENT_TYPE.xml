<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d3d12.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <enumeration name="D3D12_INDIRECT_ARGUMENT_TYPE" access="public">
            <type>int</type>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_DRAW" access="">
                <type primitive="False">int</type>
                <value>
                    <code>0
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_DRAW + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW + 1)
        </code>
                </value>
            </enumerator>
            <enumerator name="D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_MESH" access="">
                <type primitive="False">int</type>
                <value>
                    <code>(D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS + 1)
        </code>
                </value>
            </enumerator>
        </enumeration>
    </namespace>
</bindings>
