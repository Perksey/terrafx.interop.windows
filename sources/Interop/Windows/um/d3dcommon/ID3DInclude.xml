<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d3dcommon.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ID3DInclude" access="public" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="Open" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="IncludeType">
                    <type>D3D_INCLUDE_TYPE</type>
                </param>
                <param name="pFileName">
                    <type>sbyte*</type>
                </param>
                <param name="pParentData">
                    <type>void*</type>
                </param>
                <param name="ppData">
                    <type>void**</type>
                </param>
                <param name="pBytes">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3DInclude*, D3D_INCLUDE_TYPE, sbyte*, void*, void**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ID3DInclude*)Unsafe.AsPointer(ref this)</param>, <param name="IncludeType">IncludeType</param>, <param name="pFileName">pFileName</param>, <param name="pParentData">pParentData</param>, <param name="ppData">ppData</param>, <param name="pBytes">pBytes</param>);
        </code>
                </body>
            </function>
            <function name="Close" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pData">
                    <type>void*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3DInclude*, void*, int&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ID3DInclude*)Unsafe.AsPointer(ref this)</param>, <param name="pData">pData</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
