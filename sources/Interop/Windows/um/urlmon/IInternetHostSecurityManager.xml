<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/urlmon.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IInternetHostSecurityManager" access="public" native="struct IInternetHostSecurityManager : IUnknown" uuid="3af280b6-cb3f-11d0-891e-00c04fb6bfc4" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IInternetHostSecurityManager*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IInternetHostSecurityManager*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IInternetHostSecurityManager*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IInternetHostSecurityManager*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IInternetHostSecurityManager*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IInternetHostSecurityManager*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetSecurityId" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pbSecurityId">
                    <type>byte*</type>
                </param>
                <param name="pcbSecurityId">
                    <type>uint*</type>
                </param>
                <param name="dwReserved">
                    <type>nuint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IInternetHostSecurityManager*, byte*, uint*, nuint, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IInternetHostSecurityManager*)Unsafe.AsPointer(ref this)</param>, <param name="pbSecurityId">pbSecurityId</param>, <param name="pcbSecurityId">pcbSecurityId</param>, <param name="dwReserved">dwReserved</param>);
        </code>
                </body>
            </function>
            <function name="ProcessUrlAction" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwAction">
                    <type>uint</type>
                </param>
                <param name="pPolicy">
                    <type>byte*</type>
                </param>
                <param name="cbPolicy">
                    <type>uint</type>
                </param>
                <param name="pContext">
                    <type>byte*</type>
                </param>
                <param name="cbContext">
                    <type>uint</type>
                </param>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="dwReserved">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IInternetHostSecurityManager*, uint, byte*, uint, byte*, uint, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IInternetHostSecurityManager*)Unsafe.AsPointer(ref this)</param>, <param name="dwAction">dwAction</param>, <param name="pPolicy">pPolicy</param>, <param name="cbPolicy">cbPolicy</param>, <param name="pContext">pContext</param>, <param name="cbContext">cbContext</param>, <param name="dwFlags">dwFlags</param>, <param name="dwReserved">dwReserved</param>);
        </code>
                </body>
            </function>
            <function name="QueryCustomPolicy" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="ppPolicy">
                    <type>byte**</type>
                </param>
                <param name="pcbPolicy">
                    <type>uint*</type>
                </param>
                <param name="pContext">
                    <type>byte*</type>
                </param>
                <param name="cbContext">
                    <type>uint</type>
                </param>
                <param name="dwReserved">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IInternetHostSecurityManager*, Guid*, byte**, uint*, byte*, uint, uint, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IInternetHostSecurityManager*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="ppPolicy">ppPolicy</param>, <param name="pcbPolicy">pcbPolicy</param>, <param name="pContext">pContext</param>, <param name="cbContext">cbContext</param>, <param name="dwReserved">dwReserved</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
