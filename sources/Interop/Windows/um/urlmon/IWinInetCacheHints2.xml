<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/urlmon.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IWinInetCacheHints2" access="public" native="struct IWinInetCacheHints2 : IWinInetCacheHints" uuid="7857aeac-d31f-49bf-884e-dd46df36780a" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWinInetCacheHints2*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IWinInetCacheHints2*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWinInetCacheHints2*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IWinInetCacheHints2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWinInetCacheHints2*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IWinInetCacheHints2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetCacheExtension" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pwzExt">
                    <type>ushort*</type>
                </param>
                <param name="pszCacheFile">
                    <type>void*</type>
                </param>
                <param name="pcbCacheFile">
                    <type>uint*</type>
                </param>
                <param name="pdwWinInetError">
                    <type>uint*</type>
                </param>
                <param name="pdwReserved">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWinInetCacheHints2*, ushort*, void*, uint*, uint*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IWinInetCacheHints2*)Unsafe.AsPointer(ref this)</param>, <param name="pwzExt">pwzExt</param>, <param name="pszCacheFile">pszCacheFile</param>, <param name="pcbCacheFile">pcbCacheFile</param>, <param name="pdwWinInetError">pdwWinInetError</param>, <param name="pdwReserved">pdwReserved</param>);
        </code>
                </body>
            </function>
            <function name="SetCacheExtension2" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pwzExt">
                    <type>ushort*</type>
                </param>
                <param name="pwzCacheFile">
                    <type>ushort*</type>
                </param>
                <param name="pcchCacheFile">
                    <type>uint*</type>
                </param>
                <param name="pdwWinInetError">
                    <type>uint*</type>
                </param>
                <param name="pdwReserved">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWinInetCacheHints2*, ushort*, ushort*, uint*, uint*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IWinInetCacheHints2*)Unsafe.AsPointer(ref this)</param>, <param name="pwzExt">pwzExt</param>, <param name="pwzCacheFile">pwzCacheFile</param>, <param name="pcchCacheFile">pcchCacheFile</param>, <param name="pdwWinInetError">pdwWinInetError</param>, <param name="pdwReserved">pdwReserved</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
