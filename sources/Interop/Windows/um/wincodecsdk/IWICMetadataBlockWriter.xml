<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wincodecsdk.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IWICMetadataBlockWriter" access="public" native="struct IWICMetadataBlockWriter : IWICMetadataBlockReader" uuid="08fb9676-b444-41e8-8dbe-6a53a542bff1" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetContainerFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguidContainerFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="pguidContainerFormat">pguidContainerFormat</param>);
        </code>
                </body>
            </function>
            <function name="GetCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="pcCount">pcCount</param>);
        </code>
                </body>
            </function>
            <function name="GetReaderByIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nIndex">
                    <type>uint</type>
                </param>
                <param name="ppIMetadataReader">
                    <type>IWICMetadataReader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, uint, IWICMetadataReader**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="nIndex">nIndex</param>, <param name="ppIMetadataReader">ppIMetadataReader</param>);
        </code>
                </body>
            </function>
            <function name="GetEnumerator" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIEnumMetadata">
                    <type>IEnumUnknown**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, IEnumUnknown**, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="ppIEnumMetadata">ppIEnumMetadata</param>);
        </code>
                </body>
            </function>
            <function name="InitializeFromBlockReader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIMDBlockReader">
                    <type>IWICMetadataBlockReader*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, IWICMetadataBlockReader*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="pIMDBlockReader">pIMDBlockReader</param>);
        </code>
                </body>
            </function>
            <function name="GetWriterByIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nIndex">
                    <type>uint</type>
                </param>
                <param name="ppIMetadataWriter">
                    <type>IWICMetadataWriter**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, uint, IWICMetadataWriter**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="nIndex">nIndex</param>, <param name="ppIMetadataWriter">ppIMetadataWriter</param>);
        </code>
                </body>
            </function>
            <function name="AddWriter" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pIMetadataWriter">
                    <type>IWICMetadataWriter*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, IWICMetadataWriter*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="pIMetadataWriter">pIMetadataWriter</param>);
        </code>
                </body>
            </function>
            <function name="SetWriterByIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nIndex">
                    <type>uint</type>
                </param>
                <param name="pIMetadataWriter">
                    <type>IWICMetadataWriter*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, uint, IWICMetadataWriter*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="nIndex">nIndex</param>, <param name="pIMetadataWriter">pIMetadataWriter</param>);
        </code>
                </body>
            </function>
            <function name="RemoveWriterByIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="nIndex">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataBlockWriter*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IWICMetadataBlockWriter*)Unsafe.AsPointer(ref this)</param>, <param name="nIndex">nIndex</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
