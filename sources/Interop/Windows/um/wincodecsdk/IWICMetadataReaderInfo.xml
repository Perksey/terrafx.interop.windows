<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/wincodecsdk.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IWICMetadataReaderInfo" access="public" native="struct IWICMetadataReaderInfo : IWICMetadataHandlerInfo" uuid="eebf1f5b-07c1-4447-a3ab-22acaf78a804" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetComponentType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pType">
                    <type>WICComponentType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, WICComponentType*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pType">pType</param>);
        </code>
                </body>
            </function>
            <function name="GetCLSID" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pclsid">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pclsid">pclsid</param>);
        </code>
                </body>
            </function>
            <function name="GetSigningStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pStatus">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pStatus">pStatus</param>);
        </code>
                </body>
            </function>
            <function name="GetAuthor" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cchAuthor">
                    <type>uint</type>
                </param>
                <param name="wzAuthor">
                    <type>ushort*</type>
                </param>
                <param name="pcchActual">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="cchAuthor">cchAuthor</param>, <param name="wzAuthor">wzAuthor</param>, <param name="pcchActual">pcchActual</param>);
        </code>
                </body>
            </function>
            <function name="GetVendorGUID" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguidVendor">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pguidVendor">pguidVendor</param>);
        </code>
                </body>
            </function>
            <function name="GetVersion" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cchVersion">
                    <type>uint</type>
                </param>
                <param name="wzVersion">
                    <type>ushort*</type>
                </param>
                <param name="pcchActual">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="cchVersion">cchVersion</param>, <param name="wzVersion">wzVersion</param>, <param name="pcchActual">pcchActual</param>);
        </code>
                </body>
            </function>
            <function name="GetSpecVersion" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cchSpecVersion">
                    <type>uint</type>
                </param>
                <param name="wzSpecVersion">
                    <type>ushort*</type>
                </param>
                <param name="pcchActual">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="cchSpecVersion">cchSpecVersion</param>, <param name="wzSpecVersion">wzSpecVersion</param>, <param name="pcchActual">pcchActual</param>);
        </code>
                </body>
            </function>
            <function name="GetFriendlyName" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cchFriendlyName">
                    <type>uint</type>
                </param>
                <param name="wzFriendlyName">
                    <type>ushort*</type>
                </param>
                <param name="pcchActual">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="cchFriendlyName">cchFriendlyName</param>, <param name="wzFriendlyName">wzFriendlyName</param>, <param name="pcchActual">pcchActual</param>);
        </code>
                </body>
            </function>
            <function name="GetMetadataFormat" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pguidMetadataFormat">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pguidMetadataFormat">pguidMetadataFormat</param>);
        </code>
                </body>
            </function>
            <function name="GetContainerFormats" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cContainerFormats">
                    <type>uint</type>
                </param>
                <param name="pguidContainerFormats">
                    <type>Guid*</type>
                </param>
                <param name="pcchActual">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint, Guid*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="cContainerFormats">cContainerFormats</param>, <param name="pguidContainerFormats">pguidContainerFormats</param>, <param name="pcchActual">pcchActual</param>);
        </code>
                </body>
            </function>
            <function name="GetDeviceManufacturer" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cchDeviceManufacturer">
                    <type>uint</type>
                </param>
                <param name="wzDeviceManufacturer">
                    <type>ushort*</type>
                </param>
                <param name="pcchActual">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="cchDeviceManufacturer">cchDeviceManufacturer</param>, <param name="wzDeviceManufacturer">wzDeviceManufacturer</param>, <param name="pcchActual">pcchActual</param>);
        </code>
                </body>
            </function>
            <function name="GetDeviceModels" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="cchDeviceModels">
                    <type>uint</type>
                </param>
                <param name="wzDeviceModels">
                    <type>ushort*</type>
                </param>
                <param name="pcchActual">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, uint, ushort*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="cchDeviceModels">cchDeviceModels</param>, <param name="wzDeviceModels">wzDeviceModels</param>, <param name="pcchActual">pcchActual</param>);
        </code>
                </body>
            </function>
            <function name="DoesRequireFullStream" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfRequiresFullStream">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pfRequiresFullStream">pfRequiresFullStream</param>);
        </code>
                </body>
            </function>
            <function name="DoesSupportPadding" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfSupportsPadding">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pfSupportsPadding">pfSupportsPadding</param>);
        </code>
                </body>
            </function>
            <function name="DoesRequireFixedSize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfFixedSize">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="pfFixedSize">pfFixedSize</param>);
        </code>
                </body>
            </function>
            <function name="GetPatterns" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidContainerFormat">
                    <type>Guid*</type>
                </param>
                <param name="cbSize">
                    <type>uint</type>
                </param>
                <param name="pPattern">
                    <type>WICMetadataPattern*</type>
                </param>
                <param name="pcCount">
                    <type>uint*</type>
                </param>
                <param name="pcbActual">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, Guid*, uint, WICMetadataPattern*, uint*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="guidContainerFormat">guidContainerFormat</param>, <param name="cbSize">cbSize</param>, <param name="pPattern">pPattern</param>, <param name="pcCount">pcCount</param>, <param name="pcbActual">pcbActual</param>);
        </code>
                </body>
            </function>
            <function name="MatchesPattern" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidContainerFormat">
                    <type>Guid*</type>
                </param>
                <param name="pIStream">
                    <type>IStream*</type>
                </param>
                <param name="pfMatches">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, Guid*, IStream*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="guidContainerFormat">guidContainerFormat</param>, <param name="pIStream">pIStream</param>, <param name="pfMatches">pfMatches</param>);
        </code>
                </body>
            </function>
            <function name="CreateInstance" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppIReader">
                    <type>IWICMetadataReader**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IWICMetadataReaderInfo*, IWICMetadataReader**, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IWICMetadataReaderInfo*)Unsafe.AsPointer(ref this)</param>, <param name="ppIReader">ppIReader</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
