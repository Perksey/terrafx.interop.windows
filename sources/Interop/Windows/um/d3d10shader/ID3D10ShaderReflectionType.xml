<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/d3d10shader.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="ID3D10ShaderReflectionType" access="public" uuid="c530ad7d-9b16-4395-a979-ba2ecff83add" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="GetDesc" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDesc">
                    <type>D3D10_SHADER_TYPE_DESC*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D10ShaderReflectionType*, D3D10_SHADER_TYPE_DESC*, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(ID3D10ShaderReflectionType*)Unsafe.AsPointer(ref this)</param>, <param name="pDesc">pDesc</param>);
        </code>
                </body>
            </function>
            <function name="GetMemberTypeByIndex" access="public" unsafe="true">
                <type native="ID3D10ShaderReflectionType *">ID3D10ShaderReflectionType*</type>
                <param name="Index">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D10ShaderReflectionType*, uint, ID3D10ShaderReflectionType*&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(ID3D10ShaderReflectionType*)Unsafe.AsPointer(ref this)</param>, <param name="Index">Index</param>);
        </code>
                </body>
            </function>
            <function name="GetMemberTypeByName" access="public" unsafe="true">
                <type native="ID3D10ShaderReflectionType *">ID3D10ShaderReflectionType*</type>
                <param name="Name">
                    <type>sbyte*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D10ShaderReflectionType*, sbyte*, ID3D10ShaderReflectionType*&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(ID3D10ShaderReflectionType*)Unsafe.AsPointer(ref this)</param>, <param name="Name">Name</param>);
        </code>
                </body>
            </function>
            <function name="GetMemberTypeName" access="public" unsafe="true">
                <type native="LPCSTR">sbyte*</type>
                <param name="Index">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;ID3D10ShaderReflectionType*, uint, sbyte*&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(ID3D10ShaderReflectionType*)Unsafe.AsPointer(ref this)</param>, <param name="Index">Index</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
