<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/dcomp.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDCompositionTableTransferEffect" access="public" native="struct IDCompositionTableTransferEffect : IDCompositionFilterEffect" uuid="9b7e82e2-69c5-4eb4-a5f5-a7033f5132cd" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetInput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="input">
                    <type>IUnknown*</type>
                </param>
                <param name="flags">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, IUnknown*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="input">input</param>, <param name="flags">flags</param>);
        </code>
                </body>
            </function>
            <function name="SetRedTable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="tableValues">
                    <type>float*</type>
                </param>
                <param name="count">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, float*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="tableValues">tableValues</param>, <param name="count">count</param>);
        </code>
                </body>
            </function>
            <function name="SetGreenTable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="tableValues">
                    <type>float*</type>
                </param>
                <param name="count">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, float*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="tableValues">tableValues</param>, <param name="count">count</param>);
        </code>
                </body>
            </function>
            <function name="SetBlueTable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="tableValues">
                    <type>float*</type>
                </param>
                <param name="count">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, float*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="tableValues">tableValues</param>, <param name="count">count</param>);
        </code>
                </body>
            </function>
            <function name="SetAlphaTable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="tableValues">
                    <type>float*</type>
                </param>
                <param name="count">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, float*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="tableValues">tableValues</param>, <param name="count">count</param>);
        </code>
                </body>
            </function>
            <function name="SetRedDisable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="redDisable">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, int, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="redDisable">redDisable</param>);
        </code>
                </body>
            </function>
            <function name="SetGreenDisable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="greenDisable">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, int, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="greenDisable">greenDisable</param>);
        </code>
                </body>
            </function>
            <function name="SetBlueDisable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="blueDisable">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, int, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="blueDisable">blueDisable</param>);
        </code>
                </body>
            </function>
            <function name="SetAlphaDisable" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="alphaDisable">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, int, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="alphaDisable">alphaDisable</param>);
        </code>
                </body>
            </function>
            <function name="SetClampOutput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="clampOutput">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, int, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="clampOutput">clampOutput</param>);
        </code>
                </body>
            </function>
            <function name="SetRedTableValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="value">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, float, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="SetRedTableValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
            <function name="SetGreenTableValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="value">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, float, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="SetGreenTableValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
            <function name="SetBlueTableValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="value">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, float, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="SetBlueTableValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
            <function name="SetAlphaTableValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="value">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, float, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="SetAlphaTableValue" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="index">
                    <type>uint</type>
                </param>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionTableTransferEffect*, uint, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IDCompositionTableTransferEffect*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
