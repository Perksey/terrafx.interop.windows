<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/dcomp.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IDCompositionVisual3" access="public" native="struct IDCompositionVisual3 : IDCompositionVisualDebug" uuid="2775f462-b6c1-4015-b0be-b3e7d6a4976d" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetOffsetX" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="offsetX">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, float, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="offsetX">offsetX</param>);
        </code>
                </body>
            </function>
            <function name="SetOffsetX" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
            <function name="SetOffsetY" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="offsetY">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, float, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="offsetY">offsetY</param>);
        </code>
                </body>
            </function>
            <function name="SetOffsetY" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
            <function name="SetTransform" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="matrix">
                    <type>D2D_MATRIX_3X2_F*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, D2D_MATRIX_3X2_F*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="matrix">matrix</param>);
        </code>
                </body>
            </function>
            <function name="SetTransform" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="transform">
                    <type>IDCompositionTransform*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionTransform*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="transform">transform</param>);
        </code>
                </body>
            </function>
            <function name="SetTransformParent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="visual">
                    <type>IDCompositionVisual*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionVisual*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="visual">visual</param>);
        </code>
                </body>
            </function>
            <function name="SetEffect" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="effect">
                    <type>IDCompositionEffect*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionEffect*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="effect">effect</param>);
        </code>
                </body>
            </function>
            <function name="SetBitmapInterpolationMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="interpolationMode">
                    <type>DCOMPOSITION_BITMAP_INTERPOLATION_MODE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, DCOMPOSITION_BITMAP_INTERPOLATION_MODE, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="interpolationMode">interpolationMode</param>);
        </code>
                </body>
            </function>
            <function name="SetBorderMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="borderMode">
                    <type>DCOMPOSITION_BORDER_MODE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, DCOMPOSITION_BORDER_MODE, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="borderMode">borderMode</param>);
        </code>
                </body>
            </function>
            <function name="SetClip" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="rect">
                    <type>D2D_RECT_F*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, D2D_RECT_F*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="rect">rect</param>);
        </code>
                </body>
            </function>
            <function name="SetClip" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="clip">
                    <type>IDCompositionClip*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionClip*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="clip">clip</param>);
        </code>
                </body>
            </function>
            <function name="SetContent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="content">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="content">content</param>);
        </code>
                </body>
            </function>
            <function name="AddVisual" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="visual">
                    <type>IDCompositionVisual*</type>
                </param>
                <param name="insertAbove">
                    <type>int</type>
                </param>
                <param name="referenceVisual">
                    <type>IDCompositionVisual*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionVisual*, int, IDCompositionVisual*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="visual">visual</param>, <param name="insertAbove">insertAbove</param>, <param name="referenceVisual">referenceVisual</param>);
        </code>
                </body>
            </function>
            <function name="RemoveVisual" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="visual">
                    <type>IDCompositionVisual*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionVisual*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="visual">visual</param>);
        </code>
                </body>
            </function>
            <function name="RemoveAllVisuals" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetCompositeMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="compositeMode">
                    <type>DCOMPOSITION_COMPOSITE_MODE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, DCOMPOSITION_COMPOSITE_MODE, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="compositeMode">compositeMode</param>);
        </code>
                </body>
            </function>
            <function name="SetOpacityMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="mode">
                    <type>DCOMPOSITION_OPACITY_MODE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, DCOMPOSITION_OPACITY_MODE, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="mode">mode</param>);
        </code>
                </body>
            </function>
            <function name="SetBackFaceVisibility" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="visibility">
                    <type>DCOMPOSITION_BACKFACE_VISIBILITY</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, DCOMPOSITION_BACKFACE_VISIBILITY, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="visibility">visibility</param>);
        </code>
                </body>
            </function>
            <function name="EnableHeatMap" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="color">
                    <type>DXGI_RGBA*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, DXGI_RGBA*, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="color">color</param>);
        </code>
                </body>
            </function>
            <function name="DisableHeatMap" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="EnableRedrawRegions" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="DisableRedrawRegions" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetDepthMode" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="mode">
                    <type>DCOMPOSITION_DEPTH_MODE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, DCOMPOSITION_DEPTH_MODE, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="mode">mode</param>);
        </code>
                </body>
            </function>
            <function name="SetOffsetZ" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="offsetZ">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, float, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="offsetZ">offsetZ</param>);
        </code>
                </body>
            </function>
            <function name="SetOffsetZ" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
            <function name="SetOpacity" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="opacity">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, float, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="opacity">opacity</param>);
        </code>
                </body>
            </function>
            <function name="SetOpacity" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="animation">
                    <type>IDCompositionAnimation*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionAnimation*, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="animation">animation</param>);
        </code>
                </body>
            </function>
            <function name="SetTransform" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="matrix">
                    <type>D2D_MATRIX_4X4_F*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, D2D_MATRIX_4X4_F*, int&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="matrix">matrix</param>);
        </code>
                </body>
            </function>
            <function name="SetTransform" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="transform">
                    <type>IDCompositionTransform3D*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, IDCompositionTransform3D*, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="transform">transform</param>);
        </code>
                </body>
            </function>
            <function name="SetVisible" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="visible">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IDCompositionVisual3*, int, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(IDCompositionVisual3*)Unsafe.AsPointer(ref this)</param>, <param name="visible">visible</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
