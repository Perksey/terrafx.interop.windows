<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFVideoProcessorControl3" access="public" native="struct IMFVideoProcessorControl3 : IMFVideoProcessorControl2" uuid="2424b3f2-eb23-40f1-91aa-74bddeea0883" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetBorderColor" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pBorderColor">
                    <type>MFARGB*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, MFARGB*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="pBorderColor">pBorderColor</param>);
        </code>
                </body>
            </function>
            <function name="SetSourceRectangle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pSrcRect">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="pSrcRect">pSrcRect</param>);
        </code>
                </body>
            </function>
            <function name="SetDestinationRectangle" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDstRect">
                    <type>RECT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, RECT*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="pDstRect">pDstRect</param>);
        </code>
                </body>
            </function>
            <function name="SetMirror" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="eMirror">
                    <type>MF_VIDEO_PROCESSOR_MIRROR</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, MF_VIDEO_PROCESSOR_MIRROR, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="eMirror">eMirror</param>);
        </code>
                </body>
            </function>
            <function name="SetRotation" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="eRotation">
                    <type>MF_VIDEO_PROCESSOR_ROTATION</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, MF_VIDEO_PROCESSOR_ROTATION, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="eRotation">eRotation</param>);
        </code>
                </body>
            </function>
            <function name="SetConstrictionSize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pConstrictionSize">
                    <type>SIZE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, SIZE*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="pConstrictionSize">pConstrictionSize</param>);
        </code>
                </body>
            </function>
            <function name="SetRotationOverride" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="uiRotation">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="uiRotation">uiRotation</param>);
        </code>
                </body>
            </function>
            <function name="EnableHardwareEffects" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fEnabled">
                    <type>int</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, int, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="fEnabled">fEnabled</param>);
        </code>
                </body>
            </function>
            <function name="GetSupportedHardwareEffects" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="puiSupport">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="puiSupport">puiSupport</param>);
        </code>
                </body>
            </function>
            <function name="GetNaturalOutputType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppType">
                    <type>IMFMediaType**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, IMFMediaType**, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="ppType">ppType</param>);
        </code>
                </body>
            </function>
            <function name="EnableSphericalVideoProcessing" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="fEnable">
                    <type>int</type>
                </param>
                <param name="eFormat">
                    <type>MFVideoSphericalFormat</type>
                </param>
                <param name="eProjectionMode">
                    <type>MFVideoSphericalProjectionMode</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, int, MFVideoSphericalFormat, MFVideoSphericalProjectionMode, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="fEnable">fEnable</param>, <param name="eFormat">eFormat</param>, <param name="eProjectionMode">eProjectionMode</param>);
        </code>
                </body>
            </function>
            <function name="SetSphericalVideoProperties" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="X">
                    <type>float</type>
                </param>
                <param name="Y">
                    <type>float</type>
                </param>
                <param name="Z">
                    <type>float</type>
                </param>
                <param name="W">
                    <type>float</type>
                </param>
                <param name="fieldOfView">
                    <type>float</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, float, float, float, float, float, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="X">X</param>, <param name="Y">Y</param>, <param name="Z">Z</param>, <param name="W">W</param>, <param name="fieldOfView">fieldOfView</param>);
        </code>
                </body>
            </function>
            <function name="SetOutputDevice" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pOutputDevice">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFVideoProcessorControl3*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IMFVideoProcessorControl3*)Unsafe.AsPointer(ref this)</param>, <param name="pOutputDevice">pOutputDevice</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
