<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFHttpDownloadRequest" access="public" native="struct IMFHttpDownloadRequest : IUnknown" uuid="f779fddf-26e7-4270-8a8b-b983d1859de0" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="AddHeader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="szHeader">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="szHeader">szHeader</param>);
        </code>
                </body>
            </function>
            <function name="BeginSendRequest" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pbPayload">
                    <type>byte*</type>
                </param>
                <param name="cbPayload">
                    <type>uint</type>
                </param>
                <param name="pCallback">
                    <type>IMFAsyncCallback*</type>
                </param>
                <param name="punkState">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, byte*, uint, IMFAsyncCallback*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pbPayload">pbPayload</param>, <param name="cbPayload">cbPayload</param>, <param name="pCallback">pCallback</param>, <param name="punkState">punkState</param>);
        </code>
                </body>
            </function>
            <function name="EndSendRequest" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResult">
                    <type>IMFAsyncResult*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, IMFAsyncResult*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pResult">pResult</param>);
        </code>
                </body>
            </function>
            <function name="BeginReceiveResponse" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCallback">
                    <type>IMFAsyncCallback*</type>
                </param>
                <param name="punkState">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, IMFAsyncCallback*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pCallback">pCallback</param>, <param name="punkState">punkState</param>);
        </code>
                </body>
            </function>
            <function name="EndReceiveResponse" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResult">
                    <type>IMFAsyncResult*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, IMFAsyncResult*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pResult">pResult</param>);
        </code>
                </body>
            </function>
            <function name="BeginReadPayload" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pb">
                    <type>byte*</type>
                </param>
                <param name="cb">
                    <type>uint</type>
                </param>
                <param name="pCallback">
                    <type>IMFAsyncCallback*</type>
                </param>
                <param name="punkState">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, byte*, uint, IMFAsyncCallback*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pb">pb</param>, <param name="cb">cb</param>, <param name="pCallback">pCallback</param>, <param name="punkState">punkState</param>);
        </code>
                </body>
            </function>
            <function name="EndReadPayload" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResult">
                    <type>IMFAsyncResult*</type>
                </param>
                <param name="pqwOffset">
                    <type>ulong*</type>
                </param>
                <param name="pcbRead">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, IMFAsyncResult*, ulong*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pResult">pResult</param>, <param name="pqwOffset">pqwOffset</param>, <param name="pcbRead">pcbRead</param>);
        </code>
                </body>
            </function>
            <function name="QueryHeader" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="szHeaderName">
                    <type>ushort*</type>
                </param>
                <param name="dwIndex">
                    <type>uint</type>
                </param>
                <param name="ppszHeaderValue">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, ushort*, uint, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="szHeaderName">szHeaderName</param>, <param name="dwIndex">dwIndex</param>, <param name="ppszHeaderValue">ppszHeaderValue</param>);
        </code>
                </body>
            </function>
            <function name="GetURL" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppszURL">
                    <type>ushort**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, ushort**, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="ppszURL">ppszURL</param>);
        </code>
                </body>
            </function>
            <function name="HasNullSourceOrigin" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfNullSourceOrigin">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pfNullSourceOrigin">pfNullSourceOrigin</param>);
        </code>
                </body>
            </function>
            <function name="GetTimeSeekResult" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pqwStartTime">
                    <type>ulong*</type>
                </param>
                <param name="pqwStopTime">
                    <type>ulong*</type>
                </param>
                <param name="pqwDuration">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, ulong*, ulong*, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pqwStartTime">pqwStartTime</param>, <param name="pqwStopTime">pqwStopTime</param>, <param name="pqwDuration">pqwDuration</param>);
        </code>
                </body>
            </function>
            <function name="GetHttpStatus" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwHttpStatus">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pdwHttpStatus">pdwHttpStatus</param>);
        </code>
                </body>
            </function>
            <function name="GetAtEndOfPayload" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pfAtEndOfPayload">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pfAtEndOfPayload">pfAtEndOfPayload</param>);
        </code>
                </body>
            </function>
            <function name="GetTotalLength" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pqwTotalLength">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pqwTotalLength">pqwTotalLength</param>);
        </code>
                </body>
            </function>
            <function name="GetRangeEndOffset" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pqwRangeEnd">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>, <param name="pqwRangeEnd">pqwRangeEnd</param>);
        </code>
                </body>
            </function>
            <function name="Close" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFHttpDownloadRequest*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IMFHttpDownloadRequest*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
