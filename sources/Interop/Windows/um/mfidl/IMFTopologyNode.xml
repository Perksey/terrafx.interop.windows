<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFTopologyNode" access="public" native="struct IMFTopologyNode : IMFAttributes" uuid="83cf873a-f6da-4bc8-823f-bacfd55dc430" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetItem" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="GetItemType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pType">
                    <type>MF_ATTRIBUTE_TYPE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, MF_ATTRIBUTE_TYPE*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pType">pType</param>);
        </code>
                </body>
            </function>
            <function name="CompareItem" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="Value">
                    <type>PROPVARIANT*</type>
                </param>
                <param name="pbResult">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, PROPVARIANT*, int*, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="Value">Value</param>, <param name="pbResult">pbResult</param>);
        </code>
                </body>
            </function>
            <function name="Compare" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pTheirs">
                    <type>IMFAttributes*</type>
                </param>
                <param name="MatchType">
                    <type>MF_ATTRIBUTES_MATCH_TYPE</type>
                </param>
                <param name="pbResult">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, IMFAttributes*, MF_ATTRIBUTES_MATCH_TYPE, int*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pTheirs">pTheirs</param>, <param name="MatchType">MatchType</param>, <param name="pbResult">pbResult</param>);
        </code>
                </body>
            </function>
            <function name="GetUINT32" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="punValue">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="punValue">punValue</param>);
        </code>
                </body>
            </function>
            <function name="GetUINT64" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="punValue">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="punValue">punValue</param>);
        </code>
                </body>
            </function>
            <function name="GetDouble" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pfValue">
                    <type>double*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, double*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pfValue">pfValue</param>);
        </code>
                </body>
            </function>
            <function name="GetGUID" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pguidValue">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pguidValue">pguidValue</param>);
        </code>
                </body>
            </function>
            <function name="GetStringLength" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pcchLength">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pcchLength">pcchLength</param>);
        </code>
                </body>
            </function>
            <function name="GetString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pwszValue">
                    <type>ushort*</type>
                </param>
                <param name="cchBufSize">
                    <type>uint</type>
                </param>
                <param name="pcchLength">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, ushort*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pwszValue">pwszValue</param>, <param name="cchBufSize">cchBufSize</param>, <param name="pcchLength">pcchLength</param>);
        </code>
                </body>
            </function>
            <function name="GetAllocatedString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="ppwszValue">
                    <type>ushort**</type>
                </param>
                <param name="pcchLength">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, ushort**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="ppwszValue">ppwszValue</param>, <param name="pcchLength">pcchLength</param>);
        </code>
                </body>
            </function>
            <function name="GetBlobSize" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pcbBlobSize">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pcbBlobSize">pcbBlobSize</param>);
        </code>
                </body>
            </function>
            <function name="GetBlob" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pBuf">
                    <type>byte*</type>
                </param>
                <param name="cbBufSize">
                    <type>uint</type>
                </param>
                <param name="pcbBlobSize">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, byte*, uint, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pBuf">pBuf</param>, <param name="cbBufSize">cbBufSize</param>, <param name="pcbBlobSize">pcbBlobSize</param>);
        </code>
                </body>
            </function>
            <function name="GetAllocatedBlob" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="ppBuf">
                    <type>byte**</type>
                </param>
                <param name="pcbSize">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, byte**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">16</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="ppBuf">ppBuf</param>, <param name="pcbSize">pcbSize</param>);
        </code>
                </body>
            </function>
            <function name="GetUnknown" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppv">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">17</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="riid">riid</param>, <param name="ppv">ppv</param>);
        </code>
                </body>
            </function>
            <function name="SetItem" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="Value">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">18</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="Value">Value</param>);
        </code>
                </body>
            </function>
            <function name="DeleteItem" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">19</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>);
        </code>
                </body>
            </function>
            <function name="DeleteAllItems" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, int&gt;)(lpVtbl[<vtbl explicit="False">20</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetUINT32" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="unValue">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">21</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="unValue">unValue</param>);
        </code>
                </body>
            </function>
            <function name="SetUINT64" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="unValue">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">22</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="unValue">unValue</param>);
        </code>
                </body>
            </function>
            <function name="SetDouble" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="fValue">
                    <type>double</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, double, int&gt;)(lpVtbl[<vtbl explicit="False">23</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="fValue">fValue</param>);
        </code>
                </body>
            </function>
            <function name="SetGUID" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="guidValue">
                    <type>Guid*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, Guid*, int&gt;)(lpVtbl[<vtbl explicit="False">24</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="guidValue">guidValue</param>);
        </code>
                </body>
            </function>
            <function name="SetString" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="wszValue">
                    <type>ushort*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, ushort*, int&gt;)(lpVtbl[<vtbl explicit="False">25</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="wszValue">wszValue</param>);
        </code>
                </body>
            </function>
            <function name="SetBlob" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pBuf">
                    <type>byte*</type>
                </param>
                <param name="cbBufSize">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, byte*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">26</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pBuf">pBuf</param>, <param name="cbBufSize">cbBufSize</param>);
        </code>
                </body>
            </function>
            <function name="SetUnknown" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="guidKey">
                    <type>Guid*</type>
                </param>
                <param name="pUnknown">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, Guid*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">27</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="guidKey">guidKey</param>, <param name="pUnknown">pUnknown</param>);
        </code>
                </body>
            </function>
            <function name="LockStore" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, int&gt;)(lpVtbl[<vtbl explicit="False">28</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="UnlockStore" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, int&gt;)(lpVtbl[<vtbl explicit="False">29</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcItems">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">30</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pcItems">pcItems</param>);
        </code>
                </body>
            </function>
            <function name="GetItemByIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="unIndex">
                    <type>uint</type>
                </param>
                <param name="pguidKey">
                    <type>Guid*</type>
                </param>
                <param name="pValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">31</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="unIndex">unIndex</param>, <param name="pguidKey">pguidKey</param>, <param name="pValue">pValue</param>);
        </code>
                </body>
            </function>
            <function name="CopyAllItems" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pDest">
                    <type>IMFAttributes*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, IMFAttributes*, int&gt;)(lpVtbl[<vtbl explicit="False">32</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pDest">pDest</param>);
        </code>
                </body>
            </function>
            <function name="SetObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pObject">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">33</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pObject">pObject</param>);
        </code>
                </body>
            </function>
            <function name="GetObject" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppObject">
                    <type>IUnknown**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, IUnknown**, int&gt;)(lpVtbl[<vtbl explicit="False">34</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="ppObject">ppObject</param>);
        </code>
                </body>
            </function>
            <function name="GetNodeType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pType">
                    <type>MF_TOPOLOGY_TYPE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, MF_TOPOLOGY_TYPE*, int&gt;)(lpVtbl[<vtbl explicit="False">35</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pType">pType</param>);
        </code>
                </body>
            </function>
            <function name="GetTopoNodeID" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pID">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">36</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pID">pID</param>);
        </code>
                </body>
            </function>
            <function name="SetTopoNodeID" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ullTopoID">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">37</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="ullTopoID">ullTopoID</param>);
        </code>
                </body>
            </function>
            <function name="GetInputCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcInputs">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">38</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pcInputs">pcInputs</param>);
        </code>
                </body>
            </function>
            <function name="GetOutputCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pcOutputs">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">39</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pcOutputs">pcOutputs</param>);
        </code>
                </body>
            </function>
            <function name="ConnectOutput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwOutputIndex">
                    <type>uint</type>
                </param>
                <param name="pDownstreamNode">
                    <type>IMFTopologyNode*</type>
                </param>
                <param name="dwInputIndexOnDownstreamNode">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, IMFTopologyNode*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">40</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="dwOutputIndex">dwOutputIndex</param>, <param name="pDownstreamNode">pDownstreamNode</param>, <param name="dwInputIndexOnDownstreamNode">dwInputIndexOnDownstreamNode</param>);
        </code>
                </body>
            </function>
            <function name="DisconnectOutput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwOutputIndex">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">41</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="dwOutputIndex">dwOutputIndex</param>);
        </code>
                </body>
            </function>
            <function name="GetInput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwInputIndex">
                    <type>uint</type>
                </param>
                <param name="ppUpstreamNode">
                    <type>IMFTopologyNode**</type>
                </param>
                <param name="pdwOutputIndexOnUpstreamNode">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, IMFTopologyNode**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">42</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="dwInputIndex">dwInputIndex</param>, <param name="ppUpstreamNode">ppUpstreamNode</param>, <param name="pdwOutputIndexOnUpstreamNode">pdwOutputIndexOnUpstreamNode</param>);
        </code>
                </body>
            </function>
            <function name="GetOutput" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwOutputIndex">
                    <type>uint</type>
                </param>
                <param name="ppDownstreamNode">
                    <type>IMFTopologyNode**</type>
                </param>
                <param name="pdwInputIndexOnDownstreamNode">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, IMFTopologyNode**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">43</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="dwOutputIndex">dwOutputIndex</param>, <param name="ppDownstreamNode">ppDownstreamNode</param>, <param name="pdwInputIndexOnDownstreamNode">pdwInputIndexOnDownstreamNode</param>);
        </code>
                </body>
            </function>
            <function name="SetOutputPrefType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwOutputIndex">
                    <type>uint</type>
                </param>
                <param name="pType">
                    <type>IMFMediaType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, IMFMediaType*, int&gt;)(lpVtbl[<vtbl explicit="False">44</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="dwOutputIndex">dwOutputIndex</param>, <param name="pType">pType</param>);
        </code>
                </body>
            </function>
            <function name="GetOutputPrefType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwOutputIndex">
                    <type>uint</type>
                </param>
                <param name="ppType">
                    <type>IMFMediaType**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, IMFMediaType**, int&gt;)(lpVtbl[<vtbl explicit="False">45</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="dwOutputIndex">dwOutputIndex</param>, <param name="ppType">ppType</param>);
        </code>
                </body>
            </function>
            <function name="SetInputPrefType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwInputIndex">
                    <type>uint</type>
                </param>
                <param name="pType">
                    <type>IMFMediaType*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, IMFMediaType*, int&gt;)(lpVtbl[<vtbl explicit="False">46</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="dwInputIndex">dwInputIndex</param>, <param name="pType">pType</param>);
        </code>
                </body>
            </function>
            <function name="GetInputPrefType" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwInputIndex">
                    <type>uint</type>
                </param>
                <param name="ppType">
                    <type>IMFMediaType**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, uint, IMFMediaType**, int&gt;)(lpVtbl[<vtbl explicit="False">47</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="dwInputIndex">dwInputIndex</param>, <param name="ppType">ppType</param>);
        </code>
                </body>
            </function>
            <function name="CloneFrom" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pNode">
                    <type>IMFTopologyNode*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFTopologyNode*, IMFTopologyNode*, int&gt;)(lpVtbl[<vtbl explicit="False">48</vtbl>]))(<param special="thisPtr">(IMFTopologyNode*)Unsafe.AsPointer(ref this)</param>, <param name="pNode">pNode</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
