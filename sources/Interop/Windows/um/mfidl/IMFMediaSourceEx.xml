<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFMediaSourceEx" access="public" native="struct IMFMediaSourceEx : IMFMediaSource" uuid="3c9b2eb9-86d5-4514-a394-f56664f9f0d8" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetEvent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="ppEvent">
                    <type>IMFMediaEvent**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, uint, IMFMediaEvent**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="dwFlags">dwFlags</param>, <param name="ppEvent">ppEvent</param>);
        </code>
                </body>
            </function>
            <function name="BeginGetEvent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCallback">
                    <type>IMFAsyncCallback*</type>
                </param>
                <param name="punkState">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, IMFAsyncCallback*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="pCallback">pCallback</param>, <param name="punkState">punkState</param>);
        </code>
                </body>
            </function>
            <function name="EndGetEvent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResult">
                    <type>IMFAsyncResult*</type>
                </param>
                <param name="ppEvent">
                    <type>IMFMediaEvent**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, IMFAsyncResult*, IMFMediaEvent**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="pResult">pResult</param>, <param name="ppEvent">ppEvent</param>);
        </code>
                </body>
            </function>
            <function name="QueueEvent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="met">
                    <type>uint</type>
                </param>
                <param name="guidExtendedType">
                    <type>Guid*</type>
                </param>
                <param name="hrStatus">
                    <type>int</type>
                </param>
                <param name="pvValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, uint, Guid*, int, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="met">met</param>, <param name="guidExtendedType">guidExtendedType</param>, <param name="hrStatus">hrStatus</param>, <param name="pvValue">pvValue</param>);
        </code>
                </body>
            </function>
            <function name="GetCharacteristics" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwCharacteristics">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="pdwCharacteristics">pdwCharacteristics</param>);
        </code>
                </body>
            </function>
            <function name="CreatePresentationDescriptor" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppPresentationDescriptor">
                    <type>IMFPresentationDescriptor**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, IMFPresentationDescriptor**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="ppPresentationDescriptor">ppPresentationDescriptor</param>);
        </code>
                </body>
            </function>
            <function name="Start" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pPresentationDescriptor">
                    <type>IMFPresentationDescriptor*</type>
                </param>
                <param name="pguidTimeFormat">
                    <type>Guid*</type>
                </param>
                <param name="pvarStartPosition">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, IMFPresentationDescriptor*, Guid*, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="pPresentationDescriptor">pPresentationDescriptor</param>, <param name="pguidTimeFormat">pguidTimeFormat</param>, <param name="pvarStartPosition">pvarStartPosition</param>);
        </code>
                </body>
            </function>
            <function name="Stop" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Pause" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Shutdown" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, int&gt;)(lpVtbl[<vtbl explicit="False">12</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetSourceAttributes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppAttributes">
                    <type>IMFAttributes**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, IMFAttributes**, int&gt;)(lpVtbl[<vtbl explicit="False">13</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="ppAttributes">ppAttributes</param>);
        </code>
                </body>
            </function>
            <function name="GetStreamAttributes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwStreamIdentifier">
                    <type>uint</type>
                </param>
                <param name="ppAttributes">
                    <type>IMFAttributes**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, uint, IMFAttributes**, int&gt;)(lpVtbl[<vtbl explicit="False">14</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="dwStreamIdentifier">dwStreamIdentifier</param>, <param name="ppAttributes">ppAttributes</param>);
        </code>
                </body>
            </function>
            <function name="SetD3DManager" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pManager">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaSourceEx*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">15</vtbl>]))(<param special="thisPtr">(IMFMediaSourceEx*)Unsafe.AsPointer(ref this)</param>, <param name="pManager">pManager</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
