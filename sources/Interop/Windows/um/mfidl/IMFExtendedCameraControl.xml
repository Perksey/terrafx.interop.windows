<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFExtendedCameraControl" access="public" native="struct IMFExtendedCameraControl : IUnknown" uuid="38e33520-fca1-4845-a27a-68b7c6ab3789" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetCapabilities" access="public" unsafe="true">
                <type native="ULONGLONG">ulong</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, ulong&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="SetFlags" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ulFlags">
                    <type>ulong</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, ulong, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>, <param name="ulFlags">ulFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetFlags" access="public" unsafe="true">
                <type native="ULONGLONG">ulong</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, ulong&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="LockPayload" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppPayload">
                    <type>byte**</type>
                </param>
                <param name="pulPayload">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, byte**, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>, <param name="ppPayload">ppPayload</param>, <param name="pulPayload">pulPayload</param>);
        </code>
                </body>
            </function>
            <function name="UnlockPayload" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="CommitSettings" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFExtendedCameraControl*, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFExtendedCameraControl*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
