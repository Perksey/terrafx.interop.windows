<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFMediaStream2" access="public" native="struct IMFMediaStream2 : IMFMediaStream" uuid="c5bc37d6-75c7-46a1-a132-81b5f723c20f" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetEvent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwFlags">
                    <type>uint</type>
                </param>
                <param name="ppEvent">
                    <type>IMFMediaEvent**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, uint, IMFMediaEvent**, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="dwFlags">dwFlags</param>, <param name="ppEvent">ppEvent</param>);
        </code>
                </body>
            </function>
            <function name="BeginGetEvent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pCallback">
                    <type>IMFAsyncCallback*</type>
                </param>
                <param name="punkState">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, IMFAsyncCallback*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="pCallback">pCallback</param>, <param name="punkState">punkState</param>);
        </code>
                </body>
            </function>
            <function name="EndGetEvent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pResult">
                    <type>IMFAsyncResult*</type>
                </param>
                <param name="ppEvent">
                    <type>IMFMediaEvent**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, IMFAsyncResult*, IMFMediaEvent**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="pResult">pResult</param>, <param name="ppEvent">ppEvent</param>);
        </code>
                </body>
            </function>
            <function name="QueueEvent" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="met">
                    <type>uint</type>
                </param>
                <param name="guidExtendedType">
                    <type>Guid*</type>
                </param>
                <param name="hrStatus">
                    <type>int</type>
                </param>
                <param name="pvValue">
                    <type>PROPVARIANT*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, uint, Guid*, int, PROPVARIANT*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="met">met</param>, <param name="guidExtendedType">guidExtendedType</param>, <param name="hrStatus">hrStatus</param>, <param name="pvValue">pvValue</param>);
        </code>
                </body>
            </function>
            <function name="GetMediaSource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppMediaSource">
                    <type>IMFMediaSource**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, IMFMediaSource**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="ppMediaSource">ppMediaSource</param>);
        </code>
                </body>
            </function>
            <function name="GetStreamDescriptor" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppStreamDescriptor">
                    <type>IMFStreamDescriptor**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, IMFStreamDescriptor**, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="ppStreamDescriptor">ppStreamDescriptor</param>);
        </code>
                </body>
            </function>
            <function name="RequestSample" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pToken">
                    <type>IUnknown*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, IUnknown*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="pToken">pToken</param>);
        </code>
                </body>
            </function>
            <function name="SetStreamState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>MF_STREAM_STATE</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, MF_STREAM_STATE, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
            <function name="GetStreamState" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="value">
                    <type>MF_STREAM_STATE*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFMediaStream2*, MF_STREAM_STATE*, int&gt;)(lpVtbl[<vtbl explicit="False">11</vtbl>]))(<param special="thisPtr">(IMFMediaStream2*)Unsafe.AsPointer(ref this)</param>, <param name="value">value</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
