<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
    <comment>
        // Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.
        
        // Ported from um/mfidl.h in the Windows SDK for Windows 10.0.19041.0
        // Original source is Copyright © Microsoft. All rights reserved.
        
    </comment>
    <namespace name="TerraFX.Interop">
        <struct name="IMFSensorGroup" access="public" native="struct IMFSensorGroup : IUnknown" uuid="4110243a-9757-461f-89f1-f22345bcab4e" vtbl="true" unsafe="true">
            <field name="lpVtbl" access="public">
                <type native="">void**</type>
            </field>
            <function name="QueryInterface" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="riid">
                    <type>Guid*</type>
                </param>
                <param name="ppvObject">
                    <type>void**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, Guid*, void**, int&gt;)(lpVtbl[<vtbl explicit="False">0</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="riid">riid</param>, <param name="ppvObject">ppvObject</param>);
        </code>
                </body>
            </function>
            <function name="AddRef" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, uint&gt;)(lpVtbl[<vtbl explicit="False">1</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="Release" access="public" unsafe="true">
                <type native="ULONG">uint</type>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, uint&gt;)(lpVtbl[<vtbl explicit="False">2</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>);
        </code>
                </body>
            </function>
            <function name="GetSymbolicLink" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="SymbolicLink">
                    <type>ushort*</type>
                </param>
                <param name="cchSymbolicLink">
                    <type>int</type>
                </param>
                <param name="pcchWritten">
                    <type>int*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, ushort*, int, int*, int&gt;)(lpVtbl[<vtbl explicit="False">3</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="SymbolicLink">SymbolicLink</param>, <param name="cchSymbolicLink">cchSymbolicLink</param>, <param name="pcchWritten">pcchWritten</param>);
        </code>
                </body>
            </function>
            <function name="GetFlags" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pFlags">
                    <type>ulong*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, ulong*, int&gt;)(lpVtbl[<vtbl explicit="False">4</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="pFlags">pFlags</param>);
        </code>
                </body>
            </function>
            <function name="GetSensorGroupAttributes" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppAttributes">
                    <type>IMFAttributes**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, IMFAttributes**, int&gt;)(lpVtbl[<vtbl explicit="False">5</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="ppAttributes">ppAttributes</param>);
        </code>
                </body>
            </function>
            <function name="GetSensorDeviceCount" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwCount">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">6</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="pdwCount">pdwCount</param>);
        </code>
                </body>
            </function>
            <function name="GetSensorDevice" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwIndex">
                    <type>uint</type>
                </param>
                <param name="ppDevice">
                    <type>IMFSensorDevice**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, uint, IMFSensorDevice**, int&gt;)(lpVtbl[<vtbl explicit="False">7</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="dwIndex">dwIndex</param>, <param name="ppDevice">ppDevice</param>);
        </code>
                </body>
            </function>
            <function name="SetDefaultSensorDeviceIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="dwIndex">
                    <type>uint</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, uint, int&gt;)(lpVtbl[<vtbl explicit="False">8</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="dwIndex">dwIndex</param>);
        </code>
                </body>
            </function>
            <function name="GetDefaultSensorDeviceIndex" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="pdwIndex">
                    <type>uint*</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, uint*, int&gt;)(lpVtbl[<vtbl explicit="False">9</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="pdwIndex">pdwIndex</param>);
        </code>
                </body>
            </function>
            <function name="CreateMediaSource" access="public" unsafe="true">
                <type native="HRESULT">int</type>
                <param name="ppSource">
                    <type>IMFMediaSource**</type>
                </param>
                <body>
                    <code>return ((delegate* unmanaged&lt;IMFSensorGroup*, IMFMediaSource**, int&gt;)(lpVtbl[<vtbl explicit="False">10</vtbl>]))(<param special="thisPtr">(IMFSensorGroup*)Unsafe.AsPointer(ref this)</param>, <param name="ppSource">ppSource</param>);
        </code>
                </body>
            </function>
        </struct>
    </namespace>
</bindings>
